[
  {
    "description": "",
    "tags": [
      {
        "title": "module",
        "description": null,
        "lineNumber": 1,
        "type": null,
        "name": "Eventr",
        "errors": [
          "Unknown content 'Delegate and undelegate events'"
        ]
      },
      {
        "title": "example",
        "description": "import { delegate } from \"./eventr\";\n \tdelegate(obj);\n\n \timport eventr from \"./eventr\";\n \teventr.delegate(obj);\n \teventr.undelegate(obj);\n \tclass Test {\n \t\tconstructor() {\n \t\t\tthis.delegate();\n \t\t}\n \t}\n \teventr(Test);",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 17,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 47
        }
      },
      "file": "C:\\Users\\iroutledge\\Documents\\Dev\\NICE-Experience\\src\\javascripts\\eventr.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "import { delegate } from \"./eventr\";\n \tdelegate(obj);\n\n \timport eventr from \"./eventr\";\n \teventr.delegate(obj);\n \teventr.undelegate(obj);\n \tclass Test {\n \t\tconstructor() {\n \t\t\tthis.delegate();\n \t\t}\n \t}\n \teventr(Test);"
      }
    ],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "DelegateEventSplitter",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "DelegateEventSplitter",
        "kind": "constant"
      }
    ],
    "namespace": "DelegateEventSplitter"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Delegates events on an object instance. Allows a consistent, declarative approach to binding events.\nExpects the instance parameter to have 2 properties:\n\t- $el - The jQuery element(s) to use as a context\n\t- events() - Function that returns an events hash\nBound events are namespaced with the 'EventNamespace' string.\nThe events hash is like Backbone's events hash and consists of {“event selector”: “callback”}.\nThe callback can either be a named method to call on the instance or a function itself.\nThe callback function is called with 'instance' as the context for 'this'.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 8,
                  "column": 75,
                  "offset": 575
                },
                "indent": [
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 8,
              "column": 75,
              "offset": 575
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 8,
          "column": 75,
          "offset": 575
        }
      }
    },
    "tags": [
      {
        "title": "example",
        "description": "import { delegate } from \"./eventr\";\n\tclass Test {\n\t\tconstructor(el) {\n\t\t\tthis.$el = $(el);\n\t\t\tdelegate(this);\n\t\t}\n\t\tevents() {\n\t\t\treturn {\n\t\t\t\t\"click .something\": \"_clickHandler\",\n\t\t\t\t[`keydown .${ something }`]: () => { }\n\t\t\t}\n\t\t}\n\t\t_clickHandler(e) { }\n\t}",
        "lineNumber": 10
      },
      {
        "title": "param",
        "description": "An instance of an object",
        "lineNumber": 26,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "instance"
      },
      {
        "title": "return",
        "description": "The instance",
        "lineNumber": 27,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      },
      {
        "title": "throws",
        "description": "If instance isn't truthy",
        "lineNumber": 28,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "throws",
        "description": "If instace.$el doesn't exist",
        "lineNumber": 29,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "title": "throws",
        "description": "If instanceevents isn't a function",
        "lineNumber": 30,
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 26,
        "column": 0
      },
      "end": {
        "line": 57,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 58,
          "column": 0
        },
        "end": {
          "line": 91,
          "column": 1
        }
      },
      "file": "C:\\Users\\iroutledge\\Documents\\Dev\\NICE-Experience\\src\\javascripts\\eventr.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "import { delegate } from \"./eventr\";\n\tclass Test {\n\t\tconstructor(el) {\n\t\t\tthis.$el = $(el);\n\t\t\tdelegate(this);\n\t\t}\n\t\tevents() {\n\t\t\treturn {\n\t\t\t\t\"click .something\": \"_clickHandler\",\n\t\t\t\t[`keydown .${ something }`]: () => { }\n\t\t\t}\n\t\t}\n\t\t_clickHandler(e) { }\n\t}"
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "instance",
        "lineNumber": 26,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An instance of an object",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "sees": [],
    "throws": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "If instance isn't truthy",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "If instace.$el doesn't exist",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 29,
                      "offset": 28
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      },
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "If instanceevents isn't a function",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Error"
        }
      }
    ],
    "todos": [],
    "name": "delegate",
    "kind": "function",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "delegate",
        "kind": "function"
      }
    ],
    "namespace": "delegate"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Undelegate events on an object instance",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 40,
          "offset": 39
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "An instance of an object",
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "instance"
      },
      {
        "title": "return",
        "description": "The instance",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 93,
        "column": 0
      },
      "end": {
        "line": 97,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 98,
          "column": 0
        },
        "end": {
          "line": 107,
          "column": 1
        }
      },
      "file": "C:\\Users\\iroutledge\\Documents\\Dev\\NICE-Experience\\src\\javascripts\\eventr.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "instance",
        "lineNumber": 2,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An instance of an object",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 25,
                      "offset": 24
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 25,
                  "offset": 24
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 25,
              "offset": 24
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The instance",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 13,
                      "offset": 12
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "undelegate",
    "kind": "function",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "undelegate",
        "kind": "function"
      }
    ],
    "namespace": "undelegate"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Mixes in event delegate and undelegate functionality into a class's\nprotoype so it can be called as \"this.delegate()\". A convenient abstraction\nover the individual 'delegate' and 'undelegate' functions.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 59,
                  "offset": 202
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 59,
              "offset": 202
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 59,
          "offset": 202
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "The class on which to add the prototype methods",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "Class"
        },
        "name": "pluginClass"
      },
      {
        "title": "example",
        "description": "import eventr from \"./eventr\";\n\tclass Test {\n\t\tconstructor(el) {\n\t\t\tthis.$el = $(el);\n\t\t\tthis.delegate();\n\t\t}\n\t\tevents() {\n\t\t\treturn {\n\t\t\t\t\"click .something\": \"_clickHandler\",\n\t\t\t\t[`keydown .${ something }`]: () => { }\n\t\t\t}\n\t\t}\n\t\t_clickHandler(e) { }\n\t}\n\teventr(Test;)",
        "lineNumber": 5
      }
    ],
    "loc": {
      "start": {
        "line": 109,
        "column": 0
      },
      "end": {
        "line": 130,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 131,
          "column": 0
        },
        "end": {
          "line": 138,
          "column": 1
        }
      },
      "file": "C:\\Users\\iroutledge\\Documents\\Dev\\NICE-Experience\\src\\javascripts\\eventr.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "import eventr from \"./eventr\";\n\tclass Test {\n\t\tconstructor(el) {\n\t\t\tthis.$el = $(el);\n\t\t\tthis.delegate();\n\t\t}\n\t\tevents() {\n\t\t\treturn {\n\t\t\t\t\"click .something\": \"_clickHandler\",\n\t\t\t\t[`keydown .${ something }`]: () => { }\n\t\t\t}\n\t\t}\n\t\t_clickHandler(e) { }\n\t}\n\teventr(Test;)"
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "pluginClass",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The class on which to add the prototype methods",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 48,
                      "offset": 47
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Class"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "mixin",
    "kind": "function",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "mixin",
        "kind": "function"
      }
    ],
    "namespace": "mixin"
  }
]