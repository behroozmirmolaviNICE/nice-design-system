{
  "display": {
    "annotations": {
      "function": [
        "description",
        "return",
        "throw",
        "require",
        "usedby",
        "since",
        "see",
        "todo",
        "link"
      ],
      "mixin": [
        "description",
        "content",
        "output",
        "throw",
        "require",
        "example",
        "usedby",
        "since",
        "see",
        "todo",
        "link"
      ],
      "placeholder": [
        "description",
        "example",
        "throw",
        "require",
        "usedby",
        "since",
        "see",
        "todo",
        "link"
      ],
      "variable": [
        "description",
        "type",
        "require",
        "example",
        "usedby",
        "since",
        "see",
        "todo",
        "link"
      ],
      "css": [
        "description",
        "require",
        "example",
        "usedby",
        "since",
        "see",
        "todo",
        "link"
      ]
    },
    "access": [
      "public",
      "private"
    ],
    "alias": false,
    "watermark": false
  },
  "items": [
    {
      "description": "<p>NICE Black. Part of the primary palette.</p>\n",
      "commentRange": {
        "start": 8,
        "end": 9
      },
      "context": {
        "type": "variable",
        "name": "colour-nice-black",
        "value": "#222",
        "scope": "private",
        "line": {
          "start": 10,
          "end": 10
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-nice.scss",
        "name": "_settings-colours-nice.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#222"
    },
    {
      "description": "<p>NICE White. Part of the primary palette</p>\n",
      "commentRange": {
        "start": 12,
        "end": 13
      },
      "context": {
        "type": "variable",
        "name": "colour-nice-white",
        "value": "#fff",
        "scope": "private",
        "line": {
          "start": 14,
          "end": 14
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-nice.scss",
        "name": "_settings-colours-nice.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#fff"
    },
    {
      "description": "<p>NICE Teal. Part of the primary palette.\nFirst choice of colour for supporting</p>\n",
      "commentRange": {
        "start": 16,
        "end": 18
      },
      "context": {
        "type": "variable",
        "name": "colour-nice-teal",
        "value": "#004650",
        "scope": "private",
        "line": {
          "start": 19,
          "end": 19
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-nice.scss",
        "name": "_settings-colours-nice.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#004650"
    },
    {
      "description": "<p>Purple. Part of the secondary palette. Purple should be used sparingly and only used as a\npanel background to highlight a particular section of content,\nin which case font colour must be pure white (NICE White) to make text legible.</p>\n",
      "commentRange": {
        "start": 24,
        "end": 27
      },
      "context": {
        "type": "variable",
        "name": "colour-nice-purple",
        "value": "#451551",
        "scope": "private",
        "line": {
          "start": 28,
          "end": 28
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-nice.scss",
        "name": "_settings-colours-nice.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#451551"
    },
    {
      "description": "<p>Cool Teal. Part of the secondary palette.</p>\n",
      "commentRange": {
        "start": 30,
        "end": 31
      },
      "context": {
        "type": "variable",
        "name": "colour-nice-cool-teal",
        "value": "#00506a",
        "scope": "private",
        "line": {
          "start": 32,
          "end": 32
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-nice.scss",
        "name": "_settings-colours-nice.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#00506a"
    },
    {
      "description": "<p>Rich Black. Part of the secondary palette.</p>\n",
      "commentRange": {
        "start": 34,
        "end": 35
      },
      "context": {
        "type": "variable",
        "name": "colour-nice-rich-black",
        "value": "#0e0e0e",
        "scope": "private",
        "line": {
          "start": 36,
          "end": 36
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-nice.scss",
        "name": "_settings-colours-nice.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#0e0e0e"
    },
    {
      "description": "<p>Dark Grey. Part of the secondary palette.</p>\n",
      "commentRange": {
        "start": 38,
        "end": 39
      },
      "context": {
        "type": "variable",
        "name": "colour-nice-dark-grey",
        "value": "#393939",
        "scope": "private",
        "line": {
          "start": 40,
          "end": 40
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-nice.scss",
        "name": "_settings-colours-nice.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#393939"
    },
    {
      "description": "<p>Grey 1. Part of the secondary palette.</p>\n",
      "commentRange": {
        "start": 42,
        "end": 43
      },
      "context": {
        "type": "variable",
        "name": "colour-nice-grey-1",
        "value": "#adadad",
        "scope": "private",
        "line": {
          "start": 44,
          "end": 44
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-nice.scss",
        "name": "_settings-colours-nice.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#adadad"
    },
    {
      "description": "<p>Grey 2. Part of the secondary palette.</p>\n",
      "commentRange": {
        "start": 46,
        "end": 47
      },
      "context": {
        "type": "variable",
        "name": "colour-nice-grey-2",
        "value": "#d6d6d6",
        "scope": "private",
        "line": {
          "start": 48,
          "end": 48
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-nice.scss",
        "name": "_settings-colours-nice.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#d6d6d6"
    },
    {
      "description": "<p>Grey 3. Part of the secondary palette.</p>\n",
      "commentRange": {
        "start": 50,
        "end": 51
      },
      "context": {
        "type": "variable",
        "name": "colour-nice-grey-3",
        "value": "#e9e9e9",
        "scope": "private",
        "line": {
          "start": 52,
          "end": 52
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-nice.scss",
        "name": "_settings-colours-nice.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#e9e9e9"
    },
    {
      "description": "<p>Blue 1. Part of the tertiary palette.</p>\n",
      "commentRange": {
        "start": 57,
        "end": 58
      },
      "context": {
        "type": "variable",
        "name": "colour-nice-blue-1",
        "value": "#233746",
        "scope": "private",
        "line": {
          "start": 59,
          "end": 59
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-nice.scss",
        "name": "_settings-colours-nice.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#233746"
    },
    {
      "description": "<p>Blue 2. Part of the tertiary palette.</p>\n",
      "commentRange": {
        "start": 61,
        "end": 62
      },
      "context": {
        "type": "variable",
        "name": "colour-nice-blue-2",
        "value": "#314c60",
        "scope": "private",
        "line": {
          "start": 63,
          "end": 63
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-nice.scss",
        "name": "_settings-colours-nice.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#314c60"
    },
    {
      "description": "<p>Blue 3. Part of the tertiary palette.</p>\n",
      "commentRange": {
        "start": 65,
        "end": 66
      },
      "context": {
        "type": "variable",
        "name": "colour-nice-blue-3",
        "value": "#517489",
        "scope": "private",
        "line": {
          "start": 67,
          "end": 67
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-nice.scss",
        "name": "_settings-colours-nice.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#517489"
    },
    {
      "description": "<p>Ice Teal. Part of the tertiary palette.</p>\n",
      "commentRange": {
        "start": 69,
        "end": 70
      },
      "context": {
        "type": "variable",
        "name": "colour-nice-ice-teal",
        "value": "#a2bdc1",
        "scope": "private",
        "line": {
          "start": 71,
          "end": 71
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-nice.scss",
        "name": "_settings-colours-nice.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#a2bdc1"
    },
    {
      "description": "<p>Teal 1. Part of the tertiary palette.</p>\n",
      "commentRange": {
        "start": 73,
        "end": 74
      },
      "context": {
        "type": "variable",
        "name": "colour-nice-teal-1",
        "value": "#4f7d83",
        "scope": "private",
        "line": {
          "start": 75,
          "end": 75
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-nice.scss",
        "name": "_settings-colours-nice.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#4f7d83"
    },
    {
      "description": "<p>Teal 2. Part of the tertiary palette.</p>\n",
      "commentRange": {
        "start": 77,
        "end": 78
      },
      "context": {
        "type": "variable",
        "name": "colour-nice-teal-2",
        "value": "#18646e",
        "scope": "private",
        "line": {
          "start": 79,
          "end": 79
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-nice.scss",
        "name": "_settings-colours-nice.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#18646e"
    },
    {
      "description": "<p>Teal 3. Part of the tertiary palette.</p>\n",
      "commentRange": {
        "start": 81,
        "end": 82
      },
      "context": {
        "type": "variable",
        "name": "colour-nice-teal-3",
        "value": "#15434a",
        "scope": "private",
        "line": {
          "start": 83,
          "end": 83
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-nice.scss",
        "name": "_settings-colours-nice.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#15434a"
    },
    {
      "description": "<p>True black, used for print styles</p>\n",
      "commentRange": {
        "start": 5,
        "end": 6
      },
      "context": {
        "type": "variable",
        "name": "colour-true-black",
        "value": "#000",
        "scope": "private",
        "line": {
          "start": 7,
          "end": 7
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#000"
    },
    {
      "description": "<p>True white, used for print styles</p>\n",
      "commentRange": {
        "start": 9,
        "end": 10
      },
      "context": {
        "type": "variable",
        "name": "colour-true-white",
        "value": "#fff",
        "scope": "private",
        "line": {
          "start": 11,
          "end": 11
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#fff"
    },
    {
      "description": "<p>Page background colour</p>\n",
      "commentRange": {
        "start": 16,
        "end": 17
      },
      "context": {
        "type": "variable",
        "name": "colour-body",
        "value": "#fafafa",
        "scope": "private",
        "line": {
          "start": 18,
          "end": 18
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#fafafa"
    },
    {
      "description": "<p>Standard, primary body text colour</p>\n",
      "commentRange": {
        "start": 20,
        "end": 21
      },
      "context": {
        "type": "variable",
        "name": "colour-text",
        "value": "$colour-nice-rich-black",
        "scope": "private",
        "line": {
          "start": 22,
          "end": 22
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#0e0e0e"
    },
    {
      "description": "<p>Subtle text colour</p>\n",
      "commentRange": {
        "start": 24,
        "end": 25
      },
      "context": {
        "type": "variable",
        "name": "colour-text-subtle",
        "value": "$colour-nice-grey-1",
        "scope": "private",
        "line": {
          "start": 26,
          "end": 26
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#adadad"
    },
    {
      "description": "<p>Inverse body text colour for use on dark background</p>\n",
      "commentRange": {
        "start": 28,
        "end": 29
      },
      "context": {
        "type": "variable",
        "name": "colour-text-inverse",
        "value": "$colour-nice-white",
        "scope": "private",
        "line": {
          "start": 30,
          "end": 30
        }
      },
      "since": [
        {
          "version": "0.2.2"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#fff"
    },
    {
      "description": "<p>Focus colour</p>\n",
      "commentRange": {
        "start": 32,
        "end": 33
      },
      "context": {
        "type": "variable",
        "name": "colour-focus",
        "value": "#0092a6",
        "scope": "private",
        "line": {
          "start": 34,
          "end": 34
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "usedBy": [
        {
          "description": "<p>The default focus style used for elements like anchors and buttons</p>\n",
          "context": {
            "type": "mixin",
            "name": "default-focus-style",
            "code": "\n  outline: 3px solid $colour-focus;\n",
            "line": {
              "start": 10,
              "end": 12
            }
          }
        }
      ],
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#0092a6"
    },
    {
      "description": "<p>Icons colour</p>\n",
      "commentRange": {
        "start": 36,
        "end": 37
      },
      "context": {
        "type": "variable",
        "name": "colour-icons",
        "value": "$colour-nice-teal",
        "scope": "private",
        "line": {
          "start": 38,
          "end": 38
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#004650"
    },
    {
      "description": "<p>Link text colour</p>\n",
      "commentRange": {
        "start": 43,
        "end": 44
      },
      "context": {
        "type": "variable",
        "name": "colour-link",
        "value": "#005ea5",
        "scope": "private",
        "line": {
          "start": 45,
          "end": 45
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "usedBy": [
        {
          "description": "<p>Default link style for use on a normal (light) background</p>\n",
          "context": {
            "type": "placeholder",
            "name": "link",
            "code": "\n  color: $colour-link;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-visited;\n  }\n\n  &:hover {\n    color: $colour-link-hover;\n  }\n\n  &:focus {\n    @include default-focus-style;\n    color: $colour-link-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-active;\n  }\n",
            "line": {
              "start": 7,
              "end": 28
            }
          }
        }
      ],
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#005ea5"
    },
    {
      "description": "<p>Link hover colour</p>\n",
      "commentRange": {
        "start": 47,
        "end": 48
      },
      "context": {
        "type": "variable",
        "name": "colour-link-hover",
        "value": "#2e8aca",
        "scope": "private",
        "line": {
          "start": 49,
          "end": 49
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "usedBy": [
        {
          "description": "<p>Default link style for use on a normal (light) background</p>\n",
          "context": {
            "type": "placeholder",
            "name": "link",
            "code": "\n  color: $colour-link;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-visited;\n  }\n\n  &:hover {\n    color: $colour-link-hover;\n  }\n\n  &:focus {\n    @include default-focus-style;\n    color: $colour-link-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-active;\n  }\n",
            "line": {
              "start": 7,
              "end": 28
            }
          }
        }
      ],
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#2e8aca"
    },
    {
      "description": "<p>Link visited colour</p>\n",
      "commentRange": {
        "start": 51,
        "end": 52
      },
      "context": {
        "type": "variable",
        "name": "colour-link-visited",
        "value": "#4c2c92",
        "scope": "private",
        "line": {
          "start": 53,
          "end": 53
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "usedBy": [
        {
          "description": "<p>Default link style for use on a normal (light) background</p>\n",
          "context": {
            "type": "placeholder",
            "name": "link",
            "code": "\n  color: $colour-link;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-visited;\n  }\n\n  &:hover {\n    color: $colour-link-hover;\n  }\n\n  &:focus {\n    @include default-focus-style;\n    color: $colour-link-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-active;\n  }\n",
            "line": {
              "start": 7,
              "end": 28
            }
          }
        }
      ],
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#4c2c92"
    },
    {
      "description": "<p>Link active colour</p>\n",
      "commentRange": {
        "start": 55,
        "end": 56
      },
      "context": {
        "type": "variable",
        "name": "colour-link-active",
        "value": "$colour-text",
        "scope": "private",
        "line": {
          "start": 57,
          "end": 57
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "usedBy": [
        {
          "description": "<p>Default link style for use on a normal (light) background</p>\n",
          "context": {
            "type": "placeholder",
            "name": "link",
            "code": "\n  color: $colour-link;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-visited;\n  }\n\n  &:hover {\n    color: $colour-link-hover;\n  }\n\n  &:focus {\n    @include default-focus-style;\n    color: $colour-link-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-active;\n  }\n",
            "line": {
              "start": 7,
              "end": 28
            }
          }
        }
      ],
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#0e0e0e"
    },
    {
      "description": "<p>Link focus text colour</p>\n",
      "commentRange": {
        "start": 59,
        "end": 60
      },
      "context": {
        "type": "variable",
        "name": "colour-link-focus-text",
        "value": "$colour-link",
        "scope": "private",
        "line": {
          "start": 61,
          "end": 61
        }
      },
      "since": [
        {
          "version": "0.2.11"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "usedBy": [
        {
          "description": "<p>Default link style for use on a normal (light) background</p>\n",
          "context": {
            "type": "placeholder",
            "name": "link",
            "code": "\n  color: $colour-link;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-visited;\n  }\n\n  &:hover {\n    color: $colour-link-hover;\n  }\n\n  &:focus {\n    @include default-focus-style;\n    color: $colour-link-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-active;\n  }\n",
            "line": {
              "start": 7,
              "end": 28
            }
          }
        }
      ],
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#005ea5"
    },
    {
      "description": "<p>Inverse link text colour</p>\n",
      "commentRange": {
        "start": 66,
        "end": 67
      },
      "context": {
        "type": "variable",
        "name": "colour-link-inverse",
        "value": "$colour-text-inverse",
        "scope": "private",
        "line": {
          "start": 68,
          "end": 68
        }
      },
      "since": [
        {
          "version": "0.2.9"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "usedBy": [
        {
          "description": "<p>Inverse link style for use on an inverse (dark) background</p>\n",
          "context": {
            "type": "placeholder",
            "name": "inverse-link",
            "code": "\n  color: $colour-link-inverse;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-inverse-visited;\n  }\n\n  &:hover {\n    color: $colour-link-inverse-hover;\n  }\n\n  &:focus {\n    color: $colour-link-inverse-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-inverse-active;\n  }\n",
            "line": {
              "start": 32,
              "end": 52
            }
          }
        }
      ],
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#fff"
    },
    {
      "description": "<p>Inverse link hover colour</p>\n",
      "commentRange": {
        "start": 70,
        "end": 71
      },
      "context": {
        "type": "variable",
        "name": "colour-link-inverse-hover",
        "value": "$colour-nice-grey-2",
        "scope": "private",
        "line": {
          "start": 72,
          "end": 72
        }
      },
      "since": [
        {
          "version": "0.2.9"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "usedBy": [
        {
          "description": "<p>Inverse link style for use on an inverse (dark) background</p>\n",
          "context": {
            "type": "placeholder",
            "name": "inverse-link",
            "code": "\n  color: $colour-link-inverse;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-inverse-visited;\n  }\n\n  &:hover {\n    color: $colour-link-inverse-hover;\n  }\n\n  &:focus {\n    color: $colour-link-inverse-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-inverse-active;\n  }\n",
            "line": {
              "start": 32,
              "end": 52
            }
          }
        }
      ],
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#d6d6d6"
    },
    {
      "description": "<p>Inverse link visited colour. Same as normal inverse link colour to ensure minimum 4.5:1 colour contrast across various dark backgrounds.</p>\n",
      "commentRange": {
        "start": 74,
        "end": 75
      },
      "context": {
        "type": "variable",
        "name": "colour-link-inverse-visited",
        "value": "$colour-link-inverse",
        "scope": "private",
        "line": {
          "start": 76,
          "end": 76
        }
      },
      "since": [
        {
          "version": "0.2.9"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "usedBy": [
        {
          "description": "<p>Inverse link style for use on an inverse (dark) background</p>\n",
          "context": {
            "type": "placeholder",
            "name": "inverse-link",
            "code": "\n  color: $colour-link-inverse;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-inverse-visited;\n  }\n\n  &:hover {\n    color: $colour-link-inverse-hover;\n  }\n\n  &:focus {\n    color: $colour-link-inverse-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-inverse-active;\n  }\n",
            "line": {
              "start": 32,
              "end": 52
            }
          }
        }
      ],
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#fff"
    },
    {
      "description": "<p>Inverse link active colour</p>\n",
      "commentRange": {
        "start": 78,
        "end": 79
      },
      "context": {
        "type": "variable",
        "name": "colour-link-inverse-active",
        "value": "$colour-link-active",
        "scope": "private",
        "line": {
          "start": 80,
          "end": 80
        }
      },
      "since": [
        {
          "version": "0.2.9"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "usedBy": [
        {
          "description": "<p>Inverse link style for use on an inverse (dark) background</p>\n",
          "context": {
            "type": "placeholder",
            "name": "inverse-link",
            "code": "\n  color: $colour-link-inverse;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-inverse-visited;\n  }\n\n  &:hover {\n    color: $colour-link-inverse-hover;\n  }\n\n  &:focus {\n    color: $colour-link-inverse-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-inverse-active;\n  }\n",
            "line": {
              "start": 32,
              "end": 52
            }
          }
        }
      ],
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#0e0e0e"
    },
    {
      "description": "<p>Inverse link focus text colour</p>\n",
      "commentRange": {
        "start": 82,
        "end": 83
      },
      "context": {
        "type": "variable",
        "name": "colour-link-inverse-focus-text",
        "value": "$colour-link",
        "scope": "private",
        "line": {
          "start": 84,
          "end": 84
        }
      },
      "since": [
        {
          "version": "0.2.9"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "usedBy": [
        {
          "description": "<p>Inverse link style for use on an inverse (dark) background</p>\n",
          "context": {
            "type": "placeholder",
            "name": "inverse-link",
            "code": "\n  color: $colour-link-inverse;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-inverse-visited;\n  }\n\n  &:hover {\n    color: $colour-link-inverse-hover;\n  }\n\n  &:focus {\n    color: $colour-link-inverse-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-inverse-active;\n  }\n",
            "line": {
              "start": 32,
              "end": 52
            }
          }
        }
      ],
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#005ea5"
    },
    {
      "description": "<p>CTA button background colour</p>\n",
      "commentRange": {
        "start": 89,
        "end": 90
      },
      "context": {
        "type": "variable",
        "name": "colour-btn-cta",
        "value": "$colour-nice-purple",
        "scope": "private",
        "line": {
          "start": 91,
          "end": 91
        }
      },
      "since": [
        {
          "version": "0.2.2"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#451551"
    },
    {
      "description": "<p>CTA button hover colour</p>\n",
      "commentRange": {
        "start": 93,
        "end": 94
      },
      "context": {
        "type": "variable",
        "name": "colour-btn-cta-hover",
        "value": "#260b2d",
        "scope": "private",
        "line": {
          "start": 95,
          "end": 95
        }
      },
      "since": [
        {
          "version": "0.2.2"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#260b2d"
    },
    {
      "description": "<p>CTA button text colour</p>\n",
      "commentRange": {
        "start": 97,
        "end": 98
      },
      "context": {
        "type": "variable",
        "name": "colour-btn-cta-text",
        "value": "$colour-nice-white",
        "scope": "private",
        "line": {
          "start": 99,
          "end": 99
        }
      },
      "since": [
        {
          "version": "0.2.2"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#fff"
    },
    {
      "description": "<p>Primary button background colour</p>\n",
      "commentRange": {
        "start": 104,
        "end": 105
      },
      "context": {
        "type": "variable",
        "name": "colour-btn-primary",
        "value": "$colour-nice-dark-grey",
        "scope": "private",
        "line": {
          "start": 106,
          "end": 106
        }
      },
      "since": [
        {
          "version": "0.2.2"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#393939"
    },
    {
      "description": "<p>Primary button hover colour</p>\n",
      "commentRange": {
        "start": 108,
        "end": 109
      },
      "context": {
        "type": "variable",
        "name": "colour-btn-primary-hover",
        "value": "$colour-nice-rich-black",
        "scope": "private",
        "line": {
          "start": 110,
          "end": 110
        }
      },
      "since": [
        {
          "version": "0.2.2"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#0e0e0e"
    },
    {
      "description": "<p>Primary button text colour</p>\n",
      "commentRange": {
        "start": 112,
        "end": 113
      },
      "context": {
        "type": "variable",
        "name": "colour-btn-primary-text",
        "value": "$colour-nice-white",
        "scope": "private",
        "line": {
          "start": 114,
          "end": 114
        }
      },
      "since": [
        {
          "version": "0.2.2"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#fff"
    },
    {
      "description": "<p>Secondary button background colour</p>\n",
      "commentRange": {
        "start": 119,
        "end": 120
      },
      "context": {
        "type": "variable",
        "name": "colour-btn-secondary",
        "value": "#666",
        "scope": "private",
        "line": {
          "start": 121,
          "end": 121
        }
      },
      "since": [
        {
          "version": "0.2.2"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#666"
    },
    {
      "description": "<p>Secondary button hover colour</p>\n",
      "commentRange": {
        "start": 123,
        "end": 124
      },
      "context": {
        "type": "variable",
        "name": "colour-btn-secondary-hover",
        "value": "#333",
        "scope": "private",
        "line": {
          "start": 125,
          "end": 125
        }
      },
      "since": [
        {
          "version": "0.2.2"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#333"
    },
    {
      "description": "<p>Primary button text colour</p>\n",
      "commentRange": {
        "start": 127,
        "end": 128
      },
      "context": {
        "type": "variable",
        "name": "colour-btn-secondary-text",
        "value": "$colour-nice-white",
        "scope": "private",
        "line": {
          "start": 129,
          "end": 129
        }
      },
      "since": [
        {
          "version": "0.2.2"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#fff"
    },
    {
      "description": "<p>Light button background colour</p>\n",
      "commentRange": {
        "start": 134,
        "end": 135
      },
      "context": {
        "type": "variable",
        "name": "colour-btn-light",
        "value": "$colour-nice-white",
        "scope": "private",
        "line": {
          "start": 136,
          "end": 136
        }
      },
      "since": [
        {
          "version": "0.2.2"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#fff"
    },
    {
      "description": "<p>Light button hover colour</p>\n",
      "commentRange": {
        "start": 138,
        "end": 139
      },
      "context": {
        "type": "variable",
        "name": "colour-btn-light-hover",
        "value": "$colour-nice-grey-3",
        "scope": "private",
        "line": {
          "start": 140,
          "end": 140
        }
      },
      "since": [
        {
          "version": "0.2.2"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#e9e9e9"
    },
    {
      "description": "<p>Light button text colour</p>\n",
      "commentRange": {
        "start": 142,
        "end": 143
      },
      "context": {
        "type": "variable",
        "name": "colour-btn-light-text",
        "value": "$colour-nice-rich-black",
        "scope": "private",
        "line": {
          "start": 144,
          "end": 144
        }
      },
      "since": [
        {
          "version": "0.2.2"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#0e0e0e"
    },
    {
      "description": "<p>Borders, seperators, rules, keylines etc.</p>\n",
      "commentRange": {
        "start": 149,
        "end": 150
      },
      "context": {
        "type": "variable",
        "name": "colour-border",
        "value": "$colour-nice-grey-1",
        "scope": "private",
        "line": {
          "start": 151,
          "end": 151
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#adadad"
    },
    {
      "description": "",
      "commentRange": {
        "start": 154,
        "end": 154
      },
      "context": {
        "type": "variable",
        "name": "colour-panel-default",
        "value": "$colour-nice-grey-3",
        "scope": "private",
        "line": {
          "start": 155,
          "end": 155
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#e9e9e9"
    },
    {
      "description": "",
      "commentRange": {
        "start": 158,
        "end": 158
      },
      "context": {
        "type": "variable",
        "name": "colour-panel-inverse",
        "value": "$colour-nice-dark-grey",
        "scope": "private",
        "line": {
          "start": 159,
          "end": 159
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#393939"
    },
    {
      "description": "<p>Agile lifecycle phase banner</p>\n",
      "commentRange": {
        "start": 164,
        "end": 165
      },
      "context": {
        "type": "variable",
        "name": "colour-agile-phase",
        "value": "#009ae9",
        "scope": "private",
        "line": {
          "start": 166,
          "end": 166
        }
      },
      "since": [
        {
          "version": "0.2.2"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#009ae9"
    },
    {
      "description": "<p>Discovery agile lifecycle phase</p>\n",
      "commentRange": {
        "start": 168,
        "end": 170
      },
      "context": {
        "type": "variable",
        "name": "colour-discovery",
        "value": "#b8008e",
        "scope": "private",
        "line": {
          "start": 171,
          "end": 171
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "deprecated": "<p>Use $colour-agile-phase instead</p>\n",
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#b8008e"
    },
    {
      "description": "<p>Alpha badges and banners</p>\n",
      "commentRange": {
        "start": 173,
        "end": 175
      },
      "context": {
        "type": "variable",
        "name": "colour-alpha",
        "value": "#d5367f",
        "scope": "private",
        "line": {
          "start": 176,
          "end": 176
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "deprecated": "<p>Use $colour-agile-phase instead</p>\n",
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#d5367f"
    },
    {
      "description": "<p>Beta badges and banners</p>\n",
      "commentRange": {
        "start": 178,
        "end": 180
      },
      "context": {
        "type": "variable",
        "name": "colour-beta",
        "value": "#f47738",
        "scope": "private",
        "line": {
          "start": 181,
          "end": 181
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "deprecated": "<p>Use $colour-agile-phase instead</p>\n",
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#f47738"
    },
    {
      "description": "<p>Live badges and banners</p>\n",
      "commentRange": {
        "start": 183,
        "end": 185
      },
      "context": {
        "type": "variable",
        "name": "colour-live",
        "value": "#70a747",
        "scope": "private",
        "line": {
          "start": 186,
          "end": 186
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "deprecated": "<p>Use $colour-agile-phase instead</p>\n",
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#70a747"
    },
    {
      "description": "<p>Error text and border colour</p>\n",
      "commentRange": {
        "start": 188,
        "end": 189
      },
      "context": {
        "type": "variable",
        "name": "colour-error",
        "value": "#b10e1e",
        "scope": "private",
        "line": {
          "start": 190,
          "end": 190
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#b10e1e"
    },
    {
      "description": "<p>Error background colour</p>\n",
      "commentRange": {
        "start": 192,
        "end": 193
      },
      "context": {
        "type": "variable",
        "name": "colour-error-background",
        "value": "#eac3c3",
        "scope": "private",
        "line": {
          "start": 194,
          "end": 194
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#eac3c3"
    },
    {
      "description": "<p>Caution text and border colour</p>\n",
      "commentRange": {
        "start": 196,
        "end": 197
      },
      "context": {
        "type": "variable",
        "name": "colour-caution",
        "value": "#9b722f",
        "scope": "private",
        "line": {
          "start": 198,
          "end": 198
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#9b722f"
    },
    {
      "description": "<p>Caution background colour</p>\n",
      "commentRange": {
        "start": 200,
        "end": 201
      },
      "context": {
        "type": "variable",
        "name": "colour-caution-background",
        "value": "#ffdfa4",
        "scope": "private",
        "line": {
          "start": 202,
          "end": 202
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#ffdfa4"
    },
    {
      "description": "<p>Info text and border colour</p>\n",
      "commentRange": {
        "start": 204,
        "end": 205
      },
      "context": {
        "type": "variable",
        "name": "colour-info",
        "value": "#4a7f99",
        "scope": "private",
        "line": {
          "start": 206,
          "end": 206
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#4a7f99"
    },
    {
      "description": "<p>Info background colour</p>\n",
      "commentRange": {
        "start": 208,
        "end": 209
      },
      "context": {
        "type": "variable",
        "name": "colour-info-background",
        "value": "#e6faff",
        "scope": "private",
        "line": {
          "start": 210,
          "end": 210
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#e6faff"
    },
    {
      "description": "<p>Success text and border colour</p>\n",
      "commentRange": {
        "start": 212,
        "end": 213
      },
      "context": {
        "type": "variable",
        "name": "colour-success",
        "value": "#3f8c5e",
        "scope": "private",
        "line": {
          "start": 214,
          "end": 214
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#3f8c5e"
    },
    {
      "description": "<p>Success background colour</p>\n",
      "commentRange": {
        "start": 216,
        "end": 217
      },
      "context": {
        "type": "variable",
        "name": "colour-success-background",
        "value": "#eff7eb",
        "scope": "private",
        "line": {
          "start": 218,
          "end": 218
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "colors"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
        "name": "_settings-colours-semantic.scss"
      },
      "groupName": {
        "colors": "Colours"
      },
      "resolvedValue": "#eff7eb"
    },
    {
      "description": "<p>Site footer</p>\n",
      "commentRange": {
        "start": 5,
        "end": 6
      },
      "context": {
        "type": "css",
        "name": ".site-footer",
        "value": "@include font-size(-1);\n  background: $colour-panel-inverse;\n  color: $colour-text-inverse;\n  margin-top: em(32px);\n  padding: em(32px 0);\n\n  @media print {\n    display: none;\n  }\n\n  a {\n    color: $colour-text-inverse;\n\n    &:focus {\n      color: #000;\n    }\n  }\n\n  p {\n    @include font-size(-1);\n  }\n\n  &__logo {\n    display: block;\n    margin: em(0 0 32 0);\n    text-decoration: none;\n\n    .icon {\n      font-size: rem(48px);\n    }\n  }\n\n  &__services {\n    margin: em(0 0 32 0);\n  }\n\n  &__social {\n    clear: both;\n    margin: em(0 0 32 0);\n  }\n\n  &__nav {\n    clear: both;\n    margin: em(0 0 32 0);\n  }\n\n  &__copyright {\n    margin: 0;\n    text-align: center;\n  }\n\n  @include mq($from: sm) {\n    &__logo {\n      float: left;\n      margin: em(0 32 32 0);\n    }\n\n    &__services {\n      float: left;\n      margin: em(0 0 32 0);\n    }\n\n    &__social {\n      clear: both;\n    }\n\n    &__copyright {\n      text-align: left;\n    }\n  }\n\n  @include mq($from: md) {\n\n    &__social {\n      clear: none;\n      float: right;\n    }\n  }",
        "line": {
          "start": 7,
          "end": 239
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "components\\footer\\_footer.scss",
        "name": "_footer.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>Services list - ie.g. service icon and name.\nStacked on mobile, and side-by-side on larger screen widths</p>\n",
      "commentRange": {
        "start": 88,
        "end": 89
      },
      "context": {
        "type": "css",
        "name": ".services",
        "value": "&__list {\n    list-style: none;\n    margin: 0;\n    overflow: hidden;\n    padding: 0;\n  }\n\n  &__item {\n    border-bottom: 1px solid $colour-border;\n\n    &:first-child {\n      border-top: 1px solid $colour-border;\n    }\n\n    a {\n      @include font-size(-1);\n      color: $colour-panel-default;\n      display: block;\n      padding: em(8 0);\n      text-decoration: none;\n\n      &:hover {\n        color: $colour-text-inverse;\n      }\n\n      &:focus {\n        color: $colour-text;\n      }\n    }\n\n    .icon {\n      @include font-size(1);\n      display: inline-block;\n      margin: em(0 4 0 0);\n      vertical-align: middle;\n    }\n  }\n\n  @include mq($from: sm) {\n\n    &__item {\n      border: 0;\n      float: left;\n      text-align: center;\n      width: em(90px);\n\n      &:first-child {\n        border: 0;\n      }\n\n      a {\n        padding: em(4px) 0 0;\n      }\n    }\n\n    .icon {\n      @include font-size(6);\n      display: block;\n      line-height: 1;\n      margin: 0 auto em(4px);\n\n      // The following is needed for IE8 to go centrally aligned\n      &:before {\n        text-align: center;\n        width: 100%;\n      }\n    }\n  }",
        "line": {
          "start": 90,
          "end": 239
        }
      },
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "components\\footer\\_footer.scss",
        "name": "_footer.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>List of social networks icons</p>\n",
      "commentRange": {
        "start": 162,
        "end": 162
      },
      "context": {
        "type": "css",
        "name": ".social-networks",
        "value": "&__heading {\n    @include font-size(-1);\n    display: inline-block;\n    font-weight: normal;\n    margin: em(0 8 0 0);\n    padding: 0;\n    vertical-align: top;\n  }\n\n  &__list {\n    display: inline;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  &__item {\n    display: inline-block;\n\n    .icon {\n      @include font-size(4);\n      line-height: 1;\n    }\n  }\n\n  a {\n    display: block;\n    padding: em(0 4);\n    text-decoration: none;\n\n    &:focus,\n    &:active {\n      color: $colour-text;\n    }\n  }",
        "line": {
          "start": 163,
          "end": 239
        }
      },
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "components\\footer\\_footer.scss",
        "name": "_footer.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>Footer navigation - list of links that stacks on mobile and is side-by-side on wider screen widths</p>\n",
      "commentRange": {
        "start": 202,
        "end": 202
      },
      "context": {
        "type": "css",
        "name": ".footer-nav",
        "value": "&__list {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  a {\n    padding: em(4 0);\n    text-decoration: none;\n  }\n\n  @include mq($from: sm) {\n    &__list {\n      line-height: 1;\n    }\n\n    &__item {\n      border-left: 1px solid $colour-text-inverse;\n      display: inline-block;\n      line-height: 1;\n\n      &:first-child {\n        border-left: 0;\n\n        a {\n          padding-left: 0;\n        }\n      }\n    }\n\n    a {\n      padding: em(0 8);\n    }\n  }",
        "line": {
          "start": 203,
          "end": 239
        }
      },
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "components\\footer\\_footer.scss",
        "name": "_footer.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>Hero banner component.</p>\n",
      "commentRange": {
        "start": 5,
        "end": 6
      },
      "context": {
        "type": "css",
        "name": ".hero",
        "value": "@extend %inverse-links;\n  background: $colour-nice-teal-2;\n  color: $colour-text-inverse;\n  margin: em(0 0 $spacing-large);\n  overflow: hidden;\n  padding: em(0 0 $spacing-large);\n\n  &__container {\n    @extend %container;\n  }\n\n  &__body {\n    @include grid($loose: true);\n    margin-top: rem($spacing-large);\n  }\n\n  // The main container for the copy\n  &__copy {\n    @include grid-item(12, $md: 8, $loose: true);\n  }\n\n  // Extra supplementary links etc\n  &__extra {\n    @include grid-item(12, $md: 4, $loose: true);\n  }\n\n  &__title {\n    @include h1;\n  }\n\n  &__intro {\n    @include lead;\n  }",
        "line": {
          "start": 7,
          "end": 42
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "components\\hero\\_hero.scss",
        "name": "_hero.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>In page nav</p>\n",
      "commentRange": {
        "start": 5,
        "end": 5
      },
      "context": {
        "type": "css",
        "name": ".in-page-nav",
        "value": "// The 'on this page' title\n  &__title {\n    @include font-size(h2);\n  }\n\n  // Lists (both root level and sub level)\n  &__list {\n    margin-left: em($spacing-medium);\n\n    [aria-hidden='true'] {\n      display: none;\n    }\n  }\n\n  a {\n    &:visited {\n      color: $colour-link;\n    }\n\n    &:focus {\n      background: none;\n    }\n  }\n\n  @include mq($from: md) {\n    // Docked to the top of the screen\n    &--fixed {\n      position: fixed;\n      top: 0;\n    }\n\n    &__title {\n      @include font-size(h4);\n      margin-top: 0;\n    }\n\n    a {\n      &[aria-selected='true'] {\n        font-weight: bold;\n      }\n    }\n  }",
        "line": {
          "start": 6,
          "end": 51
        }
      },
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "components\\in-page-nav\\_in-page-nav.scss",
        "name": "_in-page-nav.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>A phase banner includes a tag and a label and is designed\nto designate that a service is in alpha or beta.\nUsually contains a <code>.phase-tag</code>.</p>\n<p>BEM elements:</p>\n<ul>\n<li><code>__tag</code>   The tag itself</li>\n<li><code>__label</code> The label explaining</li>\n</ul>\n",
      "commentRange": {
        "start": 5,
        "end": 14
      },
      "context": {
        "type": "css",
        "name": ".phase-banner",
        "value": "border-bottom: 1px solid $colour-border;\n  display: table;\n  margin: em(0 0 $spacing-medium);\n  padding: em($spacing-small 0);\n  width: 100%;\n\n  &__tag {\n    display: table-cell;\n    padding: em(0 $spacing-small 0 0);\n  }\n\n  &__label {\n    display: table-cell;\n    line-height: 1.3;\n    vertical-align: middle;\n    width: 100%;\n  }",
        "line": {
          "start": 15,
          "end": 80
        }
      },
      "see": [
        {
          "description": "<p>A coloured block to designate a service being in alpha or beta. Can be\nused on its own but usually used within a <code>.phase-banner</code>.</p>\n<p>BEM modifiers:</p>\n<ul>\n<li><code>--alpha</code> Alpha</li>\n<li><code>--beta</code>  Beta</li>\n<li><code>--live</code>  Live</li>\n</ul>\n",
          "context": {
            "type": "css",
            "name": ".phase-tag",
            "value": "@include font-size(-1);\n  background-color: $colour-panel-inverse;\n  color: $colour-text-inverse;\n  display: inline-block;\n  font-weight: 900;\n  letter-spacing: 1px;\n  padding: em($spacing-xx-small $spacing-small);\n  text-decoration: none;\n  text-transform: uppercase;\n  vertical-align: top;\n\n  @media print {\n    @include important(background, $colour-true-black);\n    @include important(color, $colour-true-white);\n  }\n\n  &--alpha {\n    background-color: $colour-alpha;\n    color: $colour-text-inverse;\n  }\n\n  &--beta {\n    background-color: $colour-beta;\n    color: $colour-text-inverse;\n  }\n\n  &--live {\n    background-color: $colour-live;\n    color: $colour-text-inverse;\n  }",
            "line": {
              "start": 48,
              "end": 80
            }
          }
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "components\\phase-banner\\_phase-banner.scss",
        "name": "_phase-banner.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>A coloured block to designate a service being in alpha or beta. Can be\nused on its own but usually used within a <code>.phase-banner</code>.</p>\n<p>BEM modifiers:</p>\n<ul>\n<li><code>--alpha</code> Alpha</li>\n<li><code>--beta</code>  Beta</li>\n<li><code>--live</code>  Live</li>\n</ul>\n",
      "commentRange": {
        "start": 35,
        "end": 47
      },
      "context": {
        "type": "css",
        "name": ".phase-tag",
        "value": "@include font-size(-1);\n  background-color: $colour-panel-inverse;\n  color: $colour-text-inverse;\n  display: inline-block;\n  font-weight: 900;\n  letter-spacing: 1px;\n  padding: em($spacing-xx-small $spacing-small);\n  text-decoration: none;\n  text-transform: uppercase;\n  vertical-align: top;\n\n  @media print {\n    @include important(background, $colour-true-black);\n    @include important(color, $colour-true-white);\n  }\n\n  &--alpha {\n    background-color: $colour-alpha;\n    color: $colour-text-inverse;\n  }\n\n  &--beta {\n    background-color: $colour-beta;\n    color: $colour-text-inverse;\n  }\n\n  &--live {\n    background-color: $colour-live;\n    color: $colour-text-inverse;\n  }",
        "line": {
          "start": 48,
          "end": 80
        }
      },
      "todo": [
        "<p>Distinguish private beta/public beta</p>\n",
        "<p>Do we also need a discover phase colour?</p>\n"
      ],
      "see": [
        {
          "description": "<p>A phase banner includes a tag and a label and is designed\nto designate that a service is in alpha or beta.\nUsually contains a <code>.phase-tag</code>.</p>\n<p>BEM elements:</p>\n<ul>\n<li><code>__tag</code>   The tag itself</li>\n<li><code>__label</code> The label explaining</li>\n</ul>\n",
          "context": {
            "type": "css",
            "name": ".phase-banner",
            "value": "border-bottom: 1px solid $colour-border;\n  display: table;\n  margin: em(0 0 $spacing-medium);\n  padding: em($spacing-small 0);\n  width: 100%;\n\n  &__tag {\n    display: table-cell;\n    padding: em(0 $spacing-small 0 0);\n  }\n\n  &__label {\n    display: table-cell;\n    line-height: 1.3;\n    vertical-align: middle;\n    width: 100%;\n  }",
            "line": {
              "start": 15,
              "end": 80
            }
          }
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "components\\phase-banner\\_phase-banner.scss",
        "name": "_phase-banner.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>Tabbed navigational structure</p>\n<p>BEM elements:</p>\n<ul>\n<li><code>__list</code>    The containing list of tabs</li>\n<li><code>__tab</code>     An individual tab</li>\n<li><code>__tab-btn</code> A button within a tab</li>\n<li><code>__content</code> The tabs content - container for the</li>\n<li><code>__pane</code>    An individual tab pane</li>\n</ul>\n",
      "commentRange": {
        "start": 5,
        "end": 39
      },
      "context": {
        "type": "css",
        "name": ".tabs",
        "value": "margin: em($spacing-medium 0 $spacing-large);\n\n  // The list of tabs\n  &__list {\n    list-style: none;\n    margin: 0;\n    overflow: hidden;\n    padding: 0;\n    position: relative;\n    top: 1px; // To cover the border around the tabs content\n  }\n\n  // Individual tab\n  &__tab {\n    float: left;\n\n    &--active .tabs__tab-btn { // sass-lint:disable-line no-combinators\n      background: $colour-panel-default;\n      border-left: 1px solid $colour-border;\n      border-right: 1px solid $colour-border;\n      border-top: 1px solid $colour-border;\n      box-shadow: inset 0 em($spacing-x-small) 0 0 $colour-nice-teal;\n      color: $colour-text;\n      text-decoration: none;\n    }\n  }\n\n  // The button/link for the tab itself\n  &__tab-btn {\n    @extend %link;\n    background: 0;\n    border: 0;\n    border-left: 1px solid transparent;\n    border-right: 1px solid transparent;\n    border-top: 1px solid transparent;\n    cursor: pointer;\n    display: block;\n    margin: 0;\n    padding: em($spacing-medium $spacing-medium);\n  }\n\n  // The tab content containing the tab panels\n  &__content {\n    background: $colour-panel-default;\n    border: 1px solid $colour-border;\n    padding: em($spacing-medium);\n  }\n\n  // An individual tab content pane\n  &__pane {\n\n    // Assume tabs will stack if no JS is available\n    .js & {\n      display: none;\n\n      &--active {\n        display: block;\n      }\n    }\n\n    :first-child {\n      margin-top: 0;\n    }\n\n    :last-child {\n      margin-bottom: 0;\n    }\n  }",
        "line": {
          "start": 40,
          "end": 110
        }
      },
      "todo": [
        "<p>Tabs on mobile devices</p>\n"
      ],
      "example": [
        {
          "type": "html",
          "code": "<div class=\"tabs\" data-tabs>\n  <ul class=\"tabs__list\" role=\"tablist\">\n    <li class=\"tabs__tab\" role=\"presentation\">\n      <button class=\"tabs__tab-btn\" type=\"button\" role=\"tab\">\n        Tab 1\n      </button>\n    </li>\n    <li class=\"tabs__tab\" role=\"presentation\">\n      <button class=\"tabs__tab-btn\" type=\"button\" role=\"tab\">\n        Tab 2\n      </button>\n    </li>\n  </ul>\n  <div class=\"tabs__content\">\n    <div class=\"tabs__pane\" role=\"tabpanel\">\n      Tab content 1\n    </div>\n    <div class=\"tabs__pane\" role=\"tabpanel\">\n      Tab content 2\n    </div>\n  </div>\n</div>"
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "components\\tabs\\_tabs.scss",
        "name": "_tabs.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>breadcrumbs\nSee <a href=\"https://www.w3.org/WAI/WCAG20/Techniques/working-examples/G65/ex3.html\">https://www.w3.org/WAI/WCAG20/Techniques/working-examples/G65/ex3.html</a></p>\n",
      "commentRange": {
        "start": 5,
        "end": 7
      },
      "context": {
        "type": "css",
        "name": ".breadcrumbs",
        "value": "@include font-size(0);\n  list-style: none;\n  margin: em($spacing-small 0 $spacing-large);\n  padding: 0;\n\n  &__crumb {\n    display: inline-block;\n\n    &:before {\n      content: get-glyph(heavy-right-pointing-angle-quotation-mark-ornament);\n      font-size: 70%;\n      margin: em(0 $spacing-x-small);\n    }\n\n    &:first-child:before {\n      display: none;\n    }\n  }\n\n  a {\n    color: $colour-text;\n    text-decoration: underline;\n\n    &:hover {\n      text-decoration: none;\n    }\n\n    &:focus {\n      color: $colour-link-focus-text;\n    }\n\n    &:active {\n      color: $colour-link-active;\n    }\n  }",
        "line": {
          "start": 8,
          "end": 45
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\components\\_components-breadcrumbs.scss",
        "name": "_components-breadcrumbs.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>Button</p>\n",
      "commentRange": {
        "start": 5,
        "end": 6
      },
      "context": {
        "type": "css",
        "name": ".btn.btn",
        "value": "// Repeat selector for specificity to avoid link overrides\n  @include remove-mz-focus-inner;\n  @include font-size(0);\n  appearance: none;\n  background: $colour-btn-primary;\n  border: em(1px) solid $colour-btn-primary-text;\n  border-radius: 0;\n  color: $colour-btn-primary-text;\n  cursor: pointer;\n  display: inline-block;\n  margin: em(0 $spacing-small $spacing-small -4px); // Negative left margin to combat inline-block gaps\n  padding: em($spacing-small $spacing-medium);\n  position: relative;\n  text-decoration: none;\n  vertical-align: top;\n\n  &:first-child {\n    margin-left: 0;\n  }\n\n  &:visited {\n    color: $colour-btn-primary-text;\n  }\n\n  &:hover {\n    background: $colour-btn-primary-hover;\n    color: $colour-btn-primary-text;\n    text-decoration: none;\n  }\n\n  &:focus {\n    @include default-focus-style;\n    background: $colour-btn-primary;\n    border-color: $colour-focus;\n  }\n\n  &:active {\n    background: $colour-btn-primary-hover;\n    text-decoration: none;\n    top: em(2px);\n  }\n\n  // Disabled button styles\n  &--disabled,\n  &.disabled,\n  &[aria-disabled='true'],\n  &[disabled='disabled'],\n  &[disabled] {\n    opacity: .5;\n    pointer-events: none;\n\n    &:hover {\n      cursor: default;\n    }\n  }",
        "line": {
          "start": 7,
          "end": 138
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\components\\_components-buttons.scss",
        "name": "_components-buttons.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>CTA/prominent button</p>\n",
      "commentRange": {
        "start": 64,
        "end": 65
      },
      "context": {
        "type": "css",
        "name": ".btn.btn--cta",
        "value": "background: $colour-btn-cta;\n  border: em(1px) solid $colour-btn-cta-text;\n  color: $colour-btn-cta-text;\n\n  &:visited {\n    color: $colour-btn-cta-text;\n  }\n\n  &:hover {\n    background: $colour-btn-cta-hover;\n    color: $colour-btn-cta-text;\n  }\n\n  &:focus {\n    background: $colour-btn-cta-hover;\n  }\n\n  &:active {\n    background: $colour-btn-cta-hover;\n  }",
        "line": {
          "start": 66,
          "end": 138
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\components\\_components-buttons.scss",
        "name": "_components-buttons.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>Secondary button</p>\n",
      "commentRange": {
        "start": 89,
        "end": 90
      },
      "context": {
        "type": "css",
        "name": ".btn.btn--secondary",
        "value": "background: $colour-btn-secondary;\n  border: em(1px) solid $colour-btn-secondary-text;\n  color: $colour-btn-secondary-text;\n\n  &:visited {\n    color: $colour-btn-secondary-text;\n  }\n\n  &:hover {\n    background: $colour-btn-secondary-hover;\n    color: $colour-btn-secondary-text;\n  }\n\n  &:focus {\n    background: $colour-btn-secondary-hover;\n  }\n\n  &:active {\n    background: $colour-btn-secondary-hover;\n  }",
        "line": {
          "start": 91,
          "end": 138
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\components\\_components-buttons.scss",
        "name": "_components-buttons.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>Light button, for use on dark panels/sections</p>\n",
      "commentRange": {
        "start": 114,
        "end": 115
      },
      "context": {
        "type": "css",
        "name": ".btn.btn--light",
        "value": "background: $colour-btn-light;\n  border: em(1px) solid $colour-btn-light-text;\n  color: $colour-btn-light-text;\n\n  &:visited {\n    color: $colour-btn-light-text;\n  }\n\n  &:hover {\n    background: $colour-btn-light-hover;\n    color: $colour-btn-light-text;\n  }\n\n  &:focus {\n    background: $colour-btn-light-hover;\n  }\n\n  &:active {\n    background: $colour-btn-light-hover;\n  }",
        "line": {
          "start": 116,
          "end": 138
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\components\\_components-buttons.scss",
        "name": "_components-buttons.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>Container placeholder.</p>\n",
      "commentRange": {
        "start": 5,
        "end": 6
      },
      "context": {
        "type": "placeholder",
        "name": "container",
        "code": "\n  margin: auto;\n  max-width: rem(1170px);\n  width: 96%;\n",
        "line": {
          "start": 7,
          "end": 11
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "components"
      ],
      "access": "public",
      "require": [
        {
          "type": "function",
          "name": "rem"
        }
      ],
      "file": {
        "path": "stylesheets\\components\\_components-global.scss",
        "name": "_components-global.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>Container, used as a wrapper around sections within a page.\nUsually used to house grids.</p>\n",
      "commentRange": {
        "start": 13,
        "end": 21
      },
      "context": {
        "type": "css",
        "name": ".container",
        "value": "@extend %container;\n\n  &--full {\n    max-width: 100%;\n    padding: 0 2%;\n    width: auto;\n  }",
        "line": {
          "start": 22,
          "end": 43
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "<div class=\"container\">\n  <div class=\"grid\">\n  </div>\n</div>"
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\components\\_components-global.scss",
        "name": "_components-global.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>Maintains the aspect ratio of an embedded item, useful for responsive embedding, e.g.\nYouTube videos in iframes or video tags. Also useful when you know the ratio of an image\nand want to avoid the &#39;pop&#39; for slow loading images.</p>\n<p>Automatically applies to <code>iframe</code>, <code>embed</code>, <code>object</code> and <code>video</code> tags.\nAlternatively, you can use the <code>__item</code> selector to specify the element directly.</p>\n<p>BEM elements:</p>\n<ul>\n<li><code>__item</code></li>\n</ul>\n<p>BEM modifiers:</p>\n<ul>\n<li><code>--21-9</code></li>\n<li><code>--16-9</code></li>\n<li><code>--4-3</code></li>\n<li><code>--square</code></li>\n</ul>\n",
      "commentRange": {
        "start": 5,
        "end": 35
      },
      "context": {
        "type": "css",
        "name": ".maintain-ratio",
        "value": "display: block;\n  height: 0;\n  overflow: hidden;\n  padding: 0;\n  position: relative;\n\n  &__item,\n  iframe,\n  embed,\n  object,\n  video {\n    border: 0;\n    bottom: 0;\n    height: 100%;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 100%;\n  }\n\n  // Modifier class for 21:9 aspect ratio\n  &--21-9 {\n    padding-bottom: percentage(9 / 21);\n  }\n\n  // Modifier class for 16:9 aspect ratio\n  &--16-9 {\n    padding-bottom: percentage(9 / 16);\n  }\n\n  // Modifier class for 4:3 aspect ratio\n  &--4-3 {\n    padding-bottom: percentage(3 / 4);\n  }\n\n  // Modifier class for square aspect ratio\n  &--square {\n    padding-bottom: 100%;\n  }",
        "line": {
          "start": 36,
          "end": 77
        }
      },
      "example": [
        {
          "type": "html",
          "code": "<div class=\"maintain-ratio maintain-ratio--16-9\">\n  <iframe src=\"https://www.youtube.com/embed/FTQbiNvZqaY\" allowfullscreen></iframe>\n</div>",
          "description": "<p>Sixteen by nine example</p>\n"
        },
        {
          "type": "html",
          "code": "<div class=\"maintain-ratio maintain-ratio--4-3\">\n  <div style=\"background: #ddd; text-align: center;\" class=\"maintain-ratio__item\">\n    <div style=\"display: inline-block; font-size: 300%;\">\n      4:3\n    </div>\n    <div style=\"display: inline-block; height: 100%; vertical-align: middle;\"></div>\n  </div>\n</div>",
          "description": "<p>Using element</p>\n"
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\components\\_components-maintain-ratio.scss",
        "name": "_components-maintain-ratio.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>A panel is a container for visually separating content.\nOften used within a sidebar.</p>\n",
      "commentRange": {
        "start": 5,
        "end": 7
      },
      "context": {
        "type": "css",
        "name": ".panel",
        "value": "background: $colour-panel-default;\n  margin: em($spacing-medium 0 $spacing-large);\n  padding: em($spacing-medium);\n\n  :first-child {\n    margin-top: 0;\n  }\n\n  :last-child {\n    margin-bottom: 0;\n  }",
        "line": {
          "start": 8,
          "end": 33
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\components\\_components-panel.scss",
        "name": "_components-panel.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>Modifier for the panel, to use a inverse (dark) background.\nAutmatically uses inverse links within it. Doesn&#39;t affect buttons\nthough, so any buttons within a dark panel should be <code>.btn.btn--light</code>.</p>\n",
      "commentRange": {
        "start": 22,
        "end": 27
      },
      "context": {
        "type": "css",
        "name": ".panel--inverse",
        "value": "@extend %inverse-links;\n  background: $colour-panel-inverse;\n  color: $colour-text-inverse;",
        "line": {
          "start": 28,
          "end": 33
        }
      },
      "require": [
        {
          "type": "placeholder",
          "name": "inverse-links",
          "external": false
        },
        {
          "type": "function",
          "name": ".panel",
          "external": true
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "components"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\components\\_components-panel.scss",
        "name": "_components-panel.scss"
      },
      "groupName": {
        "components": "Components"
      }
    },
    {
      "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
      "commentRange": {
        "start": 5,
        "end": 41
      },
      "context": {
        "type": "mixin",
        "name": "grid",
        "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
        "line": {
          "start": 42,
          "end": 76
        }
      },
      "parameter": [
        {
          "type": "boolean",
          "name": "reverse",
          "default": "false",
          "description": "<p>Whether the grid items flow the opposite way to their natural source order</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "boolean",
          "name": "gutterless",
          "default": "false",
          "description": "<p>Whether the grid has no spacing</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "boolean",
          "name": "compact",
          "default": "false",
          "description": "<p>Whether the grid has compact spacing</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "boolean",
          "name": "loose",
          "default": "false",
          "description": "<p>Whether the grid has loose spacing</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "boolean",
          "name": "right",
          "default": "false",
          "description": "<p>Whether to render items from the right instead of the left</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "boolean",
          "name": "center",
          "default": "false",
          "description": "<p>Whether the grid&#39;s items are centrally aligned horizontally</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "boolean",
          "name": "debug",
          "default": "false",
          "description": "<p>Whether to put a highlight round the grid for debugging</p>\n",
          "resolvedValue": "false"
        }
      ],
      "require": [
        {
          "type": "mixin",
          "name": "grid-compact"
        },
        {
          "type": "mixin",
          "name": "grid-loose"
        },
        {
          "type": "variable",
          "name": "nice-grid-gutter"
        },
        {
          "type": "mixin",
          "name": "grid-reverse",
          "external": false
        },
        {
          "type": "mixin",
          "name": "grid-gutterless",
          "external": false
        },
        {
          "type": "mixin",
          "name": "grid-right",
          "external": false
        },
        {
          "type": "mixin",
          "name": "grid-center",
          "external": false
        },
        {
          "type": "mixin",
          "name": "grid-debug",
          "external": false
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": ".test {\n  @include grid($compact: true);\n\n  @include element('item') {\n    @include grid-item;\n    background: red;\n    width: 100%;\n  }\n\n  @include mq($from: md) {\n    @include element('item') {\n      background: green;\n      width: percentage(3 / 12);\n    }\n  }\n}",
          "description": "<p>SCSS usage</p>\n"
        },
        {
          "type": "html",
          "code": "<div class=\"test\">\n  <div class=\"test__item\">item</div>\n</div>",
          "description": "<p>HTML usage</p>\n"
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "grid"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\grid\\_grid-helpers.scss",
        "name": "_grid-helpers.scss"
      },
      "groupName": {
        "grid": "Grid"
      }
    },
    {
      "description": "<p>Reversed grids allow you to structure your source in the opposite order to how\nyour rendered layout will appear</p>\n",
      "commentRange": {
        "start": 78,
        "end": 80
      },
      "context": {
        "type": "mixin",
        "name": "grid-reverse",
        "code": "\n  direction: rtl;\n  text-align: left;\n",
        "line": {
          "start": 81,
          "end": 84
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "grid"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\grid\\_grid-helpers.scss",
        "name": "_grid-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid",
            "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
            "line": {
              "start": 42,
              "end": 76
            }
          }
        }
      ],
      "groupName": {
        "grid": "Grid"
      }
    },
    {
      "description": "<p>Gutterless grids have all the properties of regular grids, minus any spacing</p>\n",
      "commentRange": {
        "start": 86,
        "end": 88
      },
      "context": {
        "type": "mixin",
        "name": "grid-gutterless",
        "code": "\n  margin-left: 0;\n",
        "line": {
          "start": 89,
          "end": 91
        }
      },
      "see": [
        {
          "description": "<p>Gutterless grids have all the properties of regular grids, minus any spacing.</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid-item-gutterless",
            "code": "\n  padding-left: 0;\n",
            "line": {
              "start": 242,
              "end": 244
            }
          }
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "grid"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\grid\\_grid-helpers.scss",
        "name": "_grid-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid",
            "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
            "line": {
              "start": 42,
              "end": 76
            }
          }
        }
      ],
      "groupName": {
        "grid": "Grid"
      }
    },
    {
      "description": "<p>Compact grids have a smaller gutter</p>\n",
      "commentRange": {
        "start": 93,
        "end": 95
      },
      "context": {
        "type": "mixin",
        "name": "grid-compact",
        "code": "\n  margin-left: -$nice-grid-gutter-compact;\n",
        "line": {
          "start": 96,
          "end": 98
        }
      },
      "see": [
        {
          "description": "<p>Compact grid item with a smaller gutter</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid-item-compact",
            "code": "\n  padding-left: $nice-grid-gutter-compact;\n",
            "line": {
              "start": 248,
              "end": 250
            }
          }
        }
      ],
      "since": [
        {
          "version": "0.2.10"
        }
      ],
      "group": [
        "grid"
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nice-grid-gutter-compact"
        }
      ],
      "file": {
        "path": "stylesheets\\grid\\_grid-helpers.scss",
        "name": "_grid-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid",
            "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
            "line": {
              "start": 42,
              "end": 76
            }
          }
        }
      ],
      "groupName": {
        "grid": "Grid"
      }
    },
    {
      "description": "<p>Loose grids have a smaller gutter</p>\n",
      "commentRange": {
        "start": 100,
        "end": 102
      },
      "context": {
        "type": "mixin",
        "name": "grid-loose",
        "code": "\n  margin-left: -$nice-grid-gutter-loose;\n",
        "line": {
          "start": 103,
          "end": 105
        }
      },
      "see": [
        {
          "description": "<p>Compact grid item with a smaller gutter</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid-item-compact",
            "code": "\n  padding-left: $nice-grid-gutter-compact;\n",
            "line": {
              "start": 248,
              "end": 250
            }
          }
        }
      ],
      "since": [
        {
          "version": "0.2.10"
        }
      ],
      "group": [
        "grid"
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nice-grid-gutter-loose"
        }
      ],
      "file": {
        "path": "stylesheets\\grid\\_grid-helpers.scss",
        "name": "_grid-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid",
            "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
            "line": {
              "start": 42,
              "end": 76
            }
          }
        }
      ],
      "groupName": {
        "grid": "Grid"
      }
    },
    {
      "description": "<p>Align the entire grid to the right</p>\n",
      "commentRange": {
        "start": 107,
        "end": 108
      },
      "context": {
        "type": "mixin",
        "name": "grid-right",
        "code": "\n  text-align: right;\n",
        "line": {
          "start": 109,
          "end": 111
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "grid"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\grid\\_grid-helpers.scss",
        "name": "_grid-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid",
            "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
            "line": {
              "start": 42,
              "end": 76
            }
          }
        }
      ],
      "groupName": {
        "grid": "Grid"
      }
    },
    {
      "description": "<p>Centered grids align grid items centrally without needing to use push or pull classes</p>\n",
      "commentRange": {
        "start": 113,
        "end": 114
      },
      "context": {
        "type": "mixin",
        "name": "grid-center",
        "code": "\n  text-align: center;\n",
        "line": {
          "start": 115,
          "end": 117
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "grid"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\grid\\_grid-helpers.scss",
        "name": "_grid-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid",
            "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
            "line": {
              "start": 42,
              "end": 76
            }
          }
        }
      ],
      "groupName": {
        "grid": "Grid"
      }
    },
    {
      "description": "<p>Debug a grid by putting a highlight round it</p>\n",
      "commentRange": {
        "start": 119,
        "end": 121
      },
      "context": {
        "type": "mixin",
        "name": "grid-debug",
        "code": "\n  outline: 4px dashed red;\n",
        "line": {
          "start": 122,
          "end": 124
        }
      },
      "see": [
        {
          "description": "<p>Debug a grid item by putting a highlight round it</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid-item-debug",
            "code": "\n  outline: 2px dashed blue;\n",
            "line": {
              "start": 273,
              "end": 275
            }
          }
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "grid"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\grid\\_grid-helpers.scss",
        "name": "_grid-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid",
            "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
            "line": {
              "start": 42,
              "end": 76
            }
          }
        }
      ],
      "groupName": {
        "grid": "Grid"
      }
    },
    {
      "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
      "commentRange": {
        "start": 152,
        "end": 179
      },
      "context": {
        "type": "mixin",
        "name": "grid-item",
        "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
        "line": {
          "start": 180,
          "end": 238
        }
      },
      "parameter": [
        {
          "type": "Number",
          "name": "columns",
          "default": "12",
          "description": "<p>The number of columns (1-12) to fill on mobile</p>\n",
          "resolvedValue": "12"
        },
        {
          "type": "Number",
          "name": "push",
          "default": "false",
          "description": "<p>The number of columns (1-12) to push right</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "Number",
          "name": "push",
          "default": "false",
          "description": "<p>The number of columns (1-12) to pull left</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "boolean",
          "name": "gutterless",
          "default": "false",
          "description": "<p>Set to <code>true</code> to remove the spacing between grid items.</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "boolean",
          "name": "compact",
          "default": "false",
          "description": "<p>Whether the grid has compact spacing</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "boolean",
          "name": "loose",
          "default": "false",
          "description": "<p>Whether the grid has loose spacing</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "boolean",
          "name": "middle",
          "default": "false",
          "description": "<p>Whether the grid item is vertically aligned to the middle</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "boolean",
          "name": "bottom",
          "default": "false",
          "description": "<p>Whether the grid item is vertically aligned to the bottom</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "boolean",
          "name": "debug",
          "default": "false",
          "description": "<p>Whether to put a highlight round the grid item for debugging</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "Number | Map",
          "name": "xs",
          "default": "false",
          "description": "<p>The number of columns (1-12) to fill from xs breakpoint upwards, or a map with cols, push and pull</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "Number | Map",
          "name": "sm",
          "default": "false",
          "description": "<p>The number of columns (1-12) to fill from sm breakpoint upwards, or a map with cols, push and pull</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "Number | Map",
          "name": "md",
          "default": "false",
          "description": "<p>The number of columns (1-12) to fill from md breakpoint upwards, or a map with cols, push and pull</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "Number | Map",
          "name": "lg",
          "default": "false",
          "description": "<p>The number of columns (1-12) to fill from lg breakpoint upwards, or a map with cols, push and pull</p>\n",
          "resolvedValue": "false"
        },
        {
          "type": "Number | Map",
          "name": "xl",
          "default": "false",
          "description": "<p>The number of columns (1-12) to fill from xl breakpoint upwards, or a map with cols, push and pull</p>\n",
          "resolvedValue": "false"
        }
      ],
      "require": [
        {
          "type": "mixin",
          "name": "border-box"
        },
        {
          "type": "variable",
          "name": "nice-grid-gutter"
        },
        {
          "type": "mixin",
          "name": "grid-item-gutterless",
          "external": false
        },
        {
          "type": "mixin",
          "name": "grid-item-compact",
          "external": false
        },
        {
          "type": "mixin",
          "name": "grid-item-loose",
          "external": false
        },
        {
          "type": "mixin",
          "name": "grid-item-middle",
          "external": false
        },
        {
          "type": "mixin",
          "name": "grid-item-bottom",
          "external": false
        },
        {
          "type": "mixin",
          "name": "grid-item-debug",
          "external": false
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": ".test {\n  @include grid-item(12, $md: 8, $lg: (cols: 7, push: 1), $loose: true);\n}"
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "grid"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\grid\\_grid-helpers.scss",
        "name": "_grid-helpers.scss"
      },
      "groupName": {
        "grid": "Grid"
      }
    },
    {
      "description": "<p>Gutterless grids have all the properties of regular grids, minus any spacing.</p>\n",
      "commentRange": {
        "start": 240,
        "end": 241
      },
      "context": {
        "type": "mixin",
        "name": "grid-item-gutterless",
        "code": "\n  padding-left: 0;\n",
        "line": {
          "start": 242,
          "end": 244
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "grid"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\grid\\_grid-helpers.scss",
        "name": "_grid-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid-item",
            "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
            "line": {
              "start": 180,
              "end": 238
            }
          }
        }
      ],
      "groupName": {
        "grid": "Grid"
      }
    },
    {
      "description": "<p>Compact grid item with a smaller gutter</p>\n",
      "commentRange": {
        "start": 246,
        "end": 247
      },
      "context": {
        "type": "mixin",
        "name": "grid-item-compact",
        "code": "\n  padding-left: $nice-grid-gutter-compact;\n",
        "line": {
          "start": 248,
          "end": 250
        }
      },
      "since": [
        {
          "version": "0.2.10"
        }
      ],
      "group": [
        "grid"
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nice-grid-gutter-compact"
        }
      ],
      "file": {
        "path": "stylesheets\\grid\\_grid-helpers.scss",
        "name": "_grid-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid-item",
            "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
            "line": {
              "start": 180,
              "end": 238
            }
          }
        }
      ],
      "groupName": {
        "grid": "Grid"
      }
    },
    {
      "description": "<p>Loose grid item with a larger gutter</p>\n",
      "commentRange": {
        "start": 252,
        "end": 253
      },
      "context": {
        "type": "mixin",
        "name": "grid-item-loose",
        "code": "\n  padding-left: $nice-grid-gutter-loose;\n",
        "line": {
          "start": 254,
          "end": 256
        }
      },
      "since": [
        {
          "version": "0.2.10"
        }
      ],
      "group": [
        "grid"
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nice-grid-gutter-loose"
        }
      ],
      "file": {
        "path": "stylesheets\\grid\\_grid-helpers.scss",
        "name": "_grid-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid-item",
            "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
            "line": {
              "start": 180,
              "end": 238
            }
          }
        }
      ],
      "groupName": {
        "grid": "Grid"
      }
    },
    {
      "description": "<p>Align grid cell vertically to the middle</p>\n",
      "commentRange": {
        "start": 258,
        "end": 259
      },
      "context": {
        "type": "mixin",
        "name": "grid-item-middle",
        "code": "\n  vertical-align: middle;\n",
        "line": {
          "start": 260,
          "end": 262
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "grid"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\grid\\_grid-helpers.scss",
        "name": "_grid-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid-item",
            "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
            "line": {
              "start": 180,
              "end": 238
            }
          }
        }
      ],
      "groupName": {
        "grid": "Grid"
      }
    },
    {
      "description": "<p>Align grid cell vertically to the bottom</p>\n",
      "commentRange": {
        "start": 264,
        "end": 265
      },
      "context": {
        "type": "mixin",
        "name": "grid-item-bottom",
        "code": "\n  vertical-align: bottom;\n",
        "line": {
          "start": 266,
          "end": 268
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "grid"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\grid\\_grid-helpers.scss",
        "name": "_grid-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid-item",
            "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
            "line": {
              "start": 180,
              "end": 238
            }
          }
        }
      ],
      "groupName": {
        "grid": "Grid"
      }
    },
    {
      "description": "<p>Debug a grid item by putting a highlight round it</p>\n",
      "commentRange": {
        "start": 270,
        "end": 272
      },
      "context": {
        "type": "mixin",
        "name": "grid-item-debug",
        "code": "\n  outline: 2px dashed blue;\n",
        "line": {
          "start": 273,
          "end": 275
        }
      },
      "see": [
        {
          "description": "<p>Debug a grid by putting a highlight round it</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid-debug",
            "code": "\n  outline: 4px dashed red;\n",
            "line": {
              "start": 122,
              "end": 124
            }
          }
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "grid"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\grid\\_grid-helpers.scss",
        "name": "_grid-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid-item",
            "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
            "line": {
              "start": 180,
              "end": 238
            }
          }
        }
      ],
      "groupName": {
        "grid": "Grid"
      }
    },
    {
      "description": "<p>Grid item default selector.\nUse within a <code>.grid</code>.\nUse the value of the data attribute to specify the grid item widths\nmobile first. E.g &quot;n w:m&quot; where <em>n</em> and <em>m</em> are the number of columns and <em>w</em>\nis the name of the breakpoint.</p>\n",
      "commentRange": {
        "start": 40,
        "end": 52
      },
      "context": {
        "type": "css",
        "name": "[data-g]",
        "value": "@include grid-item;",
        "line": {
          "start": 53,
          "end": 152
        }
      },
      "example": [
        {
          "type": "html",
          "code": "<div class=\"grid\">\n  <div data-g=\"12 xs:6 md:4 lg:one-quarter xl:2\">Grid item</div>\n  <div data-g=\"12 xs:6 md:4 lg:one-quarter xl:2\">Grid item</div>\n  <div data-g=\"12 xs:6 md:4 lg:one-quarter xl:2\">Grid item</div>\n  <div data-g=\"12 xs:6 md:4 lg:one-quarter xl:2\">Grid item</div>\n</div>",
          "description": "<p>HTML usage</p>\n"
        }
      ],
      "group": [
        "grid"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\grid\\_grid.scss",
        "name": "_grid.scss"
      },
      "groupName": {
        "grid": "Grid"
      }
    },
    {
      "description": "<p>Grid class for the grid wrapper. Expects direct children to be <code>[data-g]</code>\ngrid items. Use modifiers to affect grid behaviour as shown below:</p>\n<p>Modifiers:</p>\n<ul>\n<li><code>rev</code> - Reverses the grid direction from natural source order</li>\n<li><code>gutterless</code> - Removes spacing and gutters from the grid</li>\n<li><code>compact</code> - Uses tighter spacing and gutters</li>\n<li><code>loose</code> - Uses looser spacing and gutters</li>\n<li><code>right</code> - Right aligned grid items</li>\n<li><code>center</code> - Horizontally center aligned grid items</li>\n<li><code>middle</code> - Vertically middle aligned grid items</li>\n<li><code>bottom</code> - Bottom aligned grid items</li>\n</ul>\n",
      "commentRange": {
        "start": 57,
        "end": 73
      },
      "context": {
        "type": "css",
        "name": ".grid",
        "value": "@include grid;\n\n  @include modifier('rev') {\n    @include grid-reverse;\n  }\n\n  @include modifier('gutterless') {\n    @include grid-gutterless;\n\n    [data-g] {\n      @include grid-item-gutterless;\n    }\n  }\n\n  @include modifier('compact') {\n    @include grid-compact;\n\n    [data-g] {\n      @include grid-item-compact;\n    }\n  }\n\n  @include modifier('loose') {\n    @include grid-loose;\n\n    [data-g] {\n      @include grid-item-loose;\n    }\n  }\n\n  @include modifier('right') {\n    @include grid-right;\n  }\n\n  @include modifier('center') {\n    @include grid-center;\n  }\n\n  @include modifier('middle') {\n    [data-g] {\n      @include grid-item-middle;\n    }\n  }\n\n  @include modifier('bottom') {\n    [data-g] {\n      @include grid-item-bottom;\n    }\n  }\n\n  @include modifier('debug') {\n    @include grid-debug;\n\n    [data-g] {\n      @include grid-item-debug;\n    }\n  }\n\n  // Add debug grid to body to show an outline on all grids\n  .debug-grid & {\n    @include grid-debug;\n\n    [data-g] {\n      @include grid-item-debug;\n    }\n  }\n\n  @include generate-grid-classes;\n\n  @if $nice-responsive {\n    @each $brkpnt-key, $brkpnt-value in $mq-breakpoints {\n      @include mq($from: $brkpnt-key) {\n        @include generate-grid-classes($brkpnt-key);\n      }\n    }\n  }",
        "line": {
          "start": 74,
          "end": 152
        }
      },
      "example": [
        {
          "type": "html",
          "code": "<div class=\"grid\">\n  <div data-g=\"12 xs:6 md:4 lg:3 xl:2\">Grid item</div>\n</div>"
        }
      ],
      "group": [
        "grid"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\grid\\_grid.scss",
        "name": "_grid.scss"
      },
      "groupName": {
        "grid": "Grid"
      }
    },
    {
      "description": "",
      "commentRange": {
        "start": 7,
        "end": 7
      },
      "context": {
        "type": "mixin",
        "name": "important",
        "code": "\n  #{ $property }: #{ $style } !important;\n",
        "line": {
          "start": 8,
          "end": 10
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "hacks"
      ],
      "access": "public",
      "require": [],
      "file": {
        "path": "stylesheets\\helpers\\hacks\\_hacks.scss",
        "name": "_hacks.scss"
      },
      "usedBy": [
        {
          "description": "<p>Makes an element visually hidden, but still accessible to keyboards and assistive devices.</p>\n",
          "context": {
            "type": "mixin",
            "name": "invisible",
            "code": "\n  @include important(position, absolute);\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  overflow: hidden;\n  width: 1px;\n",
            "line": {
              "start": 24,
              "end": 30
            }
          }
        },
        {
          "description": "<p>Reverses the CSS output created by the <code>invisible()</code> mixin.</p>\n",
          "context": {
            "type": "mixin",
            "name": "invisible-off",
            "code": "\n  @include important(static, absolute);\n  clip: auto;\n  height: auto;\n  overflow: visible;\n  width: auto;\n",
            "line": {
              "start": 33,
              "end": 39
            }
          }
        }
      ],
      "groupName": {
        "hacks": "Hacks"
      }
    },
    {
      "description": "<p>Resets <code>box-sizing</code> to <code>border-box</code></p>\n",
      "commentRange": {
        "start": 12,
        "end": 14
      },
      "context": {
        "type": "mixin",
        "name": "default-box-sixing",
        "code": "\n  html {\n    box-sizing: border-box;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n",
        "line": {
          "start": 15,
          "end": 22
        }
      },
      "link": [
        {
          "url": "https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/",
          "caption": ""
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "hacks"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\hacks\\_hacks.scss",
        "name": "_hacks.scss"
      },
      "groupName": {
        "hacks": "Hacks"
      }
    },
    {
      "description": "<p>Cross browser border box</p>\n",
      "commentRange": {
        "start": 24,
        "end": 25
      },
      "context": {
        "type": "mixin",
        "name": "border-box",
        "code": "\n  -webkit-box-sizing: border-box;\n     -moz-box-sizing: border-box;\n          box-sizing: border-box;\n",
        "line": {
          "start": 26,
          "end": 30
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "hacks"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\hacks\\_hacks.scss",
        "name": "_hacks.scss"
      },
      "usedBy": [
        {
          "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid-item",
            "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
            "line": {
              "start": 180,
              "end": 238
            }
          }
        }
      ],
      "groupName": {
        "hacks": "Hacks"
      }
    },
    {
      "description": "<p>Fix unwanted button padding in Firefox</p>\n",
      "commentRange": {
        "start": 32,
        "end": 34
      },
      "context": {
        "type": "mixin",
        "name": "remove-mz-focus-inner",
        "code": "\n  &::-moz-focus-inner {\n    border: 0;\n    padding: 0;\n  }\n",
        "line": {
          "start": 35,
          "end": 40
        }
      },
      "link": [
        {
          "url": "http://stackoverflow.com/a/5518143/486434",
          "caption": "Stack Overflow answer"
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "hacks"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\hacks\\_hacks.scss",
        "name": "_hacks.scss"
      },
      "groupName": {
        "hacks": "Hacks"
      }
    },
    {
      "description": "<p>Block Element</p>\n",
      "commentRange": {
        "start": 5,
        "end": 9
      },
      "context": {
        "type": "mixin",
        "name": "element",
        "code": "\n  &__#{$element} {\n    @content;\n  }\n",
        "line": {
          "start": 10,
          "end": 14
        }
      },
      "access": "public",
      "parameter": [
        {
          "type": "String",
          "name": "element",
          "description": "<p>Element&#39;s name</p>\n"
        }
      ],
      "link": [
        {
          "url": "https://css-tricks.com/snippets/sass/bem-mixins/",
          "caption": ""
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "content": "",
      "require": [],
      "file": {
        "path": "stylesheets\\helpers\\_helpers-bem.scss",
        "name": "_helpers-bem.scss"
      },
      "aliased": [
        "e"
      ],
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Block Modifier</p>\n",
      "commentRange": {
        "start": 16,
        "end": 20
      },
      "context": {
        "type": "mixin",
        "name": "modifier",
        "code": "\n  &--#{$modifier} {\n    @content;\n  }\n",
        "line": {
          "start": 21,
          "end": 25
        }
      },
      "access": "public",
      "parameter": [
        {
          "type": "String",
          "name": "modifier",
          "description": "<p>Modifier&#39;s name</p>\n"
        }
      ],
      "link": [
        {
          "url": "https://css-tricks.com/snippets/sass/bem-mixins/",
          "caption": ""
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "content": "",
      "require": [],
      "file": {
        "path": "stylesheets\\helpers\\_helpers-bem.scss",
        "name": "_helpers-bem.scss"
      },
      "aliased": [
        "m"
      ],
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Make an element adapt its height to fit floated children, and clear floats in both directions.</p>\n",
      "commentRange": {
        "start": 5,
        "end": 6
      },
      "context": {
        "type": "mixin",
        "name": "clearfix",
        "code": "\n  &:before,\n  &:after {\n    content: ' ';\n    display: table;\n  }\n\n  &:after {\n    clear: both;\n  }\n",
        "line": {
          "start": 7,
          "end": 17
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-clearfix.scss",
        "name": "_helpers-clearfix.scss"
      },
      "usedBy": [
        {
          "description": "<p>Placeholder for clearfix</p>\n",
          "context": {
            "type": "placeholder",
            "name": "clearfix",
            "code": "\n  @include clearfix;\n",
            "line": {
              "start": 21,
              "end": 23
            }
          }
        }
      ],
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Placeholder for clearfix</p>\n",
      "commentRange": {
        "start": 19,
        "end": 20
      },
      "context": {
        "type": "placeholder",
        "name": "clearfix",
        "code": "\n  @include clearfix;\n",
        "line": {
          "start": 21,
          "end": 23
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "clearfix"
        }
      ],
      "file": {
        "path": "stylesheets\\helpers\\_helpers-clearfix.scss",
        "name": "_helpers-clearfix.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Clearfix class</p>\n",
      "commentRange": {
        "start": 25,
        "end": 26
      },
      "context": {
        "type": "css",
        "name": ".clearfix",
        "value": "@extend %clearfix;",
        "line": {
          "start": 27,
          "end": 30
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-clearfix.scss",
        "name": "_helpers-clearfix.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>A map of glyph name to code point (character entity reference).\nAvoids magic strings like <code>content: &#39;\\201C&#39;</code> within our SASS.\nUsual usage is via the <code>get-glyph</code> function, e.g. <code>get-glyph(greater-than)</code>.</p>\n",
      "commentRange": {
        "start": 5,
        "end": 17
      },
      "context": {
        "type": "variable",
        "name": "nice-glyphs",
        "value": "(\n  bullet: '2022',\n  copyright: '00a9',\n  greater-than: '003e',\n  heavy-right-pointing-angle-quotation-mark-ornament: '276F',\n  left-double-quotation-mark: '201C',\n  less-than: '003c',\n  punc-space: '02008'\n  // Add more entity codes here as and when they're needed\n)",
        "scope": "default",
        "line": {
          "start": 18,
          "end": 27
        }
      },
      "see": [
        {
          "description": "<p>Gets a glyph code, or several, (character entity reference) from the\n<code>$nice-glyphs</code> map, matching the given <code>$names</code>. Usually used with the content\nproperty for psuedo elements, to avoid use of magic character reference strings.</p>\n",
          "context": {
            "type": "function",
            "name": "get-glyph",
            "code": "\n  $codes: '';\n\n  @each $name in $names {\n    @if map-has-key($nice-glyphs, $name) {\n      $code: map-get($nice-glyphs, $name);\n      $codes: $codes + '\\\\#{$code}';\n    } @else {\n      @error 'Glyph with name #{$name} could not be found in the $nice-glyphs map';\n    }\n  }\n\n  @return unquote('\\'#{$codes}\\'');\n",
            "line": {
              "start": 44,
              "end": 57
            }
          }
        }
      ],
      "link": [
        {
          "url": "https://css-tricks.com/snippets/html/glyphs/",
          "caption": ""
        }
      ],
      "property": [
        {
          "type": "String",
          "name": "bullet",
          "default": "2022",
          "description": "<p>Bullet (•)</p>\n",
          "resolvedValue": "2022"
        },
        {
          "type": "String",
          "name": "copyright",
          "default": "00a9",
          "description": "<p>Copyright symbol (©)</p>\n",
          "resolvedValue": "00a9"
        },
        {
          "type": "String",
          "name": "greater-than",
          "default": "003e",
          "description": "<p>Greater than symbol (&gt;)</p>\n",
          "resolvedValue": "003e"
        },
        {
          "type": "String",
          "name": "heavy-right-pointing-angle-quotation-mark-ornament",
          "default": "276F",
          "description": "<p>Heavy right pointing angle quotation mark ornament (❯)</p>\n",
          "resolvedValue": "276F"
        },
        {
          "type": "String",
          "name": "left-double-quotation-mark",
          "default": "201C",
          "description": "<p>Left double quotation mark (“)</p>\n",
          "resolvedValue": "201C"
        },
        {
          "type": "String",
          "name": "less-than",
          "default": "003c",
          "description": "<p>Less than symbol (&lt;)</p>\n",
          "resolvedValue": "003c"
        },
        {
          "type": "String",
          "name": "punc-space",
          "default": "02008",
          "description": "<p>Punctuation space (small, width of a comma)</p>\n",
          "resolvedValue": "02008"
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-glyphs.scss",
        "name": "_helpers-glyphs.scss"
      },
      "usedBy": [
        {
          "description": "<p>Gets a glyph code, or several, (character entity reference) from the\n<code>$nice-glyphs</code> map, matching the given <code>$names</code>. Usually used with the content\nproperty for psuedo elements, to avoid use of magic character reference strings.</p>\n",
          "context": {
            "type": "function",
            "name": "get-glyph",
            "code": "\n  $codes: '';\n\n  @each $name in $names {\n    @if map-has-key($nice-glyphs, $name) {\n      $code: map-get($nice-glyphs, $name);\n      $codes: $codes + '\\\\#{$code}';\n    } @else {\n      @error 'Glyph with name #{$name} could not be found in the $nice-glyphs map';\n    }\n  }\n\n  @return unquote('\\'#{$codes}\\'');\n",
            "line": {
              "start": 44,
              "end": 57
            }
          }
        },
        {
          "description": "<p>Gets a glyph code, or several, (character entity reference) from the\n<code>$nice-glyphs</code> map, matching the given <code>$names</code>. Usually used with the content\nproperty for psuedo elements, to avoid use of magic character reference strings.</p>\n",
          "context": {
            "type": "function",
            "name": "get-glyph",
            "code": "\n  $codes: '';\n\n  @each $name in $names {\n    @if map-has-key($nice-glyphs, $name) {\n      $code: map-get($nice-glyphs, $name);\n      $codes: $codes + '\\\\#{$code}';\n    } @else {\n      @error 'Glyph with name #{$name} could not be found in the $nice-glyphs map';\n    }\n  }\n\n  @return unquote('\\'#{$codes}\\'');\n",
            "line": {
              "start": 44,
              "end": 57
            }
          }
        },
        {
          "description": "<p>Gets a glyph code, or several, (character entity reference) from the\n<code>$nice-glyphs</code> map, matching the given <code>$names</code>. Usually used with the content\nproperty for psuedo elements, to avoid use of magic character reference strings.</p>\n",
          "context": {
            "type": "function",
            "name": "get-glyph",
            "code": "\n  $codes: '';\n\n  @each $name in $names {\n    @if map-has-key($nice-glyphs, $name) {\n      $code: map-get($nice-glyphs, $name);\n      $codes: $codes + '\\\\#{$code}';\n    } @else {\n      @error 'Glyph with name #{$name} could not be found in the $nice-glyphs map';\n    }\n  }\n\n  @return unquote('\\'#{$codes}\\'');\n",
            "line": {
              "start": 44,
              "end": 57
            }
          }
        }
      ],
      "groupName": {
        "helpers": "Helpers"
      },
      "resolvedValue": "(\n  bullet: '2022',\n  copyright: '00a9',\n  greater-than: '003e',\n  heavy-right-pointing-angle-quotation-mark-ornament: '276F',\n  left-double-quotation-mark: '201C',\n  less-than: '003c',\n  punc-space: '02008'\n  // Add more entity codes here as and when they're needed\n)"
    },
    {
      "description": "<p>Gets a glyph code, or several, (character entity reference) from the\n<code>$nice-glyphs</code> map, matching the given <code>$names</code>. Usually used with the content\nproperty for psuedo elements, to avoid use of magic character reference strings.</p>\n",
      "commentRange": {
        "start": 29,
        "end": 43
      },
      "context": {
        "type": "function",
        "name": "get-glyph",
        "code": "\n  $codes: '';\n\n  @each $name in $names {\n    @if map-has-key($nice-glyphs, $name) {\n      $code: map-get($nice-glyphs, $name);\n      $codes: $codes + '\\\\#{$code}';\n    } @else {\n      @error 'Glyph with name #{$name} could not be found in the $nice-glyphs map';\n    }\n  }\n\n  @return unquote('\\'#{$codes}\\'');\n",
        "line": {
          "start": 44,
          "end": 57
        }
      },
      "parameter": [
        {
          "type": "argList",
          "name": "names",
          "description": "<p>The name(s) of the glyph(s) to get</p>\n"
        }
      ],
      "return": {
        "type": "string",
        "description": "<p>The character entity reference code(s) as a string, e.g. &#39;\\201C&#39; or &#39;\\02008\\029C9&#39;</p>\n"
      },
      "see": [
        {
          "description": "<p>A map of glyph name to code point (character entity reference).\nAvoids magic strings like <code>content: &#39;\\201C&#39;</code> within our SASS.\nUsual usage is via the <code>get-glyph</code> function, e.g. <code>get-glyph(greater-than)</code>.</p>\n",
          "context": {
            "type": "variable",
            "name": "nice-glyphs",
            "value": "(\n  bullet: '2022',\n  copyright: '00a9',\n  greater-than: '003e',\n  heavy-right-pointing-angle-quotation-mark-ornament: '276F',\n  left-double-quotation-mark: '201C',\n  less-than: '003c',\n  punc-space: '02008'\n  // Add more entity codes here as and when they're needed\n)",
            "scope": "default",
            "line": {
              "start": 18,
              "end": 27
            }
          }
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "example": [
        {
          "type": "Single",
          "code": ".rule {\n  content: get-glyph(greater-than);\n}",
          "description": "<p>glyph</p>\n"
        },
        {
          "type": "Multiple",
          "code": ".rule {\n  content: get-glyph(punc-space, box-box);\n}",
          "description": "<p>glyphs together</p>\n"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nice-glyphs"
        },
        {
          "type": "variable",
          "name": "nice-glyphs"
        },
        {
          "type": "variable",
          "name": "nice-glyphs"
        }
      ],
      "throw": [
        "<p>Glyph with name #{$name} could not be found in the $nice-glyphs map</p>\n"
      ],
      "file": {
        "path": "stylesheets\\helpers\\_helpers-glyphs.scss",
        "name": "_helpers-glyphs.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Output a BEM style glyph selector for each glyph in the map.\n  E.g. .glyph.glyph--bullet { content: &#39;\\2022&#39;; }\n  @since 0.1.0</p>\n",
      "commentRange": {
        "start": 60,
        "end": 62
      },
      "context": {
        "type": "css",
        "name": ".glyph",
        "value": "@each $key, $value in $nice-glyphs {\n      &--#{$key} {\n        &::before {\n          content: unquote('\\'\\\\#{$value}\\'');\n        }\n      }\n    }",
        "line": {
          "start": 63,
          "end": 73
        }
      },
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-glyphs.scss",
        "name": "_helpers-glyphs.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Shortcut for getting the first item from a list</p>\n",
      "commentRange": {
        "start": 5,
        "end": 7
      },
      "context": {
        "type": "function",
        "name": "first",
        "code": "\n  @return nth($list, 1);\n",
        "line": {
          "start": 8,
          "end": 10
        }
      },
      "link": [
        {
          "url": "http://hugogiraudel.com/2013/08/08/advanced-sass-list-functions/#selecting-values-from-list",
          "caption": ""
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "require": [],
      "file": {
        "path": "stylesheets\\helpers\\_helpers-lists.scss",
        "name": "_helpers-lists.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Shortcut for getting the last item from a list</p>\n",
      "commentRange": {
        "start": 12,
        "end": 14
      },
      "context": {
        "type": "function",
        "name": "last",
        "code": "\n  @return nth($list, length($list));\n",
        "line": {
          "start": 15,
          "end": 17
        }
      },
      "link": [
        {
          "url": "http://hugogiraudel.com/2013/08/08/advanced-sass-list-functions/#selecting-values-from-list",
          "caption": ""
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "require": [],
      "file": {
        "path": "stylesheets\\helpers\\_helpers-lists.scss",
        "name": "_helpers-lists.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Returns last index of <code>$value</code> in <code>$list</code>.</p>\n",
      "commentRange": {
        "start": 19,
        "end": 36
      },
      "context": {
        "type": "function",
        "name": "last-index",
        "code": "\n  @for $i from length($list) through 1 {\n    @if nth($list, $i) == $value {\n      @return $i;\n    }\n  }\n\n  @return null;\n",
        "line": {
          "start": 37,
          "end": 45
        }
      },
      "ignore": [],
      "parameter": [
        {
          "type": "List",
          "name": "list",
          "description": "<p>list to search</p>\n"
        },
        {
          "type": "*",
          "name": "value",
          "description": "<p>value to be searched for</p>\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": "sl-last-index(a b a, a)\n// 3"
        },
        {
          "type": "scss",
          "code": "sl-last-index(a b a, z)\n// null"
        }
      ],
      "return": {
        "type": "Number | Null"
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "require": [],
      "file": {
        "path": "stylesheets\\helpers\\_helpers-lists.scss",
        "name": "_helpers-lists.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Text truncate\nRequires inline-block or block for proper styling</p>\n",
      "commentRange": {
        "start": 5,
        "end": 7
      },
      "context": {
        "type": "mixin",
        "name": "text-truncate",
        "code": "\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n",
        "line": {
          "start": 8,
          "end": 12
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-text.scss",
        "name": "_helpers-text.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Justified text alignment</p>\n",
      "commentRange": {
        "start": 17,
        "end": 18
      },
      "context": {
        "type": "css",
        "name": ".text-justify",
        "value": "@include important(text-align, justify);",
        "line": {
          "start": 19,
          "end": 126
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-text.scss",
        "name": "_helpers-text.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Stop text from wrapping</p>\n",
      "commentRange": {
        "start": 23,
        "end": 24
      },
      "context": {
        "type": "css",
        "name": ".text-nowrap",
        "value": "@include important(white-space, nowrap);",
        "line": {
          "start": 25,
          "end": 126
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-text.scss",
        "name": "_helpers-text.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Truncate text with an ellipsis.\nRequires inline-block or block for proper styling</p>\n",
      "commentRange": {
        "start": 29,
        "end": 31
      },
      "context": {
        "type": "css",
        "name": ".text-truncate",
        "value": "@include text-truncate;",
        "line": {
          "start": 32,
          "end": 126
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-text.scss",
        "name": "_helpers-text.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Align text left</p>\n",
      "commentRange": {
        "start": 36,
        "end": 37
      },
      "context": {
        "type": "css",
        "name": ".text-left",
        "value": "@include important(text-align, left);",
        "line": {
          "start": 38,
          "end": 126
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-text.scss",
        "name": "_helpers-text.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Align text right</p>\n",
      "commentRange": {
        "start": 42,
        "end": 43
      },
      "context": {
        "type": "css",
        "name": ".text-center",
        "value": "@include important(text-align, center);",
        "line": {
          "start": 44,
          "end": 126
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-text.scss",
        "name": "_helpers-text.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Align text right</p>\n",
      "commentRange": {
        "start": 48,
        "end": 49
      },
      "context": {
        "type": "css",
        "name": ".text-right",
        "value": "@include important(text-align, right);",
        "line": {
          "start": 50,
          "end": 126
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-text.scss",
        "name": "_helpers-text.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Lowercase text</p>\n",
      "commentRange": {
        "start": 59,
        "end": 60
      },
      "context": {
        "type": "css",
        "name": ".text-lowercase",
        "value": "@include important(text-transform, lowercase);",
        "line": {
          "start": 61,
          "end": 126
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-text.scss",
        "name": "_helpers-text.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Uppercase text</p>\n",
      "commentRange": {
        "start": 65,
        "end": 66
      },
      "context": {
        "type": "css",
        "name": ".text-uppercase",
        "value": "@include important(text-transform, uppercase);",
        "line": {
          "start": 67,
          "end": 126
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-text.scss",
        "name": "_helpers-text.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Capitalized text</p>\n",
      "commentRange": {
        "start": 71,
        "end": 72
      },
      "context": {
        "type": "css",
        "name": ".text-capitalize",
        "value": "@include important(text-transform, capitalize);",
        "line": {
          "start": 73,
          "end": 126
        }
      },
      "since": [
        {
          "version": "0.0.1"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-text.scss",
        "name": "_helpers-text.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Normal font weight</p>\n",
      "commentRange": {
        "start": 80,
        "end": 81
      },
      "context": {
        "type": "css",
        "name": ".font-weight-normal",
        "value": "font-weight: normal;",
        "line": {
          "start": 82,
          "end": 126
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-text.scss",
        "name": "_helpers-text.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Bold font weight</p>\n",
      "commentRange": {
        "start": 86,
        "end": 87
      },
      "context": {
        "type": "css",
        "name": ".font-weight-bold",
        "value": "font-weight: bold;",
        "line": {
          "start": 88,
          "end": 126
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-text.scss",
        "name": "_helpers-text.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Italic font style</p>\n",
      "commentRange": {
        "start": 92,
        "end": 93
      },
      "context": {
        "type": "css",
        "name": ".font-italic",
        "value": "font-style: italic;",
        "line": {
          "start": 94,
          "end": 126
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-text.scss",
        "name": "_helpers-text.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Quick left float</p>\n",
      "commentRange": {
        "start": 98,
        "end": 99
      },
      "context": {
        "type": "css",
        "name": ".left",
        "value": "float: left;",
        "line": {
          "start": 100,
          "end": 126
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-text.scss",
        "name": "_helpers-text.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Quick right float</p>\n",
      "commentRange": {
        "start": 104,
        "end": 105
      },
      "context": {
        "type": "css",
        "name": ".right",
        "value": "float: right;",
        "line": {
          "start": 106,
          "end": 126
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-text.scss",
        "name": "_helpers-text.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Set and element to display as block and align\ncentrally via auto left/right margins</p>\n",
      "commentRange": {
        "start": 111,
        "end": 113
      },
      "context": {
        "type": "mixin",
        "name": "center-block",
        "code": "\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n",
        "line": {
          "start": 114,
          "end": 118
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-text.scss",
        "name": "_helpers-text.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Set and element to display as block and align\ncentrally via auto left/right margins</p>\n",
      "commentRange": {
        "start": 120,
        "end": 122
      },
      "context": {
        "type": "css",
        "name": ".center-block",
        "value": "@include center-block;",
        "line": {
          "start": 123,
          "end": 126
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-text.scss",
        "name": "_helpers-text.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Strip the unit from a number.</p>\n",
      "commentRange": {
        "start": 5,
        "end": 8
      },
      "context": {
        "type": "function",
        "name": "strip-unit",
        "code": "\n  @return $num / ($num * 0 + 1);\n",
        "line": {
          "start": 9,
          "end": 11
        }
      },
      "parameter": [
        {
          "type": "Number",
          "name": "num",
          "description": "<p>The number whose units you wish to strip.</p>\n"
        }
      ],
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "link": [
        {
          "url": "https://davidtheclark.github.io/scut/strip-unit.html",
          "caption": ""
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "require": [],
      "file": {
        "path": "stylesheets\\helpers\\_helpers-utils.scss",
        "name": "_helpers-utils.scss"
      },
      "usedBy": [
        {
          "description": "<p>Convert pixel-values to em-values.</p>\n",
          "context": {
            "type": "function",
            "name": "em",
            "code": "\n  // $base could be in em or px (no unit = px).\n  // Adjust accordingly to create a $divisor that\n  // serves as context for $pixels.\n  $multiplier: if(unit($base) == em, 16, 1);\n  $divisor: strip-unit($base) * $multiplier;\n\n  $em-vals: ();\n  @each $val in $pixels {\n    $val-in-ems: (strip-unit($val) / $divisor) * 1em;\n    $em-vals: append($em-vals, $val-in-ems);\n  }\n\n  @if length($em-vals) == 1 {\n    // return a single value instead of a list,\n    // so it can be used in calculations\n    @return nth($em-vals, 1);\n  } @else {\n    @return $em-vals;\n  }\n",
            "line": {
              "start": 18,
              "end": 38
            }
          }
        },
        {
          "description": "<p>Convert pixel-values to em-values.</p>\n",
          "context": {
            "type": "function",
            "name": "em",
            "code": "\n  // $base could be in em or px (no unit = px).\n  // Adjust accordingly to create a $divisor that\n  // serves as context for $pixels.\n  $multiplier: if(unit($base) == em, 16, 1);\n  $divisor: strip-unit($base) * $multiplier;\n\n  $em-vals: ();\n  @each $val in $pixels {\n    $val-in-ems: (strip-unit($val) / $divisor) * 1em;\n    $em-vals: append($em-vals, $val-in-ems);\n  }\n\n  @if length($em-vals) == 1 {\n    // return a single value instead of a list,\n    // so it can be used in calculations\n    @return nth($em-vals, 1);\n  } @else {\n    @return $em-vals;\n  }\n",
            "line": {
              "start": 18,
              "end": 38
            }
          }
        },
        {
          "description": "<p>Convert pixel-values to rem-values.</p>\n",
          "context": {
            "type": "function",
            "name": "rem",
            "code": "\n\n  $rem-vals: ();\n  @each $val in $pixels {\n    $val-in-rems: strip-unit($val) / $base * 1rem;\n    $rem-vals: append($rem-vals, $val-in-rems);\n  }\n\n  @if length($rem-vals) == 1 {\n    // return a single value instead of a list,\n    // so it can be used in calculations\n    @return nth($rem-vals, 1);\n  } @else {\n    @return $rem-vals;\n  }\n",
            "line": {
              "start": 46,
              "end": 61
            }
          }
        }
      ],
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Convert pixel-values to em-values.</p>\n",
      "commentRange": {
        "start": 13,
        "end": 17
      },
      "context": {
        "type": "function",
        "name": "em",
        "code": "\n  // $base could be in em or px (no unit = px).\n  // Adjust accordingly to create a $divisor that\n  // serves as context for $pixels.\n  $multiplier: if(unit($base) == em, 16, 1);\n  $divisor: strip-unit($base) * $multiplier;\n\n  $em-vals: ();\n  @each $val in $pixels {\n    $val-in-ems: (strip-unit($val) / $divisor) * 1em;\n    $em-vals: append($em-vals, $val-in-ems);\n  }\n\n  @if length($em-vals) == 1 {\n    // return a single value instead of a list,\n    // so it can be used in calculations\n    @return nth($em-vals, 1);\n  } @else {\n    @return $em-vals;\n  }\n",
        "line": {
          "start": 18,
          "end": 38
        }
      },
      "parameter": [
        {
          "type": "Number",
          "name": "pixels",
          "description": "<p>The px-value you wish to convert to ems. No px unit necessary (e.g. 20 is fine, so is 20px). Passing a list will result in a list of em values (see examples).</p>\n"
        },
        {
          "type": "Number",
          "name": "base",
          "default": "$nice-base-font-size",
          "description": "<p>A base-value with which to calculate the em-value</p>\n",
          "resolvedValue": "$nice-baseline * 4"
        }
      ],
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "link": [
        {
          "url": "https://davidtheclark.github.io/scut/em.html",
          "caption": ""
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "require": [
        {
          "type": "function",
          "name": "strip-unit"
        },
        {
          "type": "function",
          "name": "strip-unit"
        }
      ],
      "file": {
        "path": "stylesheets\\helpers\\_helpers-utils.scss",
        "name": "_helpers-utils.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Convert pixel-values to rem-values.</p>\n",
      "commentRange": {
        "start": 41,
        "end": 45
      },
      "context": {
        "type": "function",
        "name": "rem",
        "code": "\n\n  $rem-vals: ();\n  @each $val in $pixels {\n    $val-in-rems: strip-unit($val) / $base * 1rem;\n    $rem-vals: append($rem-vals, $val-in-rems);\n  }\n\n  @if length($rem-vals) == 1 {\n    // return a single value instead of a list,\n    // so it can be used in calculations\n    @return nth($rem-vals, 1);\n  } @else {\n    @return $rem-vals;\n  }\n",
        "line": {
          "start": 46,
          "end": 61
        }
      },
      "parameter": [
        {
          "type": "Number",
          "name": "pixels",
          "description": "<p>The px-value you wish to convert to rems. No px unit necessary (e.g. 20 is fine, so is 20px). Passing a list will result in a list of rem values (see examples).</p>\n"
        },
        {
          "type": "Number",
          "name": "base",
          "default": "$nice-base-font-size",
          "description": "<p>A base-value with which to calculate the em-value</p>\n",
          "resolvedValue": "$nice-baseline * 4"
        }
      ],
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "link": [
        {
          "url": "https://davidtheclark.github.io/scut/rem.html",
          "caption": ""
        }
      ],
      "group": [
        "helpers"
      ],
      "access": "public",
      "require": [
        {
          "type": "function",
          "name": "strip-unit"
        }
      ],
      "file": {
        "path": "stylesheets\\helpers\\_helpers-utils.scss",
        "name": "_helpers-utils.scss"
      },
      "usedBy": [
        {
          "description": "<p>Container placeholder.</p>\n",
          "context": {
            "type": "placeholder",
            "name": "container",
            "code": "\n  margin: auto;\n  max-width: rem(1170px);\n  width: 96%;\n",
            "line": {
              "start": 7,
              "end": 11
            }
          }
        },
        {
          "description": "<p>Applies font size and line-height for the given scale.</p>\n",
          "context": {
            "type": "mixin",
            "name": "font-size",
            "code": "\n  $font-size: get-font-size($scale);\n  $line-height: get-line-height($scale);\n\n  font-size: rem($font-size);\n  line-height: rem($line-height);\n",
            "line": {
              "start": 69,
              "end": 75
            }
          }
        },
        {
          "description": "<p>Applies font size and line-height for the given scale.</p>\n",
          "context": {
            "type": "mixin",
            "name": "font-size",
            "code": "\n  $font-size: get-font-size($scale);\n  $line-height: get-line-height($scale);\n\n  font-size: rem($font-size);\n  line-height: rem($line-height);\n",
            "line": {
              "start": 69,
              "end": 75
            }
          }
        },
        {
          "description": "<p>Nice font: includes font size, line height, and margins.</p>\n",
          "context": {
            "type": "mixin",
            "name": "font",
            "code": "\n  @include font-size($scale);\n\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n\n  font-weight: map-get($font-map, fw);\n  margin-bottom: rem(map-get($font-map, mb));\n  margin-top: rem(map-get($font-map, mt));\n",
            "line": {
              "start": 88,
              "end": 97
            }
          }
        },
        {
          "description": "<p>Nice font: includes font size, line height, and margins.</p>\n",
          "context": {
            "type": "mixin",
            "name": "font",
            "code": "\n  @include font-size($scale);\n\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n\n  font-weight: map-get($font-map, fw);\n  margin-bottom: rem(map-get($font-map, mb));\n  margin-top: rem(map-get($font-map, mt));\n",
            "line": {
              "start": 88,
              "end": 97
            }
          }
        },
        {
          "description": "<p>List placeholder</p>\n",
          "context": {
            "type": "placeholder",
            "name": "list",
            "code": "\n  font-feature-settings: 'kern', 'onum', 'liga';\n  margin-left: rem($spacing-medium);\n  padding: 0;\n",
            "line": {
              "start": 7,
              "end": 11
            }
          }
        }
      ],
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Portrait media query</p>\n",
      "commentRange": {
        "start": 9,
        "end": 9
      },
      "context": {
        "type": "mixin",
        "name": "portrait",
        "code": "\n  @media screen and (orientation: portrait) {\n    @content;\n  }\n",
        "line": {
          "start": 10,
          "end": 14
        }
      },
      "group": [
        "helpers"
      ],
      "access": "public",
      "content": "",
      "require": [],
      "file": {
        "path": "stylesheets\\helpers\\_helpers-visibility.scss",
        "name": "_helpers-visibility.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Landscape media query</p>\n",
      "commentRange": {
        "start": 16,
        "end": 16
      },
      "context": {
        "type": "mixin",
        "name": "landscape",
        "code": "\n  @media screen and (orientation: landscape) {\n    @content;\n  }\n",
        "line": {
          "start": 17,
          "end": 21
        }
      },
      "group": [
        "helpers"
      ],
      "access": "public",
      "content": "",
      "require": [],
      "file": {
        "path": "stylesheets\\helpers\\_helpers-visibility.scss",
        "name": "_helpers-visibility.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Makes an element visually hidden, but still accessible to keyboards and assistive devices.</p>\n",
      "commentRange": {
        "start": 23,
        "end": 23
      },
      "context": {
        "type": "mixin",
        "name": "invisible",
        "code": "\n  @include important(position, absolute);\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  overflow: hidden;\n  width: 1px;\n",
        "line": {
          "start": 24,
          "end": 30
        }
      },
      "group": [
        "helpers"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "important"
        }
      ],
      "file": {
        "path": "stylesheets\\helpers\\_helpers-visibility.scss",
        "name": "_helpers-visibility.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Reverses the CSS output created by the <code>invisible()</code> mixin.</p>\n",
      "commentRange": {
        "start": 32,
        "end": 32
      },
      "context": {
        "type": "mixin",
        "name": "invisible-off",
        "code": "\n  @include important(static, absolute);\n  clip: auto;\n  height: auto;\n  overflow: visible;\n  width: auto;\n",
        "line": {
          "start": 33,
          "end": 39
        }
      },
      "group": [
        "helpers"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "important"
        }
      ],
      "file": {
        "path": "stylesheets\\helpers\\_helpers-visibility.scss",
        "name": "_helpers-visibility.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Display none.\nNote the use of <code>!important</code> for overriding styles.</p>\n",
      "commentRange": {
        "start": 44,
        "end": 45
      },
      "context": {
        "type": "css",
        "name": ".hide",
        "value": "display: none !important;",
        "line": {
          "start": 46,
          "end": 162
        }
      },
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-visibility.scss",
        "name": "_helpers-visibility.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Displays an element as block by default.\nOr use modifiers to display inline/inline-block:</p>\n<p>Modifiers:</p>\n<ul>\n<li><code>i</code></li>\n<li><code>ib</code></li>\n</ul>\n",
      "commentRange": {
        "start": 50,
        "end": 55
      },
      "context": {
        "type": "css",
        "name": ".show",
        "value": "display: block !important;\n\n  &--i {\n    display: inline !important;\n  }\n\n  &--ib {\n    display: inline-block !important;\n  }",
        "line": {
          "start": 56,
          "end": 162
        }
      },
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-visibility.scss",
        "name": "_helpers-visibility.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Visible</p>\n",
      "commentRange": {
        "start": 68,
        "end": 68
      },
      "context": {
        "type": "css",
        "name": ".visible",
        "value": "visibility: visible !important;",
        "line": {
          "start": 69,
          "end": 162
        }
      },
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-visibility.scss",
        "name": "_helpers-visibility.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Visibility hidden</p>\n",
      "commentRange": {
        "start": 73,
        "end": 73
      },
      "context": {
        "type": "css",
        "name": ".invisible",
        "value": "visibility: hidden !important;",
        "line": {
          "start": 74,
          "end": 162
        }
      },
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-visibility.scss",
        "name": "_helpers-visibility.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Landscape and portrait display</p>\n",
      "commentRange": {
        "start": 81,
        "end": 81
      },
      "context": {
        "type": "css",
        "name": ".show-landscape,\n.hide-portrait",
        "value": "display: block !important;\n\n  @include landscape {\n    display: block !important;\n  }\n\n  @include portrait {\n    display: none !important;\n  }",
        "line": {
          "start": 83,
          "end": 162
        }
      },
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-visibility.scss",
        "name": "_helpers-visibility.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Landscape and portrait display</p>\n",
      "commentRange": {
        "start": 95,
        "end": 95
      },
      "context": {
        "type": "css",
        "name": ".hide-landscape,\n.show-portrait",
        "value": "display: none !important;\n\n  @include landscape {\n    display: none !important;\n  }\n\n  @include portrait {\n    display: block !important;\n  }",
        "line": {
          "start": 97,
          "end": 162
        }
      },
      "group": [
        "helpers"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\helpers\\_helpers-visibility.scss",
        "name": "_helpers-visibility.scss"
      },
      "groupName": {
        "helpers": "Helpers"
      }
    },
    {
      "description": "<p>Base path for loading font files\nOverride this in your application if your path differs.\nE.g. if you want to replace it off a CDN you could change this to &#39;<a href=\"http://cdn.com/fonts/\">http://cdn.com/fonts/</a>&#39;</p>\n",
      "commentRange": {
        "start": 13,
        "end": 15
      },
      "context": {
        "type": "variable",
        "name": "nice-font-base-path",
        "value": "'/fonts/'",
        "scope": "default",
        "line": {
          "start": 16,
          "end": 16
        }
      },
      "group": [
        "icons"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\typography\\_typography-icons.scss",
        "name": "_typography-icons.scss"
      },
      "groupName": {
        "icons": "Icons"
      },
      "resolvedValue": "'/fonts/'"
    },
    {
      "description": "<p>Map of icon name to codepoint.\nThis map avoids the use of &#39;magic strings&#39; for codepoints throught SASS code. The map is usually not used directly - use the nice-icon function/mixin instead.\nPlease note - the values for codepoints are not fixed and may change each time the font is re-generated.</p>\n",
      "commentRange": {
        "start": 30,
        "end": 43
      },
      "context": {
        "type": "variable",
        "name": "nice-icons",
        "value": "(\n  evidence: \"f101\",\n  facebook-square: \"f102\",\n  guidance: \"f103\",\n  linkedin-square: \"f104\",\n  logo-name: \"f105\",\n  logo: \"f106\",\n  pathways: \"f107\",\n  standards: \"f108\",\n  syndication: \"f109\",\n  twitter-square: \"f10a\",\n  youtube-square: \"f10b\"\n)",
        "scope": "default",
        "line": {
          "start": 45,
          "end": 57
        }
      },
      "property": [
        {
          "type": "string",
          "name": "evidence",
          "default": "f101",
          "description": "<p><span class=\"icon icon--evidence\" aria-hidden=\"true\"></span></p>\n",
          "resolvedValue": "f101"
        },
        {
          "type": "string",
          "name": "facebook-square",
          "default": "f102",
          "description": "<p><span class=\"icon icon--facebook-square\" aria-hidden=\"true\"></span></p>\n",
          "resolvedValue": "f102"
        },
        {
          "type": "string",
          "name": "guidance",
          "default": "f103",
          "description": "<p><span class=\"icon icon--guidance\" aria-hidden=\"true\"></span></p>\n",
          "resolvedValue": "f103"
        },
        {
          "type": "string",
          "name": "linkedin-square",
          "default": "f104",
          "description": "<p><span class=\"icon icon--linkedin-square\" aria-hidden=\"true\"></span></p>\n",
          "resolvedValue": "f104"
        },
        {
          "type": "string",
          "name": "logo-name",
          "default": "f105",
          "description": "<p><span class=\"icon icon--logo-name\" aria-hidden=\"true\"></span></p>\n",
          "resolvedValue": "f105"
        },
        {
          "type": "string",
          "name": "logo",
          "default": "f106",
          "description": "<p><span class=\"icon icon--logo\" aria-hidden=\"true\"></span></p>\n",
          "resolvedValue": "f106"
        },
        {
          "type": "string",
          "name": "pathways",
          "default": "f107",
          "description": "<p><span class=\"icon icon--pathways\" aria-hidden=\"true\"></span></p>\n",
          "resolvedValue": "f107"
        },
        {
          "type": "string",
          "name": "standards",
          "default": "f108",
          "description": "<p><span class=\"icon icon--standards\" aria-hidden=\"true\"></span></p>\n",
          "resolvedValue": "f108"
        },
        {
          "type": "string",
          "name": "syndication",
          "default": "f109",
          "description": "<p><span class=\"icon icon--syndication\" aria-hidden=\"true\"></span></p>\n",
          "resolvedValue": "f109"
        },
        {
          "type": "string",
          "name": "twitter-square",
          "default": "f10a",
          "description": "<p><span class=\"icon icon--twitter-square\" aria-hidden=\"true\"></span></p>\n",
          "resolvedValue": "f10a"
        },
        {
          "type": "string",
          "name": "youtube-square",
          "default": "f10b",
          "description": "<p><span class=\"icon icon--youtube-square\" aria-hidden=\"true\"></span></p>\n",
          "resolvedValue": "f10b"
        }
      ],
      "group": [
        "icons"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\typography\\_typography-icons.scss",
        "name": "_typography-icons.scss"
      },
      "usedBy": [
        {
          "description": "<p>Applies the required styles for the given icon\nincluding the codepoint.</p>\n",
          "context": {
            "type": "mixin",
            "name": "nice-icon",
            "code": "\n  @if map-has-key($nice-icons, $icon) {\n    @include icon-base;\n    content: nice-icon($icon);\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
            "line": {
              "start": 91,
              "end": 98
            }
          }
        },
        {
          "description": "<p>Applies the required styles for the given icon\nincluding the codepoint.</p>\n",
          "context": {
            "type": "mixin",
            "name": "nice-icon",
            "code": "\n  @if map-has-key($nice-icons, $icon) {\n    @include icon-base;\n    content: nice-icon($icon);\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
            "line": {
              "start": 91,
              "end": 98
            }
          }
        },
        {
          "description": "<p>Function for getting the codepoint for a given icon, for use\nwithin the <code>content</code> property of psuedo elements.</p>\n",
          "context": {
            "type": "function",
            "name": "nice-icon",
            "code": "\n  @if map-has-key($nice-icons, $icon) {\n    $icon-code: map-get($nice-icons, $icon);\n    @return unquote('\\'\\\\#{ $icon-code }\\'');\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
            "line": {
              "start": 110,
              "end": 117
            }
          }
        },
        {
          "description": "<p>Function for getting the codepoint for a given icon, for use\nwithin the <code>content</code> property of psuedo elements.</p>\n",
          "context": {
            "type": "function",
            "name": "nice-icon",
            "code": "\n  @if map-has-key($nice-icons, $icon) {\n    $icon-code: map-get($nice-icons, $icon);\n    @return unquote('\\'\\\\#{ $icon-code }\\'');\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
            "line": {
              "start": 110,
              "end": 117
            }
          }
        },
        {
          "description": "<p>Function for getting the codepoint for a given icon, for use\nwithin the <code>content</code> property of psuedo elements.</p>\n",
          "context": {
            "type": "function",
            "name": "nice-icon",
            "code": "\n  @if map-has-key($nice-icons, $icon) {\n    $icon-code: map-get($nice-icons, $icon);\n    @return unquote('\\'\\\\#{ $icon-code }\\'');\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
            "line": {
              "start": 110,
              "end": 117
            }
          }
        }
      ],
      "groupName": {
        "icons": "Icons"
      },
      "resolvedValue": "(\n  evidence: \"f101\",\n  facebook-square: \"f102\",\n  guidance: \"f103\",\n  linkedin-square: \"f104\",\n  logo-name: \"f105\",\n  logo: \"f106\",\n  pathways: \"f107\",\n  standards: \"f108\",\n  syndication: \"f109\",\n  twitter-square: \"f10a\",\n  youtube-square: \"f10b\"\n)"
    },
    {
      "description": "<p>Base styles required for an icon including font family etc</p>\n",
      "commentRange": {
        "start": 59,
        "end": 67
      },
      "context": {
        "type": "mixin",
        "name": "icon-base",
        "code": "\n  display: inline-block;\n  font-family: 'NICE Icons';\n  font-style: normal;\n  font-weight: normal;\n  line-height: 1;\n  speak: none;\n  text-decoration: inherit;\n  text-rendering: auto;\n  text-transform: none;\n  vertical-align: baseline;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n",
        "line": {
          "start": 68,
          "end": 81
        }
      },
      "example": [
        {
          "type": "scss",
          "code": ".test {\n  @icnlude icon-base;\n\n  &:before {\n    content: nice-icon(search);\n  }\n}"
        }
      ],
      "group": [
        "icons"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\typography\\_typography-icons.scss",
        "name": "_typography-icons.scss"
      },
      "usedBy": [
        {
          "description": "<p>Applies the required styles for the given icon\nincluding the codepoint.</p>\n",
          "context": {
            "type": "mixin",
            "name": "nice-icon",
            "code": "\n  @if map-has-key($nice-icons, $icon) {\n    @include icon-base;\n    content: nice-icon($icon);\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
            "line": {
              "start": 91,
              "end": 98
            }
          }
        }
      ],
      "groupName": {
        "icons": "Icons"
      }
    },
    {
      "description": "<p>Applies the required styles for the given icon\nincluding the codepoint.</p>\n",
      "commentRange": {
        "start": 83,
        "end": 90
      },
      "context": {
        "type": "mixin",
        "name": "nice-icon",
        "code": "\n  @if map-has-key($nice-icons, $icon) {\n    @include icon-base;\n    content: nice-icon($icon);\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
        "line": {
          "start": 91,
          "end": 98
        }
      },
      "parameter": [
        {
          "type": "string",
          "name": "icon",
          "description": "<p>The name of the icon</p>\n"
        }
      ],
      "throw": [
        "<p>Icons with name #{ $icon } could not be found in the $nice-icons map</p>\n"
      ],
      "example": [
        {
          "type": "scss",
          "code": ".search-icon {\n  @include nice-icon(search);\n}"
        }
      ],
      "group": [
        "icons"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "icon-base"
        },
        {
          "type": "function",
          "name": "nice-icon"
        },
        {
          "type": "variable",
          "name": "nice-icons"
        },
        {
          "type": "variable",
          "name": "nice-icons"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-icons.scss",
        "name": "_typography-icons.scss"
      },
      "groupName": {
        "icons": "Icons"
      }
    },
    {
      "description": "<p>Function for getting the codepoint for a given icon, for use\nwithin the <code>content</code> property of psuedo elements.</p>\n",
      "commentRange": {
        "start": 100,
        "end": 109
      },
      "context": {
        "type": "function",
        "name": "nice-icon",
        "code": "\n  @if map-has-key($nice-icons, $icon) {\n    $icon-code: map-get($nice-icons, $icon);\n    @return unquote('\\'\\\\#{ $icon-code }\\'');\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
        "line": {
          "start": 110,
          "end": 117
        }
      },
      "example": [
        {
          "type": "scss",
          "code": ".test {\n  @icnlude icon-base;\n\n  &:before {\n    content: nice-icon(search);\n  }\n}"
        }
      ],
      "group": [
        "icons"
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nice-icons"
        },
        {
          "type": "variable",
          "name": "nice-icons"
        },
        {
          "type": "variable",
          "name": "nice-icons"
        }
      ],
      "throw": [
        "<p>Icons with name #{ $icon } could not be found in the $nice-icons map</p>\n"
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-icons.scss",
        "name": "_typography-icons.scss"
      },
      "usedBy": [
        {
          "description": "<p>Applies the required styles for the given icon\nincluding the codepoint.</p>\n",
          "context": {
            "type": "mixin",
            "name": "nice-icon",
            "code": "\n  @if map-has-key($nice-icons, $icon) {\n    @include icon-base;\n    content: nice-icon($icon);\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
            "line": {
              "start": 91,
              "end": 98
            }
          }
        }
      ],
      "groupName": {
        "icons": "Icons"
      }
    },
    {
      "description": "<p>Class for rendering an icon.\nUse with a named modifier for an icon.</p>\n",
      "commentRange": {
        "start": 119,
        "end": 122
      },
      "context": {
        "type": "css",
        "name": ".icon",
        "value": "@include icon-base;\n\n  &:before {\n    display: block;\n  }\n\n  @each $icon, $code in $nice-icons {\n    &--#{ $icon }:before {\n      content: nice-icon($icon);\n    }\n  }",
        "line": {
          "start": 123,
          "end": 136
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "<span class=\"icon icon--search\" aria-hidden=\"true\"></span>"
        }
      ],
      "group": [
        "icons"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\typography\\_typography-icons.scss",
        "name": "_typography-icons.scss"
      },
      "groupName": {
        "icons": "Icons"
      }
    },
    {
      "description": "<p>Extra extra small spacing</p>\n",
      "commentRange": {
        "start": 5,
        "end": 6
      },
      "context": {
        "type": "variable",
        "name": "spacing-xx-small",
        "value": "2",
        "scope": "private",
        "line": {
          "start": 7,
          "end": 7
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "spacing"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-spacing.scss",
        "name": "_settings-spacing.scss"
      },
      "groupName": {
        "spacing": "Spacing"
      },
      "resolvedValue": "2"
    },
    {
      "description": "<p>Extra small spacing</p>\n",
      "commentRange": {
        "start": 9,
        "end": 10
      },
      "context": {
        "type": "variable",
        "name": "spacing-x-small",
        "value": "4",
        "scope": "private",
        "line": {
          "start": 11,
          "end": 11
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "spacing"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-spacing.scss",
        "name": "_settings-spacing.scss"
      },
      "groupName": {
        "spacing": "Spacing"
      },
      "resolvedValue": "4"
    },
    {
      "description": "<p>Small spacing</p>\n",
      "commentRange": {
        "start": 13,
        "end": 14
      },
      "context": {
        "type": "variable",
        "name": "spacing-small",
        "value": "8",
        "scope": "private",
        "line": {
          "start": 15,
          "end": 15
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "spacing"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-spacing.scss",
        "name": "_settings-spacing.scss"
      },
      "groupName": {
        "spacing": "Spacing"
      },
      "resolvedValue": "8"
    },
    {
      "description": "<p>Medium spacing</p>\n",
      "commentRange": {
        "start": 17,
        "end": 18
      },
      "context": {
        "type": "variable",
        "name": "spacing-medium",
        "value": "16",
        "scope": "private",
        "line": {
          "start": 19,
          "end": 19
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "spacing"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-spacing.scss",
        "name": "_settings-spacing.scss"
      },
      "usedBy": [
        {
          "description": "<p>List placeholder</p>\n",
          "context": {
            "type": "placeholder",
            "name": "list",
            "code": "\n  font-feature-settings: 'kern', 'onum', 'liga';\n  margin-left: rem($spacing-medium);\n  padding: 0;\n",
            "line": {
              "start": 7,
              "end": 11
            }
          }
        }
      ],
      "groupName": {
        "spacing": "Spacing"
      },
      "resolvedValue": "16"
    },
    {
      "description": "<p>Large spacing</p>\n",
      "commentRange": {
        "start": 21,
        "end": 22
      },
      "context": {
        "type": "variable",
        "name": "spacing-large",
        "value": "32",
        "scope": "private",
        "line": {
          "start": 23,
          "end": 23
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "spacing"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-spacing.scss",
        "name": "_settings-spacing.scss"
      },
      "groupName": {
        "spacing": "Spacing"
      },
      "resolvedValue": "32"
    },
    {
      "description": "<p>Extra large spacing</p>\n",
      "commentRange": {
        "start": 25,
        "end": 26
      },
      "context": {
        "type": "variable",
        "name": "spacing-x-large",
        "value": "48",
        "scope": "private",
        "line": {
          "start": 27,
          "end": 27
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "spacing"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-spacing.scss",
        "name": "_settings-spacing.scss"
      },
      "groupName": {
        "spacing": "Spacing"
      },
      "resolvedValue": "48"
    },
    {
      "description": "<p>Extra extra large spacing</p>\n",
      "commentRange": {
        "start": 29,
        "end": 30
      },
      "context": {
        "type": "variable",
        "name": "spacing-xx-large",
        "value": "64",
        "scope": "private",
        "line": {
          "start": 31,
          "end": 31
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "spacing"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-spacing.scss",
        "name": "_settings-spacing.scss"
      },
      "groupName": {
        "spacing": "Spacing"
      },
      "resolvedValue": "64"
    },
    {
      "description": "<p>A map of spacing values</p>\n",
      "commentRange": {
        "start": 33,
        "end": 34
      },
      "context": {
        "type": "variable",
        "name": "spacings",
        "value": "(\n  xx-small: $spacing-xx-small,\n  x-small: $spacing-x-small,\n  small: $spacing-small,\n  medium: $spacing-medium,\n  large: $spacing-large,\n  x-large: $spacing-x-large,\n  xx-large: $spacing-xx-large\n)",
        "scope": "private",
        "line": {
          "start": 35,
          "end": 43
        }
      },
      "since": [
        {
          "version": "0.2.15"
        }
      ],
      "group": [
        "spacing"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\settings\\_settings-spacing.scss",
        "name": "_settings-spacing.scss"
      },
      "groupName": {
        "spacing": "Spacing"
      },
      "resolvedValue": "(\n  xx-small: $spacing-xx-small,\n  x-small: $spacing-x-small,\n  small: $spacing-small,\n  medium: $spacing-medium,\n  large: $spacing-large,\n  x-large: $spacing-x-large,\n  xx-large: $spacing-xx-large\n)"
    },
    {
      "description": "<p>The default focus style used for elements like anchors and buttons</p>\n",
      "commentRange": {
        "start": 7,
        "end": 9
      },
      "context": {
        "type": "mixin",
        "name": "default-focus-style",
        "code": "\n  outline: 3px solid $colour-focus;\n",
        "line": {
          "start": 10,
          "end": 12
        }
      },
      "output": "<p>the default focus styles ie background colour and outline</p>\n",
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "colour-focus"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-global.scss",
        "name": "_typography-global.scss"
      },
      "usedBy": [
        {
          "description": "<p>Default link style for use on a normal (light) background</p>\n",
          "context": {
            "type": "placeholder",
            "name": "link",
            "code": "\n  color: $colour-link;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-visited;\n  }\n\n  &:hover {\n    color: $colour-link-hover;\n  }\n\n  &:focus {\n    @include default-focus-style;\n    color: $colour-link-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-active;\n  }\n",
            "line": {
              "start": 7,
              "end": 28
            }
          }
        }
      ],
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Mark</p>\n",
      "commentRange": {
        "start": 82,
        "end": 82
      },
      "context": {
        "type": "css",
        "name": "mark,\n.mark",
        "value": "background-color: #fff999;\n  padding: em(4);",
        "line": {
          "start": 84,
          "end": 94
        }
      },
      "group": [
        "typography"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\typography\\_typography-global.scss",
        "name": "_typography-global.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Small</p>\n",
      "commentRange": {
        "start": 89,
        "end": 89
      },
      "context": {
        "type": "css",
        "name": "small,\n.small",
        "value": "font-size: 85%;",
        "line": {
          "start": 91,
          "end": 94
        }
      },
      "group": [
        "typography"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\typography\\_typography-global.scss",
        "name": "_typography-global.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Heading, BEM style.\nModifiers:</p>\n<ul>\n<li>separator: Border below</li>\n</ul>\n",
      "commentRange": {
        "start": 16,
        "end": 18
      },
      "context": {
        "type": "css",
        "name": ".heading",
        "value": "&--separator {\n    border-bottom: 1px solid $colour-border;\n  }",
        "line": {
          "start": 19,
          "end": 102
        }
      },
      "group": [
        "typography"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\typography\\_typography-headings.scss",
        "name": "_typography-headings.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Primary heading. Used for h1 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
      "commentRange": {
        "start": 25,
        "end": 27
      },
      "context": {
        "type": "mixin",
        "name": "h1",
        "code": "\n  @include font(h1);\n",
        "line": {
          "start": 28,
          "end": 30
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "font"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-headings.scss",
        "name": "_typography-headings.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Secondary heading. Used for h2 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
      "commentRange": {
        "start": 32,
        "end": 34
      },
      "context": {
        "type": "mixin",
        "name": "h2",
        "code": "\n  @include font(h2);\n",
        "line": {
          "start": 35,
          "end": 37
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "font"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-headings.scss",
        "name": "_typography-headings.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Tertiary heading. Used for h3 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
      "commentRange": {
        "start": 39,
        "end": 41
      },
      "context": {
        "type": "mixin",
        "name": "h3",
        "code": "\n  @include font(h3);\n",
        "line": {
          "start": 42,
          "end": 44
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "font"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-headings.scss",
        "name": "_typography-headings.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Fourth level heading. Used for h4 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
      "commentRange": {
        "start": 46,
        "end": 48
      },
      "context": {
        "type": "mixin",
        "name": "h4",
        "code": "\n  @include font(h4);\n",
        "line": {
          "start": 49,
          "end": 51
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "font"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-headings.scss",
        "name": "_typography-headings.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Fifth level heading. Used for h5 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
      "commentRange": {
        "start": 53,
        "end": 55
      },
      "context": {
        "type": "mixin",
        "name": "h5",
        "code": "\n  @include font(h5);\n",
        "line": {
          "start": 56,
          "end": 58
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "font"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-headings.scss",
        "name": "_typography-headings.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Sixth level heading. Used for h6 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
      "commentRange": {
        "start": 60,
        "end": 62
      },
      "context": {
        "type": "mixin",
        "name": "h6",
        "code": "\n  @include font(h6);\n",
        "line": {
          "start": 63,
          "end": 65
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "font"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-headings.scss",
        "name": "_typography-headings.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Gets a font family from the <code>$nice-font-families</code> map, given a name</p>\n",
      "commentRange": {
        "start": 5,
        "end": 7
      },
      "context": {
        "type": "function",
        "name": "font-family",
        "code": "\n  $result: map-get($nice-font-families, $stack);\n  @return unquote($result);\n",
        "line": {
          "start": 8,
          "end": 11
        }
      },
      "parameter": [
        {
          "type": "String",
          "name": "stack",
          "description": "<p>The stack name e.g. sans, serif or mono</p>\n"
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nice-font-families"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-helpers.scss",
        "name": "_typography-helpers.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Gets a numeric scale</p>\n",
      "commentRange": {
        "start": 13,
        "end": 15
      },
      "context": {
        "type": "function",
        "name": "get-scale-integer",
        "code": "\n  @if map-has-key($named-font-sizes, $scale) {\n    @return map-get($named-font-sizes, $scale);\n  }\n  @elseif is-integer($scale) {\n    @return $scale;\n  }\n\n  @error '`$scale` must either be an integer or exist as a named font size in `$named-font-sizes`';\n",
        "line": {
          "start": 16,
          "end": 25
        }
      },
      "parameter": [
        {
          "name": "scale",
          "description": "<p>{Integer|Name} The integer ratio or named font-size.</p>\n"
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "named-font-sizes"
        },
        {
          "type": "variable",
          "name": "named-font-sizes"
        },
        {
          "type": "variable",
          "name": "named-font-sizes"
        }
      ],
      "throw": [
        "<p><code>$scale</code> must either be an integer or exist as a named font size in <code>$named-font-sizes</code></p>\n"
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-helpers.scss",
        "name": "_typography-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Gets a numeric font size (in px) from a given scale multiplier.\nUsually not used directly - the font-size or font mixin is usually used instead.</p>\n",
          "context": {
            "type": "function",
            "name": "get-font-size",
            "code": "\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n  @return map-get($font-map, fs);\n",
            "line": {
              "start": 37,
              "end": 41
            }
          }
        },
        {
          "description": "<p>Gets a numeric line height (in px) from a given scale multiplier.\nUsually not used directly - the font-size or font mixin is usually used instead.</p>\n",
          "context": {
            "type": "function",
            "name": "get-line-height",
            "code": "\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n  @return map-get($font-map, lh);\n",
            "line": {
              "start": 52,
              "end": 56
            }
          }
        },
        {
          "description": "<p>Nice font: includes font size, line height, and margins.</p>\n",
          "context": {
            "type": "mixin",
            "name": "font",
            "code": "\n  @include font-size($scale);\n\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n\n  font-weight: map-get($font-map, fw);\n  margin-bottom: rem(map-get($font-map, mb));\n  margin-top: rem(map-get($font-map, mt));\n",
            "line": {
              "start": 88,
              "end": 97
            }
          }
        }
      ],
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Gets a numeric font size (in px) from a given scale multiplier.\nUsually not used directly - the font-size or font mixin is usually used instead.</p>\n",
      "commentRange": {
        "start": 28,
        "end": 36
      },
      "context": {
        "type": "function",
        "name": "get-font-size",
        "code": "\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n  @return map-get($font-map, fs);\n",
        "line": {
          "start": 37,
          "end": 41
        }
      },
      "parameter": [
        {
          "name": "scale",
          "description": "<p>{Integer|Name} The integer ratio or named font-size.</p>\n"
        }
      ],
      "return": {
        "type": "Number",
        "description": "<p>Numeric font size (in px)</p>\n"
      },
      "example": [
        {
          "type": "scss",
          "code": "$font-size: get-font-size(2)"
        },
        {
          "type": "scss",
          "code": "$font-size: get-font-size(h1)"
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "function",
          "name": "get-scale-integer"
        },
        {
          "type": "variable",
          "name": "font-sizes"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-helpers.scss",
        "name": "_typography-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Applies font size and line-height for the given scale.</p>\n",
          "context": {
            "type": "mixin",
            "name": "font-size",
            "code": "\n  $font-size: get-font-size($scale);\n  $line-height: get-line-height($scale);\n\n  font-size: rem($font-size);\n  line-height: rem($line-height);\n",
            "line": {
              "start": 69,
              "end": 75
            }
          }
        }
      ],
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Gets a numeric line height (in px) from a given scale multiplier.\nUsually not used directly - the font-size or font mixin is usually used instead.</p>\n",
      "commentRange": {
        "start": 43,
        "end": 51
      },
      "context": {
        "type": "function",
        "name": "get-line-height",
        "code": "\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n  @return map-get($font-map, lh);\n",
        "line": {
          "start": 52,
          "end": 56
        }
      },
      "parameter": [
        {
          "name": "scale",
          "description": "<p>{Integer|Name} The integer ratio or named font-size.</p>\n"
        }
      ],
      "return": {
        "type": "Number",
        "description": "<p>Numeric line-height (in px)</p>\n"
      },
      "example": [
        {
          "type": "scss",
          "code": "$line-height: get-line-height(2)"
        },
        {
          "type": "scss",
          "code": "$line-height: get-line-height(h1)"
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "function",
          "name": "get-scale-integer"
        },
        {
          "type": "variable",
          "name": "font-sizes"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-helpers.scss",
        "name": "_typography-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Applies font size and line-height for the given scale.</p>\n",
          "context": {
            "type": "mixin",
            "name": "font-size",
            "code": "\n  $font-size: get-font-size($scale);\n  $line-height: get-line-height($scale);\n\n  font-size: rem($font-size);\n  line-height: rem($line-height);\n",
            "line": {
              "start": 69,
              "end": 75
            }
          }
        }
      ],
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Applies font size and line-height for the given scale.</p>\n",
      "commentRange": {
        "start": 58,
        "end": 68
      },
      "context": {
        "type": "mixin",
        "name": "font-size",
        "code": "\n  $font-size: get-font-size($scale);\n  $line-height: get-line-height($scale);\n\n  font-size: rem($font-size);\n  line-height: rem($line-height);\n",
        "line": {
          "start": 69,
          "end": 75
        }
      },
      "parameter": [
        {
          "name": "scale",
          "description": "<p>{Integer|Name} The integer ratio or named font-size.</p>\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": ".test {\n  @include font-size(-2);\n}"
        },
        {
          "type": "scss",
          "code": ".test {\n  @include font-size(h1);\n}"
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "function",
          "name": "get-font-size"
        },
        {
          "type": "function",
          "name": "get-line-height"
        },
        {
          "type": "function",
          "name": "rem"
        },
        {
          "type": "function",
          "name": "rem"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-helpers.scss",
        "name": "_typography-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Nice font: includes font size, line height, and margins.</p>\n",
          "context": {
            "type": "mixin",
            "name": "font",
            "code": "\n  @include font-size($scale);\n\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n\n  font-weight: map-get($font-map, fw);\n  margin-bottom: rem(map-get($font-map, mb));\n  margin-top: rem(map-get($font-map, mt));\n",
            "line": {
              "start": 88,
              "end": 97
            }
          }
        }
      ],
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Nice font: includes font size, line height, and margins.</p>\n",
      "commentRange": {
        "start": 77,
        "end": 87
      },
      "context": {
        "type": "mixin",
        "name": "font",
        "code": "\n  @include font-size($scale);\n\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n\n  font-weight: map-get($font-map, fw);\n  margin-bottom: rem(map-get($font-map, mb));\n  margin-top: rem(map-get($font-map, mt));\n",
        "line": {
          "start": 88,
          "end": 97
        }
      },
      "parameter": [
        {
          "name": "scale",
          "description": "<p>{Integer|Name} The integer ratio or named font-size.</p>\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": ".test {\n  @include font(3);\n}"
        },
        {
          "type": "scss",
          "code": ".test {\n  @include font(h1);\n}"
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "font-size"
        },
        {
          "type": "function",
          "name": "get-scale-integer"
        },
        {
          "type": "function",
          "name": "rem"
        },
        {
          "type": "function",
          "name": "rem"
        },
        {
          "type": "variable",
          "name": "font-sizes"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-helpers.scss",
        "name": "_typography-helpers.scss"
      },
      "usedBy": [
        {
          "description": "<p>Primary heading. Used for h1 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
          "context": {
            "type": "mixin",
            "name": "h1",
            "code": "\n  @include font(h1);\n",
            "line": {
              "start": 28,
              "end": 30
            }
          }
        },
        {
          "description": "<p>Secondary heading. Used for h2 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
          "context": {
            "type": "mixin",
            "name": "h2",
            "code": "\n  @include font(h2);\n",
            "line": {
              "start": 35,
              "end": 37
            }
          }
        },
        {
          "description": "<p>Tertiary heading. Used for h3 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
          "context": {
            "type": "mixin",
            "name": "h3",
            "code": "\n  @include font(h3);\n",
            "line": {
              "start": 42,
              "end": 44
            }
          }
        },
        {
          "description": "<p>Fourth level heading. Used for h4 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
          "context": {
            "type": "mixin",
            "name": "h4",
            "code": "\n  @include font(h4);\n",
            "line": {
              "start": 49,
              "end": 51
            }
          }
        },
        {
          "description": "<p>Fifth level heading. Used for h5 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
          "context": {
            "type": "mixin",
            "name": "h5",
            "code": "\n  @include font(h5);\n",
            "line": {
              "start": 56,
              "end": 58
            }
          }
        },
        {
          "description": "<p>Sixth level heading. Used for h6 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
          "context": {
            "type": "mixin",
            "name": "h6",
            "code": "\n  @include font(h6);\n",
            "line": {
              "start": 63,
              "end": 65
            }
          }
        },
        {
          "description": "<p>Lead paragraph style</p>\n",
          "context": {
            "type": "mixin",
            "name": "lead",
            "code": "\n  @include font(lead);\n",
            "line": {
              "start": 101,
              "end": 103
            }
          }
        }
      ],
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Lead paragraph style</p>\n",
      "commentRange": {
        "start": 99,
        "end": 100
      },
      "context": {
        "type": "mixin",
        "name": "lead",
        "code": "\n  @include font(lead);\n",
        "line": {
          "start": 101,
          "end": 103
        }
      },
      "since": [
        {
          "version": "0.2.12"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "font"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-helpers.scss",
        "name": "_typography-helpers.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Default link style for use on a normal (light) background</p>\n",
      "commentRange": {
        "start": 5,
        "end": 6
      },
      "context": {
        "type": "placeholder",
        "name": "link",
        "code": "\n  color: $colour-link;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-visited;\n  }\n\n  &:hover {\n    color: $colour-link-hover;\n  }\n\n  &:focus {\n    @include default-focus-style;\n    color: $colour-link-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-active;\n  }\n",
        "line": {
          "start": 7,
          "end": 28
        }
      },
      "since": [
        {
          "version": "0.2.10"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "default-focus-style"
        },
        {
          "type": "variable",
          "name": "colour-link"
        },
        {
          "type": "variable",
          "name": "colour-link-visited"
        },
        {
          "type": "variable",
          "name": "colour-link-hover"
        },
        {
          "type": "variable",
          "name": "colour-link-focus-text"
        },
        {
          "type": "variable",
          "name": "colour-link-active"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-links.scss",
        "name": "_typography-links.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Inverse link style for use on an inverse (dark) background</p>\n",
      "commentRange": {
        "start": 30,
        "end": 31
      },
      "context": {
        "type": "placeholder",
        "name": "inverse-link",
        "code": "\n  color: $colour-link-inverse;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-inverse-visited;\n  }\n\n  &:hover {\n    color: $colour-link-inverse-hover;\n  }\n\n  &:focus {\n    color: $colour-link-inverse-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-inverse-active;\n  }\n",
        "line": {
          "start": 32,
          "end": 52
        }
      },
      "since": [
        {
          "version": "0.2.9"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "colour-link-inverse"
        },
        {
          "type": "variable",
          "name": "colour-link-inverse-visited"
        },
        {
          "type": "variable",
          "name": "colour-link-inverse-hover"
        },
        {
          "type": "variable",
          "name": "colour-link-inverse-focus-text"
        },
        {
          "type": "variable",
          "name": "colour-link-inverse-active"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-links.scss",
        "name": "_typography-links.scss"
      },
      "usedBy": [
        {
          "description": "<p>Inverse links for use on a dark background</p>\n",
          "context": {
            "type": "placeholder",
            "name": "inverse-links",
            "code": "\n  a {\n    @extend %inverse-link;\n  }\n",
            "line": {
              "start": 56,
              "end": 60
            }
          }
        }
      ],
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Inverse links for use on a dark background</p>\n",
      "commentRange": {
        "start": 54,
        "end": 55
      },
      "context": {
        "type": "placeholder",
        "name": "inverse-links",
        "code": "\n  a {\n    @extend %inverse-link;\n  }\n",
        "line": {
          "start": 56,
          "end": 60
        }
      },
      "since": [
        {
          "version": "0.2.9"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "placeholder",
          "name": "inverse-link"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-links.scss",
        "name": "_typography-links.scss"
      },
      "usedBy": [
        {
          "description": "<p>Modifier for the panel, to use a inverse (dark) background.\nAutmatically uses inverse links within it. Doesn&#39;t affect buttons\nthough, so any buttons within a dark panel should be <code>.btn.btn--light</code>.</p>\n",
          "context": {
            "type": "css",
            "name": ".panel--inverse",
            "value": "@extend %inverse-links;\n  background: $colour-panel-inverse;\n  color: $colour-text-inverse;",
            "line": {
              "start": 28,
              "end": 33
            }
          }
        },
        {
          "description": "<p>Inverse links, for use on dark backgrounds e.g dark panels.\nUse this class on a containing element to apply to all links within it.</p>\n",
          "context": {
            "type": "css",
            "name": ".inverse-links",
            "value": "@extend %inverse-links;",
            "line": {
              "start": 77,
              "end": 80
            }
          }
        }
      ],
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Inverse link for use on a dark background. Apply to an individual link.\nPrefer using <code>.inverse-links</code> on the container instead.</p>\n",
      "commentRange": {
        "start": 66,
        "end": 68
      },
      "context": {
        "type": "css",
        "name": ".link--inverse",
        "value": "@extend %inverse-link;",
        "line": {
          "start": 69,
          "end": 80
        }
      },
      "since": [
        {
          "version": "0.2.9"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\typography\\_typography-links.scss",
        "name": "_typography-links.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Inverse links, for use on dark backgrounds e.g dark panels.\nUse this class on a containing element to apply to all links within it.</p>\n",
      "commentRange": {
        "start": 73,
        "end": 76
      },
      "context": {
        "type": "css",
        "name": ".inverse-links",
        "value": "@extend %inverse-links;",
        "line": {
          "start": 77,
          "end": 80
        }
      },
      "require": [
        {
          "type": "placeholder",
          "name": "inverse-links",
          "external": false
        }
      ],
      "since": [
        {
          "version": "0.2.9"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\typography\\_typography-links.scss",
        "name": "_typography-links.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>List placeholder</p>\n",
      "commentRange": {
        "start": 5,
        "end": 6
      },
      "context": {
        "type": "placeholder",
        "name": "list",
        "code": "\n  font-feature-settings: 'kern', 'onum', 'liga';\n  margin-left: rem($spacing-medium);\n  padding: 0;\n",
        "line": {
          "start": 7,
          "end": 11
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "require": [
        {
          "type": "function",
          "name": "rem"
        },
        {
          "type": "variable",
          "name": "spacing-medium"
        }
      ],
      "file": {
        "path": "stylesheets\\typography\\_typography-lists.scss",
        "name": "_typography-lists.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Base list class. Can be used with various modifiers.</p>\n",
      "commentRange": {
        "start": 18,
        "end": 21
      },
      "context": {
        "type": "css",
        "name": ".list",
        "value": "@extend %list;",
        "line": {
          "start": 22,
          "end": 45
        }
      },
      "see": [
        {
          "description": "<p>Unstyled list modifier - remove bullets, padding etc.\nUsed as a modifier for <code>.list</code>.\nOften used for lists of links.</p>\n",
          "context": {
            "type": "css",
            "name": ".list--unstyled",
            "value": "list-style: none;\n  margin-left: 0;\n  padding: 0;",
            "line": {
              "start": 31,
              "end": 45
            }
          }
        },
        {
          "description": "<p>Loose list style - with a gap between list items</p>\n",
          "context": {
            "type": "css",
            "name": ".list--loose",
            "value": "li,\n  .list__item {\n    margin-bottom: rem($spacing-x-small);\n  }",
            "line": {
              "start": 39,
              "end": 45
            }
          }
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\typography\\_typography-lists.scss",
        "name": "_typography-lists.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Unstyled list modifier - remove bullets, padding etc.\nUsed as a modifier for <code>.list</code>.\nOften used for lists of links.</p>\n",
      "commentRange": {
        "start": 26,
        "end": 30
      },
      "context": {
        "type": "css",
        "name": ".list--unstyled",
        "value": "list-style: none;\n  margin-left: 0;\n  padding: 0;",
        "line": {
          "start": 31,
          "end": 45
        }
      },
      "require": [
        {
          "type": "function",
          "name": ".list",
          "external": true
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\typography\\_typography-lists.scss",
        "name": "_typography-lists.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Loose list style - with a gap between list items</p>\n",
      "commentRange": {
        "start": 37,
        "end": 38
      },
      "context": {
        "type": "css",
        "name": ".list--loose",
        "value": "li,\n  .list__item {\n    margin-bottom: rem($spacing-x-small);\n  }",
        "line": {
          "start": 39,
          "end": 45
        }
      },
      "since": [
        {
          "version": "0.2.12"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\typography\\_typography-lists.scss",
        "name": "_typography-lists.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>Blockquote style</p>\n",
      "commentRange": {
        "start": 5,
        "end": 6
      },
      "context": {
        "type": "css",
        "name": ".quote",
        "value": "@include font-size(lead);\n  border-left: em($spacing-x-small) solid $colour-nice-teal;\n  font-weight: normal;\n  margin: rem($spacing-large 0);\n  padding: rem(0 0 0 $spacing-xx-large);\n  position: relative;\n\n  &:before {\n    color: $colour-nice-teal;\n    content: get-glyph(left-double-quotation-mark);\n    display: block;\n    font-family: Arial;\n    font-size: 5rem;\n    font-weight: bold;\n    left: 0;\n    line-height: .8;\n    position: absolute;\n    text-align: center;\n    top: 0;\n    width: rem($spacing-xx-large);\n\n    @media print {\n      color: $colour-true-black;\n    }\n  }\n\n  p {\n    font-size: inherit;\n  }\n\n  footer,\n  cite {\n    @include font-size($scale: 0);\n    font-style: normal;\n  }",
        "line": {
          "start": 7,
          "end": 44
        }
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\typography\\_typography-quotations.scss",
        "name": "_typography-quotations.scss"
      },
      "groupName": {
        "typography": "Typography"
      }
    },
    {
      "description": "<p>A map of named font sizes to their corresponding modular scale factor</p>\n",
      "commentRange": {
        "start": 5,
        "end": 13
      },
      "context": {
        "type": "variable",
        "name": "named-font-sizes",
        "value": "(\n  h1: 7,\n  h2: 6,\n  h3: 5,\n  h4: 4,\n  h5: 3,\n  h6: 2,\n  lead: 1,\n  p: 0\n)",
        "scope": "private",
        "line": {
          "start": 14,
          "end": 23
        }
      },
      "property": [
        {
          "type": "Integer",
          "name": "h1",
          "default": "6",
          "description": "<p>Heading 1</p>\n",
          "resolvedValue": "6"
        },
        {
          "type": "Integer",
          "name": "h2",
          "default": "5",
          "description": "<p>Heading 2</p>\n",
          "resolvedValue": "5"
        },
        {
          "type": "Integer",
          "name": "h3",
          "default": "4",
          "description": "<p>Heading 3</p>\n",
          "resolvedValue": "4"
        },
        {
          "type": "Integer",
          "name": "h4",
          "default": "3",
          "description": "<p>Heading 4</p>\n",
          "resolvedValue": "3"
        },
        {
          "type": "Integer",
          "name": "h5",
          "default": "2",
          "description": "<p>Heading 5</p>\n",
          "resolvedValue": "2"
        },
        {
          "type": "Integer",
          "name": "h6",
          "default": "1",
          "description": "<p>Heading 6</p>\n",
          "resolvedValue": "1"
        },
        {
          "type": "Integer",
          "name": "p",
          "default": "0",
          "description": "<p>Paragraph</p>\n",
          "resolvedValue": "0"
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\typography\\_typography-settings.scss",
        "name": "_typography-settings.scss"
      },
      "usedBy": [
        {
          "description": "<p>Gets a numeric scale</p>\n",
          "context": {
            "type": "function",
            "name": "get-scale-integer",
            "code": "\n  @if map-has-key($named-font-sizes, $scale) {\n    @return map-get($named-font-sizes, $scale);\n  }\n  @elseif is-integer($scale) {\n    @return $scale;\n  }\n\n  @error '`$scale` must either be an integer or exist as a named font size in `$named-font-sizes`';\n",
            "line": {
              "start": 16,
              "end": 25
            }
          }
        },
        {
          "description": "<p>Gets a numeric scale</p>\n",
          "context": {
            "type": "function",
            "name": "get-scale-integer",
            "code": "\n  @if map-has-key($named-font-sizes, $scale) {\n    @return map-get($named-font-sizes, $scale);\n  }\n  @elseif is-integer($scale) {\n    @return $scale;\n  }\n\n  @error '`$scale` must either be an integer or exist as a named font size in `$named-font-sizes`';\n",
            "line": {
              "start": 16,
              "end": 25
            }
          }
        },
        {
          "description": "<p>Gets a numeric scale</p>\n",
          "context": {
            "type": "function",
            "name": "get-scale-integer",
            "code": "\n  @if map-has-key($named-font-sizes, $scale) {\n    @return map-get($named-font-sizes, $scale);\n  }\n  @elseif is-integer($scale) {\n    @return $scale;\n  }\n\n  @error '`$scale` must either be an integer or exist as a named font size in `$named-font-sizes`';\n",
            "line": {
              "start": 16,
              "end": 25
            }
          }
        }
      ],
      "groupName": {
        "typography": "Typography"
      },
      "resolvedValue": "(\n  h1: 7,\n  h2: 6,\n  h3: 5,\n  h4: 4,\n  h5: 3,\n  h6: 2,\n  lead: 1,\n  p: 0\n)"
    },
    {
      "description": "<p>Numeric font sizes</p>\n",
      "commentRange": {
        "start": 25,
        "end": 26
      },
      "context": {
        "type": "variable",
        "name": "font-sizes",
        "value": "(\n  // sass-lint:disable-block space-around-operator\n  -1: (\n    fs: 14,\n    lh: 4 * 5,\n    fw: 400,\n    mb: $spacing-medium,\n    mt: $spacing-medium\n  ),\n  // Paragraphs\n  0: (\n    fs: 4 * 4,\n    lh: 4 * 6,\n    fw: 400,\n    mb: $spacing-medium,\n    mt: $spacing-medium\n  ),\n  // Lead\n  1: (\n    fs: 4 * 5,\n    lh: 4 * 7,\n    fw: 400,\n    mb: $spacing-medium,\n    mt: $spacing-medium\n  ),\n  // h6\n  2: (\n    fs: 4 * 4,\n    lh: 4 * 5,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h5\n  3: (\n    fs: 4 * 5,\n    lh: 4 * 6,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h4\n  4: (\n    fs: 4 * 6,\n    lh: 4 * 7,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h3\n  5: (\n    fs: 4 * 7,\n    lh: 4 * 8,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h2\n  6: (\n    fs: 4 * 9,\n    lh: 4 * 10,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h1\n  7: (\n    fs: 4 * 11,\n    lh: 4 * 12,\n    fw: 900,\n    mb: $spacing-medium,\n    mt: 0,\n  )\n)",
        "scope": "private",
        "line": {
          "start": 27,
          "end": 100
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "group": [
        "typography"
      ],
      "access": "public",
      "file": {
        "path": "stylesheets\\typography\\_typography-settings.scss",
        "name": "_typography-settings.scss"
      },
      "usedBy": [
        {
          "description": "<p>Gets a numeric font size (in px) from a given scale multiplier.\nUsually not used directly - the font-size or font mixin is usually used instead.</p>\n",
          "context": {
            "type": "function",
            "name": "get-font-size",
            "code": "\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n  @return map-get($font-map, fs);\n",
            "line": {
              "start": 37,
              "end": 41
            }
          }
        },
        {
          "description": "<p>Gets a numeric line height (in px) from a given scale multiplier.\nUsually not used directly - the font-size or font mixin is usually used instead.</p>\n",
          "context": {
            "type": "function",
            "name": "get-line-height",
            "code": "\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n  @return map-get($font-map, lh);\n",
            "line": {
              "start": 52,
              "end": 56
            }
          }
        },
        {
          "description": "<p>Nice font: includes font size, line height, and margins.</p>\n",
          "context": {
            "type": "mixin",
            "name": "font",
            "code": "\n  @include font-size($scale);\n\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n\n  font-weight: map-get($font-map, fw);\n  margin-bottom: rem(map-get($font-map, mb));\n  margin-top: rem(map-get($font-map, mt));\n",
            "line": {
              "start": 88,
              "end": 97
            }
          }
        }
      ],
      "groupName": {
        "typography": "Typography"
      },
      "resolvedValue": "(\n  // sass-lint:disable-block space-around-operator\n  -1: (\n    fs: 14,\n    lh: 4 * 5,\n    fw: 400,\n    mb: $spacing-medium,\n    mt: $spacing-medium\n  ),\n  // Paragraphs\n  0: (\n    fs: 4 * 4,\n    lh: 4 * 6,\n    fw: 400,\n    mb: $spacing-medium,\n    mt: $spacing-medium\n  ),\n  // Lead\n  1: (\n    fs: 4 * 5,\n    lh: 4 * 7,\n    fw: 400,\n    mb: $spacing-medium,\n    mt: $spacing-medium\n  ),\n  // h6\n  2: (\n    fs: 4 * 4,\n    lh: 4 * 5,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h5\n  3: (\n    fs: 4 * 5,\n    lh: 4 * 6,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h4\n  4: (\n    fs: 4 * 6,\n    lh: 4 * 7,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h3\n  5: (\n    fs: 4 * 7,\n    lh: 4 * 8,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h2\n  6: (\n    fs: 4 * 9,\n    lh: 4 * 10,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h1\n  7: (\n    fs: 4 * 11,\n    lh: 4 * 12,\n    fw: 900,\n    mb: $spacing-medium,\n    mt: 0,\n  )\n)"
    },
    {
      "description": "<p>Modular scale values</p>\n",
      "commentRange": {
        "start": 1,
        "end": 19
      },
      "context": {
        "type": "variable",
        "name": "scales",
        "value": "(\n  golden: 1.618034,\n  double-octave: 4 / 1,\n  major-twelfth: 3 / 1,\n  major-eleventh: 8 / 3,\n  major-tenth: 5 / 2,\n  octave: 2 / 1,\n  major-seventh: 15 / 8,\n  minor-seventh: 16 / 9,\n  major-sixth: 5 / 3,\n  minor-sixth: 8 / 5,\n  fifth: 3 / 2,\n  augmented-fourth: sqrt(2) / 1,\n  fourth: 4 / 3,\n  major-third: 5 / 4,\n  minor-third: 6 / 5,\n  major-second: 9 / 8,\n  minor-second: 16 / 15\n)",
        "scope": "private",
        "line": {
          "start": 20,
          "end": 38
        }
      },
      "link": [
        {
          "url": "http://www.modularscale.com/",
          "caption": ""
        }
      ],
      "property": [
        {
          "type": "Number",
          "name": "golden",
          "default": "1.618034",
          "resolvedValue": "1.618034"
        },
        {
          "type": "Number",
          "name": "double-octave",
          "default": "4",
          "resolvedValue": "4"
        },
        {
          "type": "Number",
          "name": "major-twelfth",
          "default": "3",
          "resolvedValue": "3"
        },
        {
          "type": "Number",
          "name": "major-eleventh",
          "default": "2.666666667",
          "resolvedValue": "2.666666667"
        },
        {
          "type": "Number",
          "name": "major-tenth",
          "default": "2.5",
          "resolvedValue": "2.5"
        },
        {
          "type": "Number",
          "name": "octave",
          "default": "2",
          "resolvedValue": "2"
        },
        {
          "type": "Number",
          "name": "major-seventh",
          "default": "1.875",
          "resolvedValue": "1.875"
        },
        {
          "type": "Number",
          "name": "minor-seventh",
          "default": "1.777777778",
          "resolvedValue": "1.777777778"
        },
        {
          "type": "Number",
          "name": "major-sixth",
          "default": "1.666666667",
          "resolvedValue": "1.666666667"
        },
        {
          "type": "Number",
          "name": "minor-sixth",
          "default": "1.6",
          "resolvedValue": "1.6"
        },
        {
          "type": "Number",
          "name": "fifth",
          "default": "1.5",
          "resolvedValue": "1.5"
        },
        {
          "type": "Number",
          "name": "augmented-fourth",
          "default": "1.41421",
          "resolvedValue": "1.41421"
        },
        {
          "type": "Number",
          "name": "major-third",
          "default": "1.25",
          "resolvedValue": "1.25"
        },
        {
          "type": "Number",
          "name": "minor-third",
          "default": "1.2",
          "resolvedValue": "1.2"
        },
        {
          "type": "Number",
          "name": "major-second[1.125]"
        },
        {
          "type": "Number",
          "name": "minor-second[1.066666667]"
        }
      ],
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-modular-scale.scss",
        "name": "_settings-modular-scale.scss"
      },
      "usedBy": [
        {
          "description": "<p>Gets a module scale ratio with the given name. Looks\ninside the $scales map to find a ratio.</p>\n",
          "context": {
            "type": "function",
            "name": "get-ratio",
            "code": "\n  @if map-has-key($scales, $scale) {\n    @return map-get($scales, $scale);\n  } @else {\n    @error 'Scale with name #{$scale} could not be found in the $scales map';\n  }\n",
            "line": {
              "start": 45,
              "end": 51
            }
          }
        },
        {
          "description": "<p>Gets a module scale ratio with the given name. Looks\ninside the $scales map to find a ratio.</p>\n",
          "context": {
            "type": "function",
            "name": "get-ratio",
            "code": "\n  @if map-has-key($scales, $scale) {\n    @return map-get($scales, $scale);\n  } @else {\n    @error 'Scale with name #{$scale} could not be found in the $scales map';\n  }\n",
            "line": {
              "start": 45,
              "end": 51
            }
          }
        },
        {
          "description": "<p>Gets a module scale ratio with the given name. Looks\ninside the $scales map to find a ratio.</p>\n",
          "context": {
            "type": "function",
            "name": "get-ratio",
            "code": "\n  @if map-has-key($scales, $scale) {\n    @return map-get($scales, $scale);\n  } @else {\n    @error 'Scale with name #{$scale} could not be found in the $scales map';\n  }\n",
            "line": {
              "start": 45,
              "end": 51
            }
          }
        }
      ],
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "(\n  golden: 1.618034,\n  double-octave: 4 / 1,\n  major-twelfth: 3 / 1,\n  major-eleventh: 8 / 3,\n  major-tenth: 5 / 2,\n  octave: 2 / 1,\n  major-seventh: 15 / 8,\n  minor-seventh: 16 / 9,\n  major-sixth: 5 / 3,\n  minor-sixth: 8 / 5,\n  fifth: 3 / 2,\n  augmented-fourth: sqrt(2) / 1,\n  fourth: 4 / 3,\n  major-third: 5 / 4,\n  minor-third: 6 / 5,\n  major-second: 9 / 8,\n  minor-second: 16 / 15\n)"
    },
    {
      "description": "<p>Gets a module scale ratio with the given name. Looks\ninside the $scales map to find a ratio.</p>\n",
      "commentRange": {
        "start": 40,
        "end": 44
      },
      "context": {
        "type": "function",
        "name": "get-ratio",
        "code": "\n  @if map-has-key($scales, $scale) {\n    @return map-get($scales, $scale);\n  } @else {\n    @error 'Scale with name #{$scale} could not be found in the $scales map';\n  }\n",
        "line": {
          "start": 45,
          "end": 51
        }
      },
      "parameter": [
        {
          "name": "scale",
          "description": "<p>The name of the scale</p>\n"
        }
      ],
      "return": {
        "type": "Number",
        "description": "<p>The numeric scale ratio for the given name</p>\n"
      },
      "since": [
        {
          "version": "0.1.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "require": [
        {
          "type": "variable",
          "name": "scales"
        },
        {
          "type": "variable",
          "name": "scales"
        },
        {
          "type": "variable",
          "name": "scales"
        }
      ],
      "throw": [
        "<p>Scale with name #{$scale} could not be found in the $scales map</p>\n"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-modular-scale.scss",
        "name": "_settings-modular-scale.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      }
    },
    {
      "description": "<p>Baseline, in pixels</p>\n",
      "commentRange": {
        "start": 1,
        "end": 2
      },
      "context": {
        "type": "variable",
        "name": "nice-baseline",
        "value": "4",
        "scope": "default",
        "line": {
          "start": 3,
          "end": 3
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "4"
    },
    {
      "description": "<p>Base font size, in pixels</p>\n",
      "commentRange": {
        "start": 5,
        "end": 6
      },
      "context": {
        "type": "variable",
        "name": "nice-base-font-size",
        "value": "$nice-baseline * 4",
        "scope": "default",
        "line": {
          "start": 7,
          "end": 7
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "$nice-baseline * 4"
    },
    {
      "description": "<p>Base line height, in pixels</p>\n",
      "commentRange": {
        "start": 9,
        "end": 10
      },
      "context": {
        "type": "variable",
        "name": "nice-base-line-height",
        "value": "$nice-baseline * 6",
        "scope": "default",
        "line": {
          "start": 11,
          "end": 11
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "$nice-baseline * 6"
    },
    {
      "description": "<p>The width of the default spacing between grid items</p>\n",
      "commentRange": {
        "start": 13,
        "end": 14
      },
      "context": {
        "type": "variable",
        "name": "nice-grid-gutter",
        "value": "1em * ($spacing-medium / 16)",
        "scope": "default",
        "line": {
          "start": 15,
          "end": 15
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "usedBy": [
        {
          "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid",
            "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
            "line": {
              "start": 42,
              "end": 76
            }
          }
        },
        {
          "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid-item",
            "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
            "line": {
              "start": 180,
              "end": 238
            }
          }
        }
      ],
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "1em * ($spacing-medium / 16)"
    },
    {
      "description": "<p>The width of the spacing between grid items in a compact grid</p>\n",
      "commentRange": {
        "start": 17,
        "end": 18
      },
      "context": {
        "type": "variable",
        "name": "nice-grid-gutter-compact",
        "value": "1em * ($spacing-small / 16)",
        "scope": "default",
        "line": {
          "start": 19,
          "end": 19
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "usedBy": [
        {
          "description": "<p>Compact grids have a smaller gutter</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid-compact",
            "code": "\n  margin-left: -$nice-grid-gutter-compact;\n",
            "line": {
              "start": 96,
              "end": 98
            }
          }
        },
        {
          "description": "<p>Compact grid item with a smaller gutter</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid-item-compact",
            "code": "\n  padding-left: $nice-grid-gutter-compact;\n",
            "line": {
              "start": 248,
              "end": 250
            }
          }
        }
      ],
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "1em * ($spacing-small / 16)"
    },
    {
      "description": "<p>The width of the spacing between grid items in a loose grid</p>\n",
      "commentRange": {
        "start": 21,
        "end": 22
      },
      "context": {
        "type": "variable",
        "name": "nice-grid-gutter-loose",
        "value": "1em * ($spacing-large / 16)",
        "scope": "default",
        "line": {
          "start": 23,
          "end": 23
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "usedBy": [
        {
          "description": "<p>Loose grids have a smaller gutter</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid-loose",
            "code": "\n  margin-left: -$nice-grid-gutter-loose;\n",
            "line": {
              "start": 103,
              "end": 105
            }
          }
        },
        {
          "description": "<p>Loose grid item with a larger gutter</p>\n",
          "context": {
            "type": "mixin",
            "name": "grid-item-loose",
            "code": "\n  padding-left: $nice-grid-gutter-loose;\n",
            "line": {
              "start": 254,
              "end": 256
            }
          }
        }
      ],
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "1em * ($spacing-large / 16)"
    },
    {
      "description": "<p>Sans-serif font stack</p>\n",
      "commentRange": {
        "start": 25,
        "end": 26
      },
      "context": {
        "type": "variable",
        "name": "nice-font-family-sans",
        "value": "'\"Lato\", \"Helvetica Neue\", Helvetica, Arial, sans-serif'",
        "scope": "default",
        "line": {
          "start": 27,
          "end": 27
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "'\"Lato\", \"Helvetica Neue\", Helvetica, Arial, sans-serif'"
    },
    {
      "description": "<p>Serif font stack</p>\n",
      "commentRange": {
        "start": 29,
        "end": 30
      },
      "context": {
        "type": "variable",
        "name": "nice-font-family-serif",
        "value": "'Georgia, \"Times New Roman\", Times, serif'",
        "scope": "default",
        "line": {
          "start": 31,
          "end": 31
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "'Georgia, \"Times New Roman\", Times, serif'"
    },
    {
      "description": "<p>Mono font stack</p>\n",
      "commentRange": {
        "start": 33,
        "end": 34
      },
      "context": {
        "type": "variable",
        "name": "nice-font-family-mono",
        "value": "'Monaco, Menlo, Consolas, \"Courier New\", monospace'",
        "scope": "default",
        "line": {
          "start": 35,
          "end": 35
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "'Monaco, Menlo, Consolas, \"Courier New\", monospace'"
    },
    {
      "description": "<p>The font families in use across NICE.</p>\n",
      "commentRange": {
        "start": 37,
        "end": 42
      },
      "context": {
        "type": "variable",
        "name": "nice-font-families",
        "value": "(\n  sans: $nice-font-family-sans,\n  serif: $nice-font-family-serif,\n  mono: $nice-font-family-mono\n)",
        "scope": "default",
        "line": {
          "start": 43,
          "end": 47
        }
      },
      "property": [
        {
          "type": "Font stack",
          "name": "sans",
          "default": "Lato, Helvetica Neue, Helvetica, Arial, sans-serif",
          "description": "<p>The sans-serif font stack</p>\n",
          "resolvedValue": "Lato, Helvetica Neue, Helvetica, Arial, sans-serif"
        },
        {
          "type": "Font stack",
          "name": "serif",
          "default": "Georgia, \"Times New Roman\", Times, serif",
          "description": "<p>The serif font stack</p>\n",
          "resolvedValue": "Georgia, \"Times New Roman\", Times, serif"
        },
        {
          "type": "Font stack",
          "name": "mono",
          "default": "Monaco, Menlo, Consolas, \"Courier New\", monospace",
          "description": "<p>The monospace font stack</p>\n",
          "resolvedValue": "Monaco, Menlo, Consolas, \"Courier New\", monospace"
        }
      ],
      "see": [
        {
          "description": "<p>Gets a font family from the <code>$nice-font-families</code> map, given a name</p>\n",
          "context": {
            "type": "function",
            "name": "font-family",
            "code": "\n  $result: map-get($nice-font-families, $stack);\n  @return unquote($result);\n",
            "line": {
              "start": 8,
              "end": 11
            }
          }
        }
      ],
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "usedBy": [
        {
          "description": "<p>Gets a font family from the <code>$nice-font-families</code> map, given a name</p>\n",
          "context": {
            "type": "function",
            "name": "font-family",
            "code": "\n  $result: map-get($nice-font-families, $stack);\n  @return unquote($result);\n",
            "line": {
              "start": 8,
              "end": 11
            }
          }
        }
      ],
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "(\n  sans: $nice-font-family-sans,\n  serif: $nice-font-family-serif,\n  mono: $nice-font-family-mono\n)"
    },
    {
      "description": "<p>The modular scale ratio to use for typography</p>\n",
      "commentRange": {
        "start": 49,
        "end": 50
      },
      "context": {
        "type": "variable",
        "name": "nice-type-ratio",
        "value": "get-ratio(fourth)",
        "scope": "default",
        "line": {
          "start": 51,
          "end": 51
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "get-ratio(fourth)"
    },
    {
      "description": "<p>Extra small break point</p>\n",
      "commentRange": {
        "start": 53,
        "end": 54
      },
      "context": {
        "type": "variable",
        "name": "nice-breakpoint-xs",
        "value": "400px",
        "scope": "default",
        "line": {
          "start": 55,
          "end": 55
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "400px"
    },
    {
      "description": "<p>&#39;Small&#39; break point. Roughly portrait tablets.</p>\n",
      "commentRange": {
        "start": 57,
        "end": 58
      },
      "context": {
        "type": "variable",
        "name": "nice-breakpoint-sm",
        "value": "600px",
        "scope": "default",
        "line": {
          "start": 59,
          "end": 59
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "600px"
    },
    {
      "description": "<p>&#39;Medium&#39; break point. Roughly landscape tablets.</p>\n",
      "commentRange": {
        "start": 61,
        "end": 62
      },
      "context": {
        "type": "variable",
        "name": "nice-breakpoint-md",
        "value": "900px",
        "scope": "default",
        "line": {
          "start": 63,
          "end": 63
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "900px"
    },
    {
      "description": "<p>&#39;Large&#39; break point. Roughly &#39;dektops&#39;.</p>\n",
      "commentRange": {
        "start": 65,
        "end": 66
      },
      "context": {
        "type": "variable",
        "name": "nice-breakpoint-lg",
        "value": "1200px",
        "scope": "default",
        "line": {
          "start": 67,
          "end": 67
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "1200px"
    },
    {
      "description": "<p>&#39;Extra large&#39; break point for wide screens</p>\n",
      "commentRange": {
        "start": 69,
        "end": 70
      },
      "context": {
        "type": "variable",
        "name": "nice-breakpoint-xl",
        "value": "1600px",
        "scope": "default",
        "line": {
          "start": 71,
          "end": 71
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "1600px"
    },
    {
      "description": "<p>The minimum root font size, in pixels</p>\n",
      "commentRange": {
        "start": 73,
        "end": 74
      },
      "context": {
        "type": "variable",
        "name": "nice-root-font-size-min",
        "value": "15",
        "scope": "private",
        "line": {
          "start": 75,
          "end": 75
        }
      },
      "since": [
        {
          "version": "0.2.13"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "15"
    },
    {
      "description": "<p>The maximum root font size, used from breakpoint <code>$nice-root-font-size-max-breakpoint</code></p>\n",
      "commentRange": {
        "start": 77,
        "end": 78
      },
      "context": {
        "type": "variable",
        "name": "nice-root-font-size-max",
        "value": "19",
        "scope": "private",
        "line": {
          "start": 79,
          "end": 79
        }
      },
      "since": [
        {
          "version": "0.2.13"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "19"
    },
    {
      "description": "<p>The breakpoint at which the root font size starts changing from minimum\ntowards maximum.</p>\n",
      "commentRange": {
        "start": 81,
        "end": 83
      },
      "context": {
        "type": "variable",
        "name": "nice-root-font-size-min-breakpoint",
        "value": "$nice-breakpoint-md",
        "scope": "private",
        "line": {
          "start": 84,
          "end": 84
        }
      },
      "since": [
        {
          "version": "0.2.13"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "900px"
    },
    {
      "description": "<p>The breakpoint at which the root font size stops changing and is at its maximum\ntowards maximum.</p>\n",
      "commentRange": {
        "start": 86,
        "end": 88
      },
      "context": {
        "type": "variable",
        "name": "nice-root-font-size-max-breakpoint",
        "value": "$nice-breakpoint-lg",
        "scope": "private",
        "line": {
          "start": 89,
          "end": 89
        }
      },
      "since": [
        {
          "version": "0.2.13"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "1200px"
    },
    {
      "description": "<p>Whether to output a default set of generic print styles for things\nlike avoiding page breaks after headings etc. If you disabled this,\nbe sure to add your own print styles.</p>\n",
      "commentRange": {
        "start": 91,
        "end": 94
      },
      "context": {
        "type": "variable",
        "name": "nice-output-default-print-styles",
        "value": "true",
        "scope": "default",
        "line": {
          "start": 95,
          "end": 95
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "true"
    },
    {
      "description": "<p>Whether to output the classes for the UTF-8 glyphs.</p>\n",
      "commentRange": {
        "start": 97,
        "end": 98
      },
      "context": {
        "type": "variable",
        "name": "nice-output-glyph-classes",
        "value": "false",
        "scope": "default",
        "line": {
          "start": 99,
          "end": 99
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "false"
    },
    {
      "description": "<p>Whether the site is responsive. Setting to false will disable\ngeneration of the responsie grid selectors.\nTrue by default.</p>\n",
      "commentRange": {
        "start": 101,
        "end": 104
      },
      "context": {
        "type": "variable",
        "name": "nice-responsive",
        "value": "true",
        "scope": "default",
        "line": {
          "start": 105,
          "end": 105
        }
      },
      "since": [
        {
          "version": "0.2.0"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "stylesheets\\settings\\_settings-variables.scss",
        "name": "_settings-variables.scss"
      },
      "groupName": {
        "undefined": "Ungrouped"
      },
      "resolvedValue": "true"
    }
  ],
  "groups": {
    "undefined": "Ungrouped",
    "general": "General",
    "colors": "Colours",
    "helpers": "Helpers",
    "typography": "Typography",
    "components": "Components",
    "hacks": "Hacks",
    "grid": "Grid",
    "icons": "Icons",
    "spacing": "Spacing",
    "visibility": "Visibility"
  },
  "byGroupAndType": {
    "colors": {
      "variable": [
        {
          "description": "<p>NICE Black. Part of the primary palette.</p>\n",
          "commentRange": {
            "start": 8,
            "end": 9
          },
          "context": {
            "type": "variable",
            "name": "colour-nice-black",
            "value": "#222",
            "scope": "private",
            "line": {
              "start": 10,
              "end": 10
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-nice.scss",
            "name": "_settings-colours-nice.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#222"
        },
        {
          "description": "<p>NICE White. Part of the primary palette</p>\n",
          "commentRange": {
            "start": 12,
            "end": 13
          },
          "context": {
            "type": "variable",
            "name": "colour-nice-white",
            "value": "#fff",
            "scope": "private",
            "line": {
              "start": 14,
              "end": 14
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-nice.scss",
            "name": "_settings-colours-nice.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#fff"
        },
        {
          "description": "<p>NICE Teal. Part of the primary palette.\nFirst choice of colour for supporting</p>\n",
          "commentRange": {
            "start": 16,
            "end": 18
          },
          "context": {
            "type": "variable",
            "name": "colour-nice-teal",
            "value": "#004650",
            "scope": "private",
            "line": {
              "start": 19,
              "end": 19
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-nice.scss",
            "name": "_settings-colours-nice.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#004650"
        },
        {
          "description": "<p>Purple. Part of the secondary palette. Purple should be used sparingly and only used as a\npanel background to highlight a particular section of content,\nin which case font colour must be pure white (NICE White) to make text legible.</p>\n",
          "commentRange": {
            "start": 24,
            "end": 27
          },
          "context": {
            "type": "variable",
            "name": "colour-nice-purple",
            "value": "#451551",
            "scope": "private",
            "line": {
              "start": 28,
              "end": 28
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-nice.scss",
            "name": "_settings-colours-nice.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#451551"
        },
        {
          "description": "<p>Cool Teal. Part of the secondary palette.</p>\n",
          "commentRange": {
            "start": 30,
            "end": 31
          },
          "context": {
            "type": "variable",
            "name": "colour-nice-cool-teal",
            "value": "#00506a",
            "scope": "private",
            "line": {
              "start": 32,
              "end": 32
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-nice.scss",
            "name": "_settings-colours-nice.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#00506a"
        },
        {
          "description": "<p>Rich Black. Part of the secondary palette.</p>\n",
          "commentRange": {
            "start": 34,
            "end": 35
          },
          "context": {
            "type": "variable",
            "name": "colour-nice-rich-black",
            "value": "#0e0e0e",
            "scope": "private",
            "line": {
              "start": 36,
              "end": 36
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-nice.scss",
            "name": "_settings-colours-nice.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#0e0e0e"
        },
        {
          "description": "<p>Dark Grey. Part of the secondary palette.</p>\n",
          "commentRange": {
            "start": 38,
            "end": 39
          },
          "context": {
            "type": "variable",
            "name": "colour-nice-dark-grey",
            "value": "#393939",
            "scope": "private",
            "line": {
              "start": 40,
              "end": 40
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-nice.scss",
            "name": "_settings-colours-nice.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#393939"
        },
        {
          "description": "<p>Grey 1. Part of the secondary palette.</p>\n",
          "commentRange": {
            "start": 42,
            "end": 43
          },
          "context": {
            "type": "variable",
            "name": "colour-nice-grey-1",
            "value": "#adadad",
            "scope": "private",
            "line": {
              "start": 44,
              "end": 44
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-nice.scss",
            "name": "_settings-colours-nice.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#adadad"
        },
        {
          "description": "<p>Grey 2. Part of the secondary palette.</p>\n",
          "commentRange": {
            "start": 46,
            "end": 47
          },
          "context": {
            "type": "variable",
            "name": "colour-nice-grey-2",
            "value": "#d6d6d6",
            "scope": "private",
            "line": {
              "start": 48,
              "end": 48
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-nice.scss",
            "name": "_settings-colours-nice.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#d6d6d6"
        },
        {
          "description": "<p>Grey 3. Part of the secondary palette.</p>\n",
          "commentRange": {
            "start": 50,
            "end": 51
          },
          "context": {
            "type": "variable",
            "name": "colour-nice-grey-3",
            "value": "#e9e9e9",
            "scope": "private",
            "line": {
              "start": 52,
              "end": 52
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-nice.scss",
            "name": "_settings-colours-nice.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#e9e9e9"
        },
        {
          "description": "<p>Blue 1. Part of the tertiary palette.</p>\n",
          "commentRange": {
            "start": 57,
            "end": 58
          },
          "context": {
            "type": "variable",
            "name": "colour-nice-blue-1",
            "value": "#233746",
            "scope": "private",
            "line": {
              "start": 59,
              "end": 59
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-nice.scss",
            "name": "_settings-colours-nice.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#233746"
        },
        {
          "description": "<p>Blue 2. Part of the tertiary palette.</p>\n",
          "commentRange": {
            "start": 61,
            "end": 62
          },
          "context": {
            "type": "variable",
            "name": "colour-nice-blue-2",
            "value": "#314c60",
            "scope": "private",
            "line": {
              "start": 63,
              "end": 63
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-nice.scss",
            "name": "_settings-colours-nice.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#314c60"
        },
        {
          "description": "<p>Blue 3. Part of the tertiary palette.</p>\n",
          "commentRange": {
            "start": 65,
            "end": 66
          },
          "context": {
            "type": "variable",
            "name": "colour-nice-blue-3",
            "value": "#517489",
            "scope": "private",
            "line": {
              "start": 67,
              "end": 67
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-nice.scss",
            "name": "_settings-colours-nice.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#517489"
        },
        {
          "description": "<p>Ice Teal. Part of the tertiary palette.</p>\n",
          "commentRange": {
            "start": 69,
            "end": 70
          },
          "context": {
            "type": "variable",
            "name": "colour-nice-ice-teal",
            "value": "#a2bdc1",
            "scope": "private",
            "line": {
              "start": 71,
              "end": 71
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-nice.scss",
            "name": "_settings-colours-nice.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#a2bdc1"
        },
        {
          "description": "<p>Teal 1. Part of the tertiary palette.</p>\n",
          "commentRange": {
            "start": 73,
            "end": 74
          },
          "context": {
            "type": "variable",
            "name": "colour-nice-teal-1",
            "value": "#4f7d83",
            "scope": "private",
            "line": {
              "start": 75,
              "end": 75
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-nice.scss",
            "name": "_settings-colours-nice.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#4f7d83"
        },
        {
          "description": "<p>Teal 2. Part of the tertiary palette.</p>\n",
          "commentRange": {
            "start": 77,
            "end": 78
          },
          "context": {
            "type": "variable",
            "name": "colour-nice-teal-2",
            "value": "#18646e",
            "scope": "private",
            "line": {
              "start": 79,
              "end": 79
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-nice.scss",
            "name": "_settings-colours-nice.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#18646e"
        },
        {
          "description": "<p>Teal 3. Part of the tertiary palette.</p>\n",
          "commentRange": {
            "start": 81,
            "end": 82
          },
          "context": {
            "type": "variable",
            "name": "colour-nice-teal-3",
            "value": "#15434a",
            "scope": "private",
            "line": {
              "start": 83,
              "end": 83
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-nice.scss",
            "name": "_settings-colours-nice.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#15434a"
        },
        {
          "description": "<p>True black, used for print styles</p>\n",
          "commentRange": {
            "start": 5,
            "end": 6
          },
          "context": {
            "type": "variable",
            "name": "colour-true-black",
            "value": "#000",
            "scope": "private",
            "line": {
              "start": 7,
              "end": 7
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#000"
        },
        {
          "description": "<p>True white, used for print styles</p>\n",
          "commentRange": {
            "start": 9,
            "end": 10
          },
          "context": {
            "type": "variable",
            "name": "colour-true-white",
            "value": "#fff",
            "scope": "private",
            "line": {
              "start": 11,
              "end": 11
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#fff"
        },
        {
          "description": "<p>Page background colour</p>\n",
          "commentRange": {
            "start": 16,
            "end": 17
          },
          "context": {
            "type": "variable",
            "name": "colour-body",
            "value": "#fafafa",
            "scope": "private",
            "line": {
              "start": 18,
              "end": 18
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#fafafa"
        },
        {
          "description": "<p>Standard, primary body text colour</p>\n",
          "commentRange": {
            "start": 20,
            "end": 21
          },
          "context": {
            "type": "variable",
            "name": "colour-text",
            "value": "$colour-nice-rich-black",
            "scope": "private",
            "line": {
              "start": 22,
              "end": 22
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#0e0e0e"
        },
        {
          "description": "<p>Subtle text colour</p>\n",
          "commentRange": {
            "start": 24,
            "end": 25
          },
          "context": {
            "type": "variable",
            "name": "colour-text-subtle",
            "value": "$colour-nice-grey-1",
            "scope": "private",
            "line": {
              "start": 26,
              "end": 26
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#adadad"
        },
        {
          "description": "<p>Inverse body text colour for use on dark background</p>\n",
          "commentRange": {
            "start": 28,
            "end": 29
          },
          "context": {
            "type": "variable",
            "name": "colour-text-inverse",
            "value": "$colour-nice-white",
            "scope": "private",
            "line": {
              "start": 30,
              "end": 30
            }
          },
          "since": [
            {
              "version": "0.2.2"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#fff"
        },
        {
          "description": "<p>Focus colour</p>\n",
          "commentRange": {
            "start": 32,
            "end": 33
          },
          "context": {
            "type": "variable",
            "name": "colour-focus",
            "value": "#0092a6",
            "scope": "private",
            "line": {
              "start": 34,
              "end": 34
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "usedBy": [
            {
              "description": "<p>The default focus style used for elements like anchors and buttons</p>\n",
              "context": {
                "type": "mixin",
                "name": "default-focus-style",
                "code": "\n  outline: 3px solid $colour-focus;\n",
                "line": {
                  "start": 10,
                  "end": 12
                }
              }
            }
          ],
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#0092a6"
        },
        {
          "description": "<p>Icons colour</p>\n",
          "commentRange": {
            "start": 36,
            "end": 37
          },
          "context": {
            "type": "variable",
            "name": "colour-icons",
            "value": "$colour-nice-teal",
            "scope": "private",
            "line": {
              "start": 38,
              "end": 38
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#004650"
        },
        {
          "description": "<p>Link text colour</p>\n",
          "commentRange": {
            "start": 43,
            "end": 44
          },
          "context": {
            "type": "variable",
            "name": "colour-link",
            "value": "#005ea5",
            "scope": "private",
            "line": {
              "start": 45,
              "end": 45
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "usedBy": [
            {
              "description": "<p>Default link style for use on a normal (light) background</p>\n",
              "context": {
                "type": "placeholder",
                "name": "link",
                "code": "\n  color: $colour-link;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-visited;\n  }\n\n  &:hover {\n    color: $colour-link-hover;\n  }\n\n  &:focus {\n    @include default-focus-style;\n    color: $colour-link-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-active;\n  }\n",
                "line": {
                  "start": 7,
                  "end": 28
                }
              }
            }
          ],
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#005ea5"
        },
        {
          "description": "<p>Link hover colour</p>\n",
          "commentRange": {
            "start": 47,
            "end": 48
          },
          "context": {
            "type": "variable",
            "name": "colour-link-hover",
            "value": "#2e8aca",
            "scope": "private",
            "line": {
              "start": 49,
              "end": 49
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "usedBy": [
            {
              "description": "<p>Default link style for use on a normal (light) background</p>\n",
              "context": {
                "type": "placeholder",
                "name": "link",
                "code": "\n  color: $colour-link;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-visited;\n  }\n\n  &:hover {\n    color: $colour-link-hover;\n  }\n\n  &:focus {\n    @include default-focus-style;\n    color: $colour-link-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-active;\n  }\n",
                "line": {
                  "start": 7,
                  "end": 28
                }
              }
            }
          ],
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#2e8aca"
        },
        {
          "description": "<p>Link visited colour</p>\n",
          "commentRange": {
            "start": 51,
            "end": 52
          },
          "context": {
            "type": "variable",
            "name": "colour-link-visited",
            "value": "#4c2c92",
            "scope": "private",
            "line": {
              "start": 53,
              "end": 53
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "usedBy": [
            {
              "description": "<p>Default link style for use on a normal (light) background</p>\n",
              "context": {
                "type": "placeholder",
                "name": "link",
                "code": "\n  color: $colour-link;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-visited;\n  }\n\n  &:hover {\n    color: $colour-link-hover;\n  }\n\n  &:focus {\n    @include default-focus-style;\n    color: $colour-link-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-active;\n  }\n",
                "line": {
                  "start": 7,
                  "end": 28
                }
              }
            }
          ],
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#4c2c92"
        },
        {
          "description": "<p>Link active colour</p>\n",
          "commentRange": {
            "start": 55,
            "end": 56
          },
          "context": {
            "type": "variable",
            "name": "colour-link-active",
            "value": "$colour-text",
            "scope": "private",
            "line": {
              "start": 57,
              "end": 57
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "usedBy": [
            {
              "description": "<p>Default link style for use on a normal (light) background</p>\n",
              "context": {
                "type": "placeholder",
                "name": "link",
                "code": "\n  color: $colour-link;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-visited;\n  }\n\n  &:hover {\n    color: $colour-link-hover;\n  }\n\n  &:focus {\n    @include default-focus-style;\n    color: $colour-link-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-active;\n  }\n",
                "line": {
                  "start": 7,
                  "end": 28
                }
              }
            }
          ],
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#0e0e0e"
        },
        {
          "description": "<p>Link focus text colour</p>\n",
          "commentRange": {
            "start": 59,
            "end": 60
          },
          "context": {
            "type": "variable",
            "name": "colour-link-focus-text",
            "value": "$colour-link",
            "scope": "private",
            "line": {
              "start": 61,
              "end": 61
            }
          },
          "since": [
            {
              "version": "0.2.11"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "usedBy": [
            {
              "description": "<p>Default link style for use on a normal (light) background</p>\n",
              "context": {
                "type": "placeholder",
                "name": "link",
                "code": "\n  color: $colour-link;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-visited;\n  }\n\n  &:hover {\n    color: $colour-link-hover;\n  }\n\n  &:focus {\n    @include default-focus-style;\n    color: $colour-link-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-active;\n  }\n",
                "line": {
                  "start": 7,
                  "end": 28
                }
              }
            }
          ],
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#005ea5"
        },
        {
          "description": "<p>Inverse link text colour</p>\n",
          "commentRange": {
            "start": 66,
            "end": 67
          },
          "context": {
            "type": "variable",
            "name": "colour-link-inverse",
            "value": "$colour-text-inverse",
            "scope": "private",
            "line": {
              "start": 68,
              "end": 68
            }
          },
          "since": [
            {
              "version": "0.2.9"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "usedBy": [
            {
              "description": "<p>Inverse link style for use on an inverse (dark) background</p>\n",
              "context": {
                "type": "placeholder",
                "name": "inverse-link",
                "code": "\n  color: $colour-link-inverse;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-inverse-visited;\n  }\n\n  &:hover {\n    color: $colour-link-inverse-hover;\n  }\n\n  &:focus {\n    color: $colour-link-inverse-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-inverse-active;\n  }\n",
                "line": {
                  "start": 32,
                  "end": 52
                }
              }
            }
          ],
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#fff"
        },
        {
          "description": "<p>Inverse link hover colour</p>\n",
          "commentRange": {
            "start": 70,
            "end": 71
          },
          "context": {
            "type": "variable",
            "name": "colour-link-inverse-hover",
            "value": "$colour-nice-grey-2",
            "scope": "private",
            "line": {
              "start": 72,
              "end": 72
            }
          },
          "since": [
            {
              "version": "0.2.9"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "usedBy": [
            {
              "description": "<p>Inverse link style for use on an inverse (dark) background</p>\n",
              "context": {
                "type": "placeholder",
                "name": "inverse-link",
                "code": "\n  color: $colour-link-inverse;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-inverse-visited;\n  }\n\n  &:hover {\n    color: $colour-link-inverse-hover;\n  }\n\n  &:focus {\n    color: $colour-link-inverse-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-inverse-active;\n  }\n",
                "line": {
                  "start": 32,
                  "end": 52
                }
              }
            }
          ],
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#d6d6d6"
        },
        {
          "description": "<p>Inverse link visited colour. Same as normal inverse link colour to ensure minimum 4.5:1 colour contrast across various dark backgrounds.</p>\n",
          "commentRange": {
            "start": 74,
            "end": 75
          },
          "context": {
            "type": "variable",
            "name": "colour-link-inverse-visited",
            "value": "$colour-link-inverse",
            "scope": "private",
            "line": {
              "start": 76,
              "end": 76
            }
          },
          "since": [
            {
              "version": "0.2.9"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "usedBy": [
            {
              "description": "<p>Inverse link style for use on an inverse (dark) background</p>\n",
              "context": {
                "type": "placeholder",
                "name": "inverse-link",
                "code": "\n  color: $colour-link-inverse;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-inverse-visited;\n  }\n\n  &:hover {\n    color: $colour-link-inverse-hover;\n  }\n\n  &:focus {\n    color: $colour-link-inverse-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-inverse-active;\n  }\n",
                "line": {
                  "start": 32,
                  "end": 52
                }
              }
            }
          ],
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#fff"
        },
        {
          "description": "<p>Inverse link active colour</p>\n",
          "commentRange": {
            "start": 78,
            "end": 79
          },
          "context": {
            "type": "variable",
            "name": "colour-link-inverse-active",
            "value": "$colour-link-active",
            "scope": "private",
            "line": {
              "start": 80,
              "end": 80
            }
          },
          "since": [
            {
              "version": "0.2.9"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "usedBy": [
            {
              "description": "<p>Inverse link style for use on an inverse (dark) background</p>\n",
              "context": {
                "type": "placeholder",
                "name": "inverse-link",
                "code": "\n  color: $colour-link-inverse;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-inverse-visited;\n  }\n\n  &:hover {\n    color: $colour-link-inverse-hover;\n  }\n\n  &:focus {\n    color: $colour-link-inverse-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-inverse-active;\n  }\n",
                "line": {
                  "start": 32,
                  "end": 52
                }
              }
            }
          ],
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#0e0e0e"
        },
        {
          "description": "<p>Inverse link focus text colour</p>\n",
          "commentRange": {
            "start": 82,
            "end": 83
          },
          "context": {
            "type": "variable",
            "name": "colour-link-inverse-focus-text",
            "value": "$colour-link",
            "scope": "private",
            "line": {
              "start": 84,
              "end": 84
            }
          },
          "since": [
            {
              "version": "0.2.9"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "usedBy": [
            {
              "description": "<p>Inverse link style for use on an inverse (dark) background</p>\n",
              "context": {
                "type": "placeholder",
                "name": "inverse-link",
                "code": "\n  color: $colour-link-inverse;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-inverse-visited;\n  }\n\n  &:hover {\n    color: $colour-link-inverse-hover;\n  }\n\n  &:focus {\n    color: $colour-link-inverse-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-inverse-active;\n  }\n",
                "line": {
                  "start": 32,
                  "end": 52
                }
              }
            }
          ],
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#005ea5"
        },
        {
          "description": "<p>CTA button background colour</p>\n",
          "commentRange": {
            "start": 89,
            "end": 90
          },
          "context": {
            "type": "variable",
            "name": "colour-btn-cta",
            "value": "$colour-nice-purple",
            "scope": "private",
            "line": {
              "start": 91,
              "end": 91
            }
          },
          "since": [
            {
              "version": "0.2.2"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#451551"
        },
        {
          "description": "<p>CTA button hover colour</p>\n",
          "commentRange": {
            "start": 93,
            "end": 94
          },
          "context": {
            "type": "variable",
            "name": "colour-btn-cta-hover",
            "value": "#260b2d",
            "scope": "private",
            "line": {
              "start": 95,
              "end": 95
            }
          },
          "since": [
            {
              "version": "0.2.2"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#260b2d"
        },
        {
          "description": "<p>CTA button text colour</p>\n",
          "commentRange": {
            "start": 97,
            "end": 98
          },
          "context": {
            "type": "variable",
            "name": "colour-btn-cta-text",
            "value": "$colour-nice-white",
            "scope": "private",
            "line": {
              "start": 99,
              "end": 99
            }
          },
          "since": [
            {
              "version": "0.2.2"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#fff"
        },
        {
          "description": "<p>Primary button background colour</p>\n",
          "commentRange": {
            "start": 104,
            "end": 105
          },
          "context": {
            "type": "variable",
            "name": "colour-btn-primary",
            "value": "$colour-nice-dark-grey",
            "scope": "private",
            "line": {
              "start": 106,
              "end": 106
            }
          },
          "since": [
            {
              "version": "0.2.2"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#393939"
        },
        {
          "description": "<p>Primary button hover colour</p>\n",
          "commentRange": {
            "start": 108,
            "end": 109
          },
          "context": {
            "type": "variable",
            "name": "colour-btn-primary-hover",
            "value": "$colour-nice-rich-black",
            "scope": "private",
            "line": {
              "start": 110,
              "end": 110
            }
          },
          "since": [
            {
              "version": "0.2.2"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#0e0e0e"
        },
        {
          "description": "<p>Primary button text colour</p>\n",
          "commentRange": {
            "start": 112,
            "end": 113
          },
          "context": {
            "type": "variable",
            "name": "colour-btn-primary-text",
            "value": "$colour-nice-white",
            "scope": "private",
            "line": {
              "start": 114,
              "end": 114
            }
          },
          "since": [
            {
              "version": "0.2.2"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#fff"
        },
        {
          "description": "<p>Secondary button background colour</p>\n",
          "commentRange": {
            "start": 119,
            "end": 120
          },
          "context": {
            "type": "variable",
            "name": "colour-btn-secondary",
            "value": "#666",
            "scope": "private",
            "line": {
              "start": 121,
              "end": 121
            }
          },
          "since": [
            {
              "version": "0.2.2"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#666"
        },
        {
          "description": "<p>Secondary button hover colour</p>\n",
          "commentRange": {
            "start": 123,
            "end": 124
          },
          "context": {
            "type": "variable",
            "name": "colour-btn-secondary-hover",
            "value": "#333",
            "scope": "private",
            "line": {
              "start": 125,
              "end": 125
            }
          },
          "since": [
            {
              "version": "0.2.2"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#333"
        },
        {
          "description": "<p>Primary button text colour</p>\n",
          "commentRange": {
            "start": 127,
            "end": 128
          },
          "context": {
            "type": "variable",
            "name": "colour-btn-secondary-text",
            "value": "$colour-nice-white",
            "scope": "private",
            "line": {
              "start": 129,
              "end": 129
            }
          },
          "since": [
            {
              "version": "0.2.2"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#fff"
        },
        {
          "description": "<p>Light button background colour</p>\n",
          "commentRange": {
            "start": 134,
            "end": 135
          },
          "context": {
            "type": "variable",
            "name": "colour-btn-light",
            "value": "$colour-nice-white",
            "scope": "private",
            "line": {
              "start": 136,
              "end": 136
            }
          },
          "since": [
            {
              "version": "0.2.2"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#fff"
        },
        {
          "description": "<p>Light button hover colour</p>\n",
          "commentRange": {
            "start": 138,
            "end": 139
          },
          "context": {
            "type": "variable",
            "name": "colour-btn-light-hover",
            "value": "$colour-nice-grey-3",
            "scope": "private",
            "line": {
              "start": 140,
              "end": 140
            }
          },
          "since": [
            {
              "version": "0.2.2"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#e9e9e9"
        },
        {
          "description": "<p>Light button text colour</p>\n",
          "commentRange": {
            "start": 142,
            "end": 143
          },
          "context": {
            "type": "variable",
            "name": "colour-btn-light-text",
            "value": "$colour-nice-rich-black",
            "scope": "private",
            "line": {
              "start": 144,
              "end": 144
            }
          },
          "since": [
            {
              "version": "0.2.2"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#0e0e0e"
        },
        {
          "description": "<p>Borders, seperators, rules, keylines etc.</p>\n",
          "commentRange": {
            "start": 149,
            "end": 150
          },
          "context": {
            "type": "variable",
            "name": "colour-border",
            "value": "$colour-nice-grey-1",
            "scope": "private",
            "line": {
              "start": 151,
              "end": 151
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#adadad"
        },
        {
          "description": "",
          "commentRange": {
            "start": 154,
            "end": 154
          },
          "context": {
            "type": "variable",
            "name": "colour-panel-default",
            "value": "$colour-nice-grey-3",
            "scope": "private",
            "line": {
              "start": 155,
              "end": 155
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#e9e9e9"
        },
        {
          "description": "",
          "commentRange": {
            "start": 158,
            "end": 158
          },
          "context": {
            "type": "variable",
            "name": "colour-panel-inverse",
            "value": "$colour-nice-dark-grey",
            "scope": "private",
            "line": {
              "start": 159,
              "end": 159
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#393939"
        },
        {
          "description": "<p>Agile lifecycle phase banner</p>\n",
          "commentRange": {
            "start": 164,
            "end": 165
          },
          "context": {
            "type": "variable",
            "name": "colour-agile-phase",
            "value": "#009ae9",
            "scope": "private",
            "line": {
              "start": 166,
              "end": 166
            }
          },
          "since": [
            {
              "version": "0.2.2"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#009ae9"
        },
        {
          "description": "<p>Discovery agile lifecycle phase</p>\n",
          "commentRange": {
            "start": 168,
            "end": 170
          },
          "context": {
            "type": "variable",
            "name": "colour-discovery",
            "value": "#b8008e",
            "scope": "private",
            "line": {
              "start": 171,
              "end": 171
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "deprecated": "<p>Use $colour-agile-phase instead</p>\n",
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#b8008e"
        },
        {
          "description": "<p>Alpha badges and banners</p>\n",
          "commentRange": {
            "start": 173,
            "end": 175
          },
          "context": {
            "type": "variable",
            "name": "colour-alpha",
            "value": "#d5367f",
            "scope": "private",
            "line": {
              "start": 176,
              "end": 176
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "deprecated": "<p>Use $colour-agile-phase instead</p>\n",
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#d5367f"
        },
        {
          "description": "<p>Beta badges and banners</p>\n",
          "commentRange": {
            "start": 178,
            "end": 180
          },
          "context": {
            "type": "variable",
            "name": "colour-beta",
            "value": "#f47738",
            "scope": "private",
            "line": {
              "start": 181,
              "end": 181
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "deprecated": "<p>Use $colour-agile-phase instead</p>\n",
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#f47738"
        },
        {
          "description": "<p>Live badges and banners</p>\n",
          "commentRange": {
            "start": 183,
            "end": 185
          },
          "context": {
            "type": "variable",
            "name": "colour-live",
            "value": "#70a747",
            "scope": "private",
            "line": {
              "start": 186,
              "end": 186
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "deprecated": "<p>Use $colour-agile-phase instead</p>\n",
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#70a747"
        },
        {
          "description": "<p>Error text and border colour</p>\n",
          "commentRange": {
            "start": 188,
            "end": 189
          },
          "context": {
            "type": "variable",
            "name": "colour-error",
            "value": "#b10e1e",
            "scope": "private",
            "line": {
              "start": 190,
              "end": 190
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#b10e1e"
        },
        {
          "description": "<p>Error background colour</p>\n",
          "commentRange": {
            "start": 192,
            "end": 193
          },
          "context": {
            "type": "variable",
            "name": "colour-error-background",
            "value": "#eac3c3",
            "scope": "private",
            "line": {
              "start": 194,
              "end": 194
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#eac3c3"
        },
        {
          "description": "<p>Caution text and border colour</p>\n",
          "commentRange": {
            "start": 196,
            "end": 197
          },
          "context": {
            "type": "variable",
            "name": "colour-caution",
            "value": "#9b722f",
            "scope": "private",
            "line": {
              "start": 198,
              "end": 198
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#9b722f"
        },
        {
          "description": "<p>Caution background colour</p>\n",
          "commentRange": {
            "start": 200,
            "end": 201
          },
          "context": {
            "type": "variable",
            "name": "colour-caution-background",
            "value": "#ffdfa4",
            "scope": "private",
            "line": {
              "start": 202,
              "end": 202
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#ffdfa4"
        },
        {
          "description": "<p>Info text and border colour</p>\n",
          "commentRange": {
            "start": 204,
            "end": 205
          },
          "context": {
            "type": "variable",
            "name": "colour-info",
            "value": "#4a7f99",
            "scope": "private",
            "line": {
              "start": 206,
              "end": 206
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#4a7f99"
        },
        {
          "description": "<p>Info background colour</p>\n",
          "commentRange": {
            "start": 208,
            "end": 209
          },
          "context": {
            "type": "variable",
            "name": "colour-info-background",
            "value": "#e6faff",
            "scope": "private",
            "line": {
              "start": 210,
              "end": 210
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#e6faff"
        },
        {
          "description": "<p>Success text and border colour</p>\n",
          "commentRange": {
            "start": 212,
            "end": 213
          },
          "context": {
            "type": "variable",
            "name": "colour-success",
            "value": "#3f8c5e",
            "scope": "private",
            "line": {
              "start": 214,
              "end": 214
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#3f8c5e"
        },
        {
          "description": "<p>Success background colour</p>\n",
          "commentRange": {
            "start": 216,
            "end": 217
          },
          "context": {
            "type": "variable",
            "name": "colour-success-background",
            "value": "#eff7eb",
            "scope": "private",
            "line": {
              "start": 218,
              "end": 218
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "colors"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-colours-semantic.scss",
            "name": "_settings-colours-semantic.scss"
          },
          "groupName": {
            "colors": "Colours"
          },
          "resolvedValue": "#eff7eb"
        }
      ]
    },
    "components": {
      "css": [
        {
          "description": "<p>Site footer</p>\n",
          "commentRange": {
            "start": 5,
            "end": 6
          },
          "context": {
            "type": "css",
            "name": ".site-footer",
            "value": "@include font-size(-1);\n  background: $colour-panel-inverse;\n  color: $colour-text-inverse;\n  margin-top: em(32px);\n  padding: em(32px 0);\n\n  @media print {\n    display: none;\n  }\n\n  a {\n    color: $colour-text-inverse;\n\n    &:focus {\n      color: #000;\n    }\n  }\n\n  p {\n    @include font-size(-1);\n  }\n\n  &__logo {\n    display: block;\n    margin: em(0 0 32 0);\n    text-decoration: none;\n\n    .icon {\n      font-size: rem(48px);\n    }\n  }\n\n  &__services {\n    margin: em(0 0 32 0);\n  }\n\n  &__social {\n    clear: both;\n    margin: em(0 0 32 0);\n  }\n\n  &__nav {\n    clear: both;\n    margin: em(0 0 32 0);\n  }\n\n  &__copyright {\n    margin: 0;\n    text-align: center;\n  }\n\n  @include mq($from: sm) {\n    &__logo {\n      float: left;\n      margin: em(0 32 32 0);\n    }\n\n    &__services {\n      float: left;\n      margin: em(0 0 32 0);\n    }\n\n    &__social {\n      clear: both;\n    }\n\n    &__copyright {\n      text-align: left;\n    }\n  }\n\n  @include mq($from: md) {\n\n    &__social {\n      clear: none;\n      float: right;\n    }\n  }",
            "line": {
              "start": 7,
              "end": 239
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "components\\footer\\_footer.scss",
            "name": "_footer.scss"
          },
          "groupName": {
            "components": "Components"
          }
        },
        {
          "description": "<p>Services list - ie.g. service icon and name.\nStacked on mobile, and side-by-side on larger screen widths</p>\n",
          "commentRange": {
            "start": 88,
            "end": 89
          },
          "context": {
            "type": "css",
            "name": ".services",
            "value": "&__list {\n    list-style: none;\n    margin: 0;\n    overflow: hidden;\n    padding: 0;\n  }\n\n  &__item {\n    border-bottom: 1px solid $colour-border;\n\n    &:first-child {\n      border-top: 1px solid $colour-border;\n    }\n\n    a {\n      @include font-size(-1);\n      color: $colour-panel-default;\n      display: block;\n      padding: em(8 0);\n      text-decoration: none;\n\n      &:hover {\n        color: $colour-text-inverse;\n      }\n\n      &:focus {\n        color: $colour-text;\n      }\n    }\n\n    .icon {\n      @include font-size(1);\n      display: inline-block;\n      margin: em(0 4 0 0);\n      vertical-align: middle;\n    }\n  }\n\n  @include mq($from: sm) {\n\n    &__item {\n      border: 0;\n      float: left;\n      text-align: center;\n      width: em(90px);\n\n      &:first-child {\n        border: 0;\n      }\n\n      a {\n        padding: em(4px) 0 0;\n      }\n    }\n\n    .icon {\n      @include font-size(6);\n      display: block;\n      line-height: 1;\n      margin: 0 auto em(4px);\n\n      // The following is needed for IE8 to go centrally aligned\n      &:before {\n        text-align: center;\n        width: 100%;\n      }\n    }\n  }",
            "line": {
              "start": 90,
              "end": 239
            }
          },
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "components\\footer\\_footer.scss",
            "name": "_footer.scss"
          },
          "groupName": {
            "components": "Components"
          }
        },
        {
          "description": "<p>List of social networks icons</p>\n",
          "commentRange": {
            "start": 162,
            "end": 162
          },
          "context": {
            "type": "css",
            "name": ".social-networks",
            "value": "&__heading {\n    @include font-size(-1);\n    display: inline-block;\n    font-weight: normal;\n    margin: em(0 8 0 0);\n    padding: 0;\n    vertical-align: top;\n  }\n\n  &__list {\n    display: inline;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  &__item {\n    display: inline-block;\n\n    .icon {\n      @include font-size(4);\n      line-height: 1;\n    }\n  }\n\n  a {\n    display: block;\n    padding: em(0 4);\n    text-decoration: none;\n\n    &:focus,\n    &:active {\n      color: $colour-text;\n    }\n  }",
            "line": {
              "start": 163,
              "end": 239
            }
          },
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "components\\footer\\_footer.scss",
            "name": "_footer.scss"
          },
          "groupName": {
            "components": "Components"
          }
        },
        {
          "description": "<p>Footer navigation - list of links that stacks on mobile and is side-by-side on wider screen widths</p>\n",
          "commentRange": {
            "start": 202,
            "end": 202
          },
          "context": {
            "type": "css",
            "name": ".footer-nav",
            "value": "&__list {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  a {\n    padding: em(4 0);\n    text-decoration: none;\n  }\n\n  @include mq($from: sm) {\n    &__list {\n      line-height: 1;\n    }\n\n    &__item {\n      border-left: 1px solid $colour-text-inverse;\n      display: inline-block;\n      line-height: 1;\n\n      &:first-child {\n        border-left: 0;\n\n        a {\n          padding-left: 0;\n        }\n      }\n    }\n\n    a {\n      padding: em(0 8);\n    }\n  }",
            "line": {
              "start": 203,
              "end": 239
            }
          },
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "components\\footer\\_footer.scss",
            "name": "_footer.scss"
          },
          "groupName": {
            "components": "Components"
          }
        },
        {
          "description": "<p>Hero banner component.</p>\n",
          "commentRange": {
            "start": 5,
            "end": 6
          },
          "context": {
            "type": "css",
            "name": ".hero",
            "value": "@extend %inverse-links;\n  background: $colour-nice-teal-2;\n  color: $colour-text-inverse;\n  margin: em(0 0 $spacing-large);\n  overflow: hidden;\n  padding: em(0 0 $spacing-large);\n\n  &__container {\n    @extend %container;\n  }\n\n  &__body {\n    @include grid($loose: true);\n    margin-top: rem($spacing-large);\n  }\n\n  // The main container for the copy\n  &__copy {\n    @include grid-item(12, $md: 8, $loose: true);\n  }\n\n  // Extra supplementary links etc\n  &__extra {\n    @include grid-item(12, $md: 4, $loose: true);\n  }\n\n  &__title {\n    @include h1;\n  }\n\n  &__intro {\n    @include lead;\n  }",
            "line": {
              "start": 7,
              "end": 42
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "components\\hero\\_hero.scss",
            "name": "_hero.scss"
          },
          "groupName": {
            "components": "Components"
          }
        },
        {
          "description": "<p>In page nav</p>\n",
          "commentRange": {
            "start": 5,
            "end": 5
          },
          "context": {
            "type": "css",
            "name": ".in-page-nav",
            "value": "// The 'on this page' title\n  &__title {\n    @include font-size(h2);\n  }\n\n  // Lists (both root level and sub level)\n  &__list {\n    margin-left: em($spacing-medium);\n\n    [aria-hidden='true'] {\n      display: none;\n    }\n  }\n\n  a {\n    &:visited {\n      color: $colour-link;\n    }\n\n    &:focus {\n      background: none;\n    }\n  }\n\n  @include mq($from: md) {\n    // Docked to the top of the screen\n    &--fixed {\n      position: fixed;\n      top: 0;\n    }\n\n    &__title {\n      @include font-size(h4);\n      margin-top: 0;\n    }\n\n    a {\n      &[aria-selected='true'] {\n        font-weight: bold;\n      }\n    }\n  }",
            "line": {
              "start": 6,
              "end": 51
            }
          },
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "components\\in-page-nav\\_in-page-nav.scss",
            "name": "_in-page-nav.scss"
          },
          "groupName": {
            "components": "Components"
          }
        },
        {
          "description": "<p>A phase banner includes a tag and a label and is designed\nto designate that a service is in alpha or beta.\nUsually contains a <code>.phase-tag</code>.</p>\n<p>BEM elements:</p>\n<ul>\n<li><code>__tag</code>   The tag itself</li>\n<li><code>__label</code> The label explaining</li>\n</ul>\n",
          "commentRange": {
            "start": 5,
            "end": 14
          },
          "context": {
            "type": "css",
            "name": ".phase-banner",
            "value": "border-bottom: 1px solid $colour-border;\n  display: table;\n  margin: em(0 0 $spacing-medium);\n  padding: em($spacing-small 0);\n  width: 100%;\n\n  &__tag {\n    display: table-cell;\n    padding: em(0 $spacing-small 0 0);\n  }\n\n  &__label {\n    display: table-cell;\n    line-height: 1.3;\n    vertical-align: middle;\n    width: 100%;\n  }",
            "line": {
              "start": 15,
              "end": 80
            }
          },
          "see": [
            {
              "description": "<p>A coloured block to designate a service being in alpha or beta. Can be\nused on its own but usually used within a <code>.phase-banner</code>.</p>\n<p>BEM modifiers:</p>\n<ul>\n<li><code>--alpha</code> Alpha</li>\n<li><code>--beta</code>  Beta</li>\n<li><code>--live</code>  Live</li>\n</ul>\n",
              "context": {
                "type": "css",
                "name": ".phase-tag",
                "value": "@include font-size(-1);\n  background-color: $colour-panel-inverse;\n  color: $colour-text-inverse;\n  display: inline-block;\n  font-weight: 900;\n  letter-spacing: 1px;\n  padding: em($spacing-xx-small $spacing-small);\n  text-decoration: none;\n  text-transform: uppercase;\n  vertical-align: top;\n\n  @media print {\n    @include important(background, $colour-true-black);\n    @include important(color, $colour-true-white);\n  }\n\n  &--alpha {\n    background-color: $colour-alpha;\n    color: $colour-text-inverse;\n  }\n\n  &--beta {\n    background-color: $colour-beta;\n    color: $colour-text-inverse;\n  }\n\n  &--live {\n    background-color: $colour-live;\n    color: $colour-text-inverse;\n  }",
                "line": {
                  "start": 48,
                  "end": 80
                }
              }
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "components\\phase-banner\\_phase-banner.scss",
            "name": "_phase-banner.scss"
          },
          "groupName": {
            "components": "Components"
          }
        },
        {
          "description": "<p>A coloured block to designate a service being in alpha or beta. Can be\nused on its own but usually used within a <code>.phase-banner</code>.</p>\n<p>BEM modifiers:</p>\n<ul>\n<li><code>--alpha</code> Alpha</li>\n<li><code>--beta</code>  Beta</li>\n<li><code>--live</code>  Live</li>\n</ul>\n",
          "commentRange": {
            "start": 35,
            "end": 47
          },
          "context": {
            "type": "css",
            "name": ".phase-tag",
            "value": "@include font-size(-1);\n  background-color: $colour-panel-inverse;\n  color: $colour-text-inverse;\n  display: inline-block;\n  font-weight: 900;\n  letter-spacing: 1px;\n  padding: em($spacing-xx-small $spacing-small);\n  text-decoration: none;\n  text-transform: uppercase;\n  vertical-align: top;\n\n  @media print {\n    @include important(background, $colour-true-black);\n    @include important(color, $colour-true-white);\n  }\n\n  &--alpha {\n    background-color: $colour-alpha;\n    color: $colour-text-inverse;\n  }\n\n  &--beta {\n    background-color: $colour-beta;\n    color: $colour-text-inverse;\n  }\n\n  &--live {\n    background-color: $colour-live;\n    color: $colour-text-inverse;\n  }",
            "line": {
              "start": 48,
              "end": 80
            }
          },
          "todo": [
            "<p>Distinguish private beta/public beta</p>\n",
            "<p>Do we also need a discover phase colour?</p>\n"
          ],
          "see": [
            {
              "description": "<p>A phase banner includes a tag and a label and is designed\nto designate that a service is in alpha or beta.\nUsually contains a <code>.phase-tag</code>.</p>\n<p>BEM elements:</p>\n<ul>\n<li><code>__tag</code>   The tag itself</li>\n<li><code>__label</code> The label explaining</li>\n</ul>\n",
              "context": {
                "type": "css",
                "name": ".phase-banner",
                "value": "border-bottom: 1px solid $colour-border;\n  display: table;\n  margin: em(0 0 $spacing-medium);\n  padding: em($spacing-small 0);\n  width: 100%;\n\n  &__tag {\n    display: table-cell;\n    padding: em(0 $spacing-small 0 0);\n  }\n\n  &__label {\n    display: table-cell;\n    line-height: 1.3;\n    vertical-align: middle;\n    width: 100%;\n  }",
                "line": {
                  "start": 15,
                  "end": 80
                }
              }
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "components\\phase-banner\\_phase-banner.scss",
            "name": "_phase-banner.scss"
          },
          "groupName": {
            "components": "Components"
          }
        },
        {
          "description": "<p>Tabbed navigational structure</p>\n<p>BEM elements:</p>\n<ul>\n<li><code>__list</code>    The containing list of tabs</li>\n<li><code>__tab</code>     An individual tab</li>\n<li><code>__tab-btn</code> A button within a tab</li>\n<li><code>__content</code> The tabs content - container for the</li>\n<li><code>__pane</code>    An individual tab pane</li>\n</ul>\n",
          "commentRange": {
            "start": 5,
            "end": 39
          },
          "context": {
            "type": "css",
            "name": ".tabs",
            "value": "margin: em($spacing-medium 0 $spacing-large);\n\n  // The list of tabs\n  &__list {\n    list-style: none;\n    margin: 0;\n    overflow: hidden;\n    padding: 0;\n    position: relative;\n    top: 1px; // To cover the border around the tabs content\n  }\n\n  // Individual tab\n  &__tab {\n    float: left;\n\n    &--active .tabs__tab-btn { // sass-lint:disable-line no-combinators\n      background: $colour-panel-default;\n      border-left: 1px solid $colour-border;\n      border-right: 1px solid $colour-border;\n      border-top: 1px solid $colour-border;\n      box-shadow: inset 0 em($spacing-x-small) 0 0 $colour-nice-teal;\n      color: $colour-text;\n      text-decoration: none;\n    }\n  }\n\n  // The button/link for the tab itself\n  &__tab-btn {\n    @extend %link;\n    background: 0;\n    border: 0;\n    border-left: 1px solid transparent;\n    border-right: 1px solid transparent;\n    border-top: 1px solid transparent;\n    cursor: pointer;\n    display: block;\n    margin: 0;\n    padding: em($spacing-medium $spacing-medium);\n  }\n\n  // The tab content containing the tab panels\n  &__content {\n    background: $colour-panel-default;\n    border: 1px solid $colour-border;\n    padding: em($spacing-medium);\n  }\n\n  // An individual tab content pane\n  &__pane {\n\n    // Assume tabs will stack if no JS is available\n    .js & {\n      display: none;\n\n      &--active {\n        display: block;\n      }\n    }\n\n    :first-child {\n      margin-top: 0;\n    }\n\n    :last-child {\n      margin-bottom: 0;\n    }\n  }",
            "line": {
              "start": 40,
              "end": 110
            }
          },
          "todo": [
            "<p>Tabs on mobile devices</p>\n"
          ],
          "example": [
            {
              "type": "html",
              "code": "<div class=\"tabs\" data-tabs>\n  <ul class=\"tabs__list\" role=\"tablist\">\n    <li class=\"tabs__tab\" role=\"presentation\">\n      <button class=\"tabs__tab-btn\" type=\"button\" role=\"tab\">\n        Tab 1\n      </button>\n    </li>\n    <li class=\"tabs__tab\" role=\"presentation\">\n      <button class=\"tabs__tab-btn\" type=\"button\" role=\"tab\">\n        Tab 2\n      </button>\n    </li>\n  </ul>\n  <div class=\"tabs__content\">\n    <div class=\"tabs__pane\" role=\"tabpanel\">\n      Tab content 1\n    </div>\n    <div class=\"tabs__pane\" role=\"tabpanel\">\n      Tab content 2\n    </div>\n  </div>\n</div>"
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "components\\tabs\\_tabs.scss",
            "name": "_tabs.scss"
          },
          "groupName": {
            "components": "Components"
          }
        },
        {
          "description": "<p>breadcrumbs\nSee <a href=\"https://www.w3.org/WAI/WCAG20/Techniques/working-examples/G65/ex3.html\">https://www.w3.org/WAI/WCAG20/Techniques/working-examples/G65/ex3.html</a></p>\n",
          "commentRange": {
            "start": 5,
            "end": 7
          },
          "context": {
            "type": "css",
            "name": ".breadcrumbs",
            "value": "@include font-size(0);\n  list-style: none;\n  margin: em($spacing-small 0 $spacing-large);\n  padding: 0;\n\n  &__crumb {\n    display: inline-block;\n\n    &:before {\n      content: get-glyph(heavy-right-pointing-angle-quotation-mark-ornament);\n      font-size: 70%;\n      margin: em(0 $spacing-x-small);\n    }\n\n    &:first-child:before {\n      display: none;\n    }\n  }\n\n  a {\n    color: $colour-text;\n    text-decoration: underline;\n\n    &:hover {\n      text-decoration: none;\n    }\n\n    &:focus {\n      color: $colour-link-focus-text;\n    }\n\n    &:active {\n      color: $colour-link-active;\n    }\n  }",
            "line": {
              "start": 8,
              "end": 45
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\components\\_components-breadcrumbs.scss",
            "name": "_components-breadcrumbs.scss"
          },
          "groupName": {
            "components": "Components"
          }
        },
        {
          "description": "<p>Button</p>\n",
          "commentRange": {
            "start": 5,
            "end": 6
          },
          "context": {
            "type": "css",
            "name": ".btn.btn",
            "value": "// Repeat selector for specificity to avoid link overrides\n  @include remove-mz-focus-inner;\n  @include font-size(0);\n  appearance: none;\n  background: $colour-btn-primary;\n  border: em(1px) solid $colour-btn-primary-text;\n  border-radius: 0;\n  color: $colour-btn-primary-text;\n  cursor: pointer;\n  display: inline-block;\n  margin: em(0 $spacing-small $spacing-small -4px); // Negative left margin to combat inline-block gaps\n  padding: em($spacing-small $spacing-medium);\n  position: relative;\n  text-decoration: none;\n  vertical-align: top;\n\n  &:first-child {\n    margin-left: 0;\n  }\n\n  &:visited {\n    color: $colour-btn-primary-text;\n  }\n\n  &:hover {\n    background: $colour-btn-primary-hover;\n    color: $colour-btn-primary-text;\n    text-decoration: none;\n  }\n\n  &:focus {\n    @include default-focus-style;\n    background: $colour-btn-primary;\n    border-color: $colour-focus;\n  }\n\n  &:active {\n    background: $colour-btn-primary-hover;\n    text-decoration: none;\n    top: em(2px);\n  }\n\n  // Disabled button styles\n  &--disabled,\n  &.disabled,\n  &[aria-disabled='true'],\n  &[disabled='disabled'],\n  &[disabled] {\n    opacity: .5;\n    pointer-events: none;\n\n    &:hover {\n      cursor: default;\n    }\n  }",
            "line": {
              "start": 7,
              "end": 138
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\components\\_components-buttons.scss",
            "name": "_components-buttons.scss"
          },
          "groupName": {
            "components": "Components"
          }
        },
        {
          "description": "<p>CTA/prominent button</p>\n",
          "commentRange": {
            "start": 64,
            "end": 65
          },
          "context": {
            "type": "css",
            "name": ".btn.btn--cta",
            "value": "background: $colour-btn-cta;\n  border: em(1px) solid $colour-btn-cta-text;\n  color: $colour-btn-cta-text;\n\n  &:visited {\n    color: $colour-btn-cta-text;\n  }\n\n  &:hover {\n    background: $colour-btn-cta-hover;\n    color: $colour-btn-cta-text;\n  }\n\n  &:focus {\n    background: $colour-btn-cta-hover;\n  }\n\n  &:active {\n    background: $colour-btn-cta-hover;\n  }",
            "line": {
              "start": 66,
              "end": 138
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\components\\_components-buttons.scss",
            "name": "_components-buttons.scss"
          },
          "groupName": {
            "components": "Components"
          }
        },
        {
          "description": "<p>Secondary button</p>\n",
          "commentRange": {
            "start": 89,
            "end": 90
          },
          "context": {
            "type": "css",
            "name": ".btn.btn--secondary",
            "value": "background: $colour-btn-secondary;\n  border: em(1px) solid $colour-btn-secondary-text;\n  color: $colour-btn-secondary-text;\n\n  &:visited {\n    color: $colour-btn-secondary-text;\n  }\n\n  &:hover {\n    background: $colour-btn-secondary-hover;\n    color: $colour-btn-secondary-text;\n  }\n\n  &:focus {\n    background: $colour-btn-secondary-hover;\n  }\n\n  &:active {\n    background: $colour-btn-secondary-hover;\n  }",
            "line": {
              "start": 91,
              "end": 138
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\components\\_components-buttons.scss",
            "name": "_components-buttons.scss"
          },
          "groupName": {
            "components": "Components"
          }
        },
        {
          "description": "<p>Light button, for use on dark panels/sections</p>\n",
          "commentRange": {
            "start": 114,
            "end": 115
          },
          "context": {
            "type": "css",
            "name": ".btn.btn--light",
            "value": "background: $colour-btn-light;\n  border: em(1px) solid $colour-btn-light-text;\n  color: $colour-btn-light-text;\n\n  &:visited {\n    color: $colour-btn-light-text;\n  }\n\n  &:hover {\n    background: $colour-btn-light-hover;\n    color: $colour-btn-light-text;\n  }\n\n  &:focus {\n    background: $colour-btn-light-hover;\n  }\n\n  &:active {\n    background: $colour-btn-light-hover;\n  }",
            "line": {
              "start": 116,
              "end": 138
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\components\\_components-buttons.scss",
            "name": "_components-buttons.scss"
          },
          "groupName": {
            "components": "Components"
          }
        },
        {
          "description": "<p>Container, used as a wrapper around sections within a page.\nUsually used to house grids.</p>\n",
          "commentRange": {
            "start": 13,
            "end": 21
          },
          "context": {
            "type": "css",
            "name": ".container",
            "value": "@extend %container;\n\n  &--full {\n    max-width: 100%;\n    padding: 0 2%;\n    width: auto;\n  }",
            "line": {
              "start": 22,
              "end": 43
            }
          },
          "example": [
            {
              "type": "scss",
              "code": "<div class=\"container\">\n  <div class=\"grid\">\n  </div>\n</div>"
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\components\\_components-global.scss",
            "name": "_components-global.scss"
          },
          "groupName": {
            "components": "Components"
          }
        },
        {
          "description": "<p>Maintains the aspect ratio of an embedded item, useful for responsive embedding, e.g.\nYouTube videos in iframes or video tags. Also useful when you know the ratio of an image\nand want to avoid the &#39;pop&#39; for slow loading images.</p>\n<p>Automatically applies to <code>iframe</code>, <code>embed</code>, <code>object</code> and <code>video</code> tags.\nAlternatively, you can use the <code>__item</code> selector to specify the element directly.</p>\n<p>BEM elements:</p>\n<ul>\n<li><code>__item</code></li>\n</ul>\n<p>BEM modifiers:</p>\n<ul>\n<li><code>--21-9</code></li>\n<li><code>--16-9</code></li>\n<li><code>--4-3</code></li>\n<li><code>--square</code></li>\n</ul>\n",
          "commentRange": {
            "start": 5,
            "end": 35
          },
          "context": {
            "type": "css",
            "name": ".maintain-ratio",
            "value": "display: block;\n  height: 0;\n  overflow: hidden;\n  padding: 0;\n  position: relative;\n\n  &__item,\n  iframe,\n  embed,\n  object,\n  video {\n    border: 0;\n    bottom: 0;\n    height: 100%;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 100%;\n  }\n\n  // Modifier class for 21:9 aspect ratio\n  &--21-9 {\n    padding-bottom: percentage(9 / 21);\n  }\n\n  // Modifier class for 16:9 aspect ratio\n  &--16-9 {\n    padding-bottom: percentage(9 / 16);\n  }\n\n  // Modifier class for 4:3 aspect ratio\n  &--4-3 {\n    padding-bottom: percentage(3 / 4);\n  }\n\n  // Modifier class for square aspect ratio\n  &--square {\n    padding-bottom: 100%;\n  }",
            "line": {
              "start": 36,
              "end": 77
            }
          },
          "example": [
            {
              "type": "html",
              "code": "<div class=\"maintain-ratio maintain-ratio--16-9\">\n  <iframe src=\"https://www.youtube.com/embed/FTQbiNvZqaY\" allowfullscreen></iframe>\n</div>",
              "description": "<p>Sixteen by nine example</p>\n"
            },
            {
              "type": "html",
              "code": "<div class=\"maintain-ratio maintain-ratio--4-3\">\n  <div style=\"background: #ddd; text-align: center;\" class=\"maintain-ratio__item\">\n    <div style=\"display: inline-block; font-size: 300%;\">\n      4:3\n    </div>\n    <div style=\"display: inline-block; height: 100%; vertical-align: middle;\"></div>\n  </div>\n</div>",
              "description": "<p>Using element</p>\n"
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\components\\_components-maintain-ratio.scss",
            "name": "_components-maintain-ratio.scss"
          },
          "groupName": {
            "components": "Components"
          }
        },
        {
          "description": "<p>A panel is a container for visually separating content.\nOften used within a sidebar.</p>\n",
          "commentRange": {
            "start": 5,
            "end": 7
          },
          "context": {
            "type": "css",
            "name": ".panel",
            "value": "background: $colour-panel-default;\n  margin: em($spacing-medium 0 $spacing-large);\n  padding: em($spacing-medium);\n\n  :first-child {\n    margin-top: 0;\n  }\n\n  :last-child {\n    margin-bottom: 0;\n  }",
            "line": {
              "start": 8,
              "end": 33
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\components\\_components-panel.scss",
            "name": "_components-panel.scss"
          },
          "groupName": {
            "components": "Components"
          }
        },
        {
          "description": "<p>Modifier for the panel, to use a inverse (dark) background.\nAutmatically uses inverse links within it. Doesn&#39;t affect buttons\nthough, so any buttons within a dark panel should be <code>.btn.btn--light</code>.</p>\n",
          "commentRange": {
            "start": 22,
            "end": 27
          },
          "context": {
            "type": "css",
            "name": ".panel--inverse",
            "value": "@extend %inverse-links;\n  background: $colour-panel-inverse;\n  color: $colour-text-inverse;",
            "line": {
              "start": 28,
              "end": 33
            }
          },
          "require": [
            {
              "type": "placeholder",
              "name": "inverse-links",
              "external": false
            },
            {
              "type": "function",
              "name": ".panel",
              "external": true
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "components"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\components\\_components-panel.scss",
            "name": "_components-panel.scss"
          },
          "groupName": {
            "components": "Components"
          }
        }
      ],
      "placeholder": [
        {
          "description": "<p>Container placeholder.</p>\n",
          "commentRange": {
            "start": 5,
            "end": 6
          },
          "context": {
            "type": "placeholder",
            "name": "container",
            "code": "\n  margin: auto;\n  max-width: rem(1170px);\n  width: 96%;\n",
            "line": {
              "start": 7,
              "end": 11
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "components"
          ],
          "access": "public",
          "require": [
            {
              "type": "function",
              "name": "rem"
            }
          ],
          "file": {
            "path": "stylesheets\\components\\_components-global.scss",
            "name": "_components-global.scss"
          },
          "groupName": {
            "components": "Components"
          }
        }
      ]
    },
    "grid": {
      "mixin": [
        {
          "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
          "commentRange": {
            "start": 5,
            "end": 41
          },
          "context": {
            "type": "mixin",
            "name": "grid",
            "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
            "line": {
              "start": 42,
              "end": 76
            }
          },
          "parameter": [
            {
              "type": "boolean",
              "name": "reverse",
              "default": "false",
              "description": "<p>Whether the grid items flow the opposite way to their natural source order</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "boolean",
              "name": "gutterless",
              "default": "false",
              "description": "<p>Whether the grid has no spacing</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "boolean",
              "name": "compact",
              "default": "false",
              "description": "<p>Whether the grid has compact spacing</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "boolean",
              "name": "loose",
              "default": "false",
              "description": "<p>Whether the grid has loose spacing</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "boolean",
              "name": "right",
              "default": "false",
              "description": "<p>Whether to render items from the right instead of the left</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "boolean",
              "name": "center",
              "default": "false",
              "description": "<p>Whether the grid&#39;s items are centrally aligned horizontally</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "boolean",
              "name": "debug",
              "default": "false",
              "description": "<p>Whether to put a highlight round the grid for debugging</p>\n",
              "resolvedValue": "false"
            }
          ],
          "require": [
            {
              "type": "mixin",
              "name": "grid-compact"
            },
            {
              "type": "mixin",
              "name": "grid-loose"
            },
            {
              "type": "variable",
              "name": "nice-grid-gutter"
            },
            {
              "type": "mixin",
              "name": "grid-reverse",
              "external": false
            },
            {
              "type": "mixin",
              "name": "grid-gutterless",
              "external": false
            },
            {
              "type": "mixin",
              "name": "grid-right",
              "external": false
            },
            {
              "type": "mixin",
              "name": "grid-center",
              "external": false
            },
            {
              "type": "mixin",
              "name": "grid-debug",
              "external": false
            }
          ],
          "example": [
            {
              "type": "scss",
              "code": ".test {\n  @include grid($compact: true);\n\n  @include element('item') {\n    @include grid-item;\n    background: red;\n    width: 100%;\n  }\n\n  @include mq($from: md) {\n    @include element('item') {\n      background: green;\n      width: percentage(3 / 12);\n    }\n  }\n}",
              "description": "<p>SCSS usage</p>\n"
            },
            {
              "type": "html",
              "code": "<div class=\"test\">\n  <div class=\"test__item\">item</div>\n</div>",
              "description": "<p>HTML usage</p>\n"
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "grid"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\grid\\_grid-helpers.scss",
            "name": "_grid-helpers.scss"
          },
          "groupName": {
            "grid": "Grid"
          }
        },
        {
          "description": "<p>Reversed grids allow you to structure your source in the opposite order to how\nyour rendered layout will appear</p>\n",
          "commentRange": {
            "start": 78,
            "end": 80
          },
          "context": {
            "type": "mixin",
            "name": "grid-reverse",
            "code": "\n  direction: rtl;\n  text-align: left;\n",
            "line": {
              "start": 81,
              "end": 84
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "grid"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\grid\\_grid-helpers.scss",
            "name": "_grid-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid",
                "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
                "line": {
                  "start": 42,
                  "end": 76
                }
              }
            }
          ],
          "groupName": {
            "grid": "Grid"
          }
        },
        {
          "description": "<p>Gutterless grids have all the properties of regular grids, minus any spacing</p>\n",
          "commentRange": {
            "start": 86,
            "end": 88
          },
          "context": {
            "type": "mixin",
            "name": "grid-gutterless",
            "code": "\n  margin-left: 0;\n",
            "line": {
              "start": 89,
              "end": 91
            }
          },
          "see": [
            {
              "description": "<p>Gutterless grids have all the properties of regular grids, minus any spacing.</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid-item-gutterless",
                "code": "\n  padding-left: 0;\n",
                "line": {
                  "start": 242,
                  "end": 244
                }
              }
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "grid"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\grid\\_grid-helpers.scss",
            "name": "_grid-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid",
                "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
                "line": {
                  "start": 42,
                  "end": 76
                }
              }
            }
          ],
          "groupName": {
            "grid": "Grid"
          }
        },
        {
          "description": "<p>Compact grids have a smaller gutter</p>\n",
          "commentRange": {
            "start": 93,
            "end": 95
          },
          "context": {
            "type": "mixin",
            "name": "grid-compact",
            "code": "\n  margin-left: -$nice-grid-gutter-compact;\n",
            "line": {
              "start": 96,
              "end": 98
            }
          },
          "see": [
            {
              "description": "<p>Compact grid item with a smaller gutter</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid-item-compact",
                "code": "\n  padding-left: $nice-grid-gutter-compact;\n",
                "line": {
                  "start": 248,
                  "end": 250
                }
              }
            }
          ],
          "since": [
            {
              "version": "0.2.10"
            }
          ],
          "group": [
            "grid"
          ],
          "access": "public",
          "require": [
            {
              "type": "variable",
              "name": "nice-grid-gutter-compact"
            }
          ],
          "file": {
            "path": "stylesheets\\grid\\_grid-helpers.scss",
            "name": "_grid-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid",
                "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
                "line": {
                  "start": 42,
                  "end": 76
                }
              }
            }
          ],
          "groupName": {
            "grid": "Grid"
          }
        },
        {
          "description": "<p>Loose grids have a smaller gutter</p>\n",
          "commentRange": {
            "start": 100,
            "end": 102
          },
          "context": {
            "type": "mixin",
            "name": "grid-loose",
            "code": "\n  margin-left: -$nice-grid-gutter-loose;\n",
            "line": {
              "start": 103,
              "end": 105
            }
          },
          "see": [
            {
              "description": "<p>Compact grid item with a smaller gutter</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid-item-compact",
                "code": "\n  padding-left: $nice-grid-gutter-compact;\n",
                "line": {
                  "start": 248,
                  "end": 250
                }
              }
            }
          ],
          "since": [
            {
              "version": "0.2.10"
            }
          ],
          "group": [
            "grid"
          ],
          "access": "public",
          "require": [
            {
              "type": "variable",
              "name": "nice-grid-gutter-loose"
            }
          ],
          "file": {
            "path": "stylesheets\\grid\\_grid-helpers.scss",
            "name": "_grid-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid",
                "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
                "line": {
                  "start": 42,
                  "end": 76
                }
              }
            }
          ],
          "groupName": {
            "grid": "Grid"
          }
        },
        {
          "description": "<p>Align the entire grid to the right</p>\n",
          "commentRange": {
            "start": 107,
            "end": 108
          },
          "context": {
            "type": "mixin",
            "name": "grid-right",
            "code": "\n  text-align: right;\n",
            "line": {
              "start": 109,
              "end": 111
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "grid"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\grid\\_grid-helpers.scss",
            "name": "_grid-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid",
                "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
                "line": {
                  "start": 42,
                  "end": 76
                }
              }
            }
          ],
          "groupName": {
            "grid": "Grid"
          }
        },
        {
          "description": "<p>Centered grids align grid items centrally without needing to use push or pull classes</p>\n",
          "commentRange": {
            "start": 113,
            "end": 114
          },
          "context": {
            "type": "mixin",
            "name": "grid-center",
            "code": "\n  text-align: center;\n",
            "line": {
              "start": 115,
              "end": 117
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "grid"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\grid\\_grid-helpers.scss",
            "name": "_grid-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid",
                "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
                "line": {
                  "start": 42,
                  "end": 76
                }
              }
            }
          ],
          "groupName": {
            "grid": "Grid"
          }
        },
        {
          "description": "<p>Debug a grid by putting a highlight round it</p>\n",
          "commentRange": {
            "start": 119,
            "end": 121
          },
          "context": {
            "type": "mixin",
            "name": "grid-debug",
            "code": "\n  outline: 4px dashed red;\n",
            "line": {
              "start": 122,
              "end": 124
            }
          },
          "see": [
            {
              "description": "<p>Debug a grid item by putting a highlight round it</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid-item-debug",
                "code": "\n  outline: 2px dashed blue;\n",
                "line": {
                  "start": 273,
                  "end": 275
                }
              }
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "grid"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\grid\\_grid-helpers.scss",
            "name": "_grid-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid",
                "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
                "line": {
                  "start": 42,
                  "end": 76
                }
              }
            }
          ],
          "groupName": {
            "grid": "Grid"
          }
        },
        {
          "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
          "commentRange": {
            "start": 152,
            "end": 179
          },
          "context": {
            "type": "mixin",
            "name": "grid-item",
            "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
            "line": {
              "start": 180,
              "end": 238
            }
          },
          "parameter": [
            {
              "type": "Number",
              "name": "columns",
              "default": "12",
              "description": "<p>The number of columns (1-12) to fill on mobile</p>\n",
              "resolvedValue": "12"
            },
            {
              "type": "Number",
              "name": "push",
              "default": "false",
              "description": "<p>The number of columns (1-12) to push right</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "Number",
              "name": "push",
              "default": "false",
              "description": "<p>The number of columns (1-12) to pull left</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "boolean",
              "name": "gutterless",
              "default": "false",
              "description": "<p>Set to <code>true</code> to remove the spacing between grid items.</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "boolean",
              "name": "compact",
              "default": "false",
              "description": "<p>Whether the grid has compact spacing</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "boolean",
              "name": "loose",
              "default": "false",
              "description": "<p>Whether the grid has loose spacing</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "boolean",
              "name": "middle",
              "default": "false",
              "description": "<p>Whether the grid item is vertically aligned to the middle</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "boolean",
              "name": "bottom",
              "default": "false",
              "description": "<p>Whether the grid item is vertically aligned to the bottom</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "boolean",
              "name": "debug",
              "default": "false",
              "description": "<p>Whether to put a highlight round the grid item for debugging</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "Number | Map",
              "name": "xs",
              "default": "false",
              "description": "<p>The number of columns (1-12) to fill from xs breakpoint upwards, or a map with cols, push and pull</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "Number | Map",
              "name": "sm",
              "default": "false",
              "description": "<p>The number of columns (1-12) to fill from sm breakpoint upwards, or a map with cols, push and pull</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "Number | Map",
              "name": "md",
              "default": "false",
              "description": "<p>The number of columns (1-12) to fill from md breakpoint upwards, or a map with cols, push and pull</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "Number | Map",
              "name": "lg",
              "default": "false",
              "description": "<p>The number of columns (1-12) to fill from lg breakpoint upwards, or a map with cols, push and pull</p>\n",
              "resolvedValue": "false"
            },
            {
              "type": "Number | Map",
              "name": "xl",
              "default": "false",
              "description": "<p>The number of columns (1-12) to fill from xl breakpoint upwards, or a map with cols, push and pull</p>\n",
              "resolvedValue": "false"
            }
          ],
          "require": [
            {
              "type": "mixin",
              "name": "border-box"
            },
            {
              "type": "variable",
              "name": "nice-grid-gutter"
            },
            {
              "type": "mixin",
              "name": "grid-item-gutterless",
              "external": false
            },
            {
              "type": "mixin",
              "name": "grid-item-compact",
              "external": false
            },
            {
              "type": "mixin",
              "name": "grid-item-loose",
              "external": false
            },
            {
              "type": "mixin",
              "name": "grid-item-middle",
              "external": false
            },
            {
              "type": "mixin",
              "name": "grid-item-bottom",
              "external": false
            },
            {
              "type": "mixin",
              "name": "grid-item-debug",
              "external": false
            }
          ],
          "example": [
            {
              "type": "scss",
              "code": ".test {\n  @include grid-item(12, $md: 8, $lg: (cols: 7, push: 1), $loose: true);\n}"
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "grid"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\grid\\_grid-helpers.scss",
            "name": "_grid-helpers.scss"
          },
          "groupName": {
            "grid": "Grid"
          }
        },
        {
          "description": "<p>Gutterless grids have all the properties of regular grids, minus any spacing.</p>\n",
          "commentRange": {
            "start": 240,
            "end": 241
          },
          "context": {
            "type": "mixin",
            "name": "grid-item-gutterless",
            "code": "\n  padding-left: 0;\n",
            "line": {
              "start": 242,
              "end": 244
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "grid"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\grid\\_grid-helpers.scss",
            "name": "_grid-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid-item",
                "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
                "line": {
                  "start": 180,
                  "end": 238
                }
              }
            }
          ],
          "groupName": {
            "grid": "Grid"
          }
        },
        {
          "description": "<p>Compact grid item with a smaller gutter</p>\n",
          "commentRange": {
            "start": 246,
            "end": 247
          },
          "context": {
            "type": "mixin",
            "name": "grid-item-compact",
            "code": "\n  padding-left: $nice-grid-gutter-compact;\n",
            "line": {
              "start": 248,
              "end": 250
            }
          },
          "since": [
            {
              "version": "0.2.10"
            }
          ],
          "group": [
            "grid"
          ],
          "access": "public",
          "require": [
            {
              "type": "variable",
              "name": "nice-grid-gutter-compact"
            }
          ],
          "file": {
            "path": "stylesheets\\grid\\_grid-helpers.scss",
            "name": "_grid-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid-item",
                "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
                "line": {
                  "start": 180,
                  "end": 238
                }
              }
            }
          ],
          "groupName": {
            "grid": "Grid"
          }
        },
        {
          "description": "<p>Loose grid item with a larger gutter</p>\n",
          "commentRange": {
            "start": 252,
            "end": 253
          },
          "context": {
            "type": "mixin",
            "name": "grid-item-loose",
            "code": "\n  padding-left: $nice-grid-gutter-loose;\n",
            "line": {
              "start": 254,
              "end": 256
            }
          },
          "since": [
            {
              "version": "0.2.10"
            }
          ],
          "group": [
            "grid"
          ],
          "access": "public",
          "require": [
            {
              "type": "variable",
              "name": "nice-grid-gutter-loose"
            }
          ],
          "file": {
            "path": "stylesheets\\grid\\_grid-helpers.scss",
            "name": "_grid-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid-item",
                "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
                "line": {
                  "start": 180,
                  "end": 238
                }
              }
            }
          ],
          "groupName": {
            "grid": "Grid"
          }
        },
        {
          "description": "<p>Align grid cell vertically to the middle</p>\n",
          "commentRange": {
            "start": 258,
            "end": 259
          },
          "context": {
            "type": "mixin",
            "name": "grid-item-middle",
            "code": "\n  vertical-align: middle;\n",
            "line": {
              "start": 260,
              "end": 262
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "grid"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\grid\\_grid-helpers.scss",
            "name": "_grid-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid-item",
                "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
                "line": {
                  "start": 180,
                  "end": 238
                }
              }
            }
          ],
          "groupName": {
            "grid": "Grid"
          }
        },
        {
          "description": "<p>Align grid cell vertically to the bottom</p>\n",
          "commentRange": {
            "start": 264,
            "end": 265
          },
          "context": {
            "type": "mixin",
            "name": "grid-item-bottom",
            "code": "\n  vertical-align: bottom;\n",
            "line": {
              "start": 266,
              "end": 268
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "grid"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\grid\\_grid-helpers.scss",
            "name": "_grid-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid-item",
                "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
                "line": {
                  "start": 180,
                  "end": 238
                }
              }
            }
          ],
          "groupName": {
            "grid": "Grid"
          }
        },
        {
          "description": "<p>Debug a grid item by putting a highlight round it</p>\n",
          "commentRange": {
            "start": 270,
            "end": 272
          },
          "context": {
            "type": "mixin",
            "name": "grid-item-debug",
            "code": "\n  outline: 2px dashed blue;\n",
            "line": {
              "start": 273,
              "end": 275
            }
          },
          "see": [
            {
              "description": "<p>Debug a grid by putting a highlight round it</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid-debug",
                "code": "\n  outline: 4px dashed red;\n",
                "line": {
                  "start": 122,
                  "end": 124
                }
              }
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "grid"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\grid\\_grid-helpers.scss",
            "name": "_grid-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid-item",
                "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
                "line": {
                  "start": 180,
                  "end": 238
                }
              }
            }
          ],
          "groupName": {
            "grid": "Grid"
          }
        }
      ],
      "css": [
        {
          "description": "<p>Grid item default selector.\nUse within a <code>.grid</code>.\nUse the value of the data attribute to specify the grid item widths\nmobile first. E.g &quot;n w:m&quot; where <em>n</em> and <em>m</em> are the number of columns and <em>w</em>\nis the name of the breakpoint.</p>\n",
          "commentRange": {
            "start": 40,
            "end": 52
          },
          "context": {
            "type": "css",
            "name": "[data-g]",
            "value": "@include grid-item;",
            "line": {
              "start": 53,
              "end": 152
            }
          },
          "example": [
            {
              "type": "html",
              "code": "<div class=\"grid\">\n  <div data-g=\"12 xs:6 md:4 lg:one-quarter xl:2\">Grid item</div>\n  <div data-g=\"12 xs:6 md:4 lg:one-quarter xl:2\">Grid item</div>\n  <div data-g=\"12 xs:6 md:4 lg:one-quarter xl:2\">Grid item</div>\n  <div data-g=\"12 xs:6 md:4 lg:one-quarter xl:2\">Grid item</div>\n</div>",
              "description": "<p>HTML usage</p>\n"
            }
          ],
          "group": [
            "grid"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\grid\\_grid.scss",
            "name": "_grid.scss"
          },
          "groupName": {
            "grid": "Grid"
          }
        },
        {
          "description": "<p>Grid class for the grid wrapper. Expects direct children to be <code>[data-g]</code>\ngrid items. Use modifiers to affect grid behaviour as shown below:</p>\n<p>Modifiers:</p>\n<ul>\n<li><code>rev</code> - Reverses the grid direction from natural source order</li>\n<li><code>gutterless</code> - Removes spacing and gutters from the grid</li>\n<li><code>compact</code> - Uses tighter spacing and gutters</li>\n<li><code>loose</code> - Uses looser spacing and gutters</li>\n<li><code>right</code> - Right aligned grid items</li>\n<li><code>center</code> - Horizontally center aligned grid items</li>\n<li><code>middle</code> - Vertically middle aligned grid items</li>\n<li><code>bottom</code> - Bottom aligned grid items</li>\n</ul>\n",
          "commentRange": {
            "start": 57,
            "end": 73
          },
          "context": {
            "type": "css",
            "name": ".grid",
            "value": "@include grid;\n\n  @include modifier('rev') {\n    @include grid-reverse;\n  }\n\n  @include modifier('gutterless') {\n    @include grid-gutterless;\n\n    [data-g] {\n      @include grid-item-gutterless;\n    }\n  }\n\n  @include modifier('compact') {\n    @include grid-compact;\n\n    [data-g] {\n      @include grid-item-compact;\n    }\n  }\n\n  @include modifier('loose') {\n    @include grid-loose;\n\n    [data-g] {\n      @include grid-item-loose;\n    }\n  }\n\n  @include modifier('right') {\n    @include grid-right;\n  }\n\n  @include modifier('center') {\n    @include grid-center;\n  }\n\n  @include modifier('middle') {\n    [data-g] {\n      @include grid-item-middle;\n    }\n  }\n\n  @include modifier('bottom') {\n    [data-g] {\n      @include grid-item-bottom;\n    }\n  }\n\n  @include modifier('debug') {\n    @include grid-debug;\n\n    [data-g] {\n      @include grid-item-debug;\n    }\n  }\n\n  // Add debug grid to body to show an outline on all grids\n  .debug-grid & {\n    @include grid-debug;\n\n    [data-g] {\n      @include grid-item-debug;\n    }\n  }\n\n  @include generate-grid-classes;\n\n  @if $nice-responsive {\n    @each $brkpnt-key, $brkpnt-value in $mq-breakpoints {\n      @include mq($from: $brkpnt-key) {\n        @include generate-grid-classes($brkpnt-key);\n      }\n    }\n  }",
            "line": {
              "start": 74,
              "end": 152
            }
          },
          "example": [
            {
              "type": "html",
              "code": "<div class=\"grid\">\n  <div data-g=\"12 xs:6 md:4 lg:3 xl:2\">Grid item</div>\n</div>"
            }
          ],
          "group": [
            "grid"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\grid\\_grid.scss",
            "name": "_grid.scss"
          },
          "groupName": {
            "grid": "Grid"
          }
        }
      ]
    },
    "hacks": {
      "mixin": [
        {
          "description": "",
          "commentRange": {
            "start": 7,
            "end": 7
          },
          "context": {
            "type": "mixin",
            "name": "important",
            "code": "\n  #{ $property }: #{ $style } !important;\n",
            "line": {
              "start": 8,
              "end": 10
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "hacks"
          ],
          "access": "public",
          "require": [],
          "file": {
            "path": "stylesheets\\helpers\\hacks\\_hacks.scss",
            "name": "_hacks.scss"
          },
          "usedBy": [
            {
              "description": "<p>Makes an element visually hidden, but still accessible to keyboards and assistive devices.</p>\n",
              "context": {
                "type": "mixin",
                "name": "invisible",
                "code": "\n  @include important(position, absolute);\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  overflow: hidden;\n  width: 1px;\n",
                "line": {
                  "start": 24,
                  "end": 30
                }
              }
            },
            {
              "description": "<p>Reverses the CSS output created by the <code>invisible()</code> mixin.</p>\n",
              "context": {
                "type": "mixin",
                "name": "invisible-off",
                "code": "\n  @include important(static, absolute);\n  clip: auto;\n  height: auto;\n  overflow: visible;\n  width: auto;\n",
                "line": {
                  "start": 33,
                  "end": 39
                }
              }
            }
          ],
          "groupName": {
            "hacks": "Hacks"
          }
        },
        {
          "description": "<p>Resets <code>box-sizing</code> to <code>border-box</code></p>\n",
          "commentRange": {
            "start": 12,
            "end": 14
          },
          "context": {
            "type": "mixin",
            "name": "default-box-sixing",
            "code": "\n  html {\n    box-sizing: border-box;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n",
            "line": {
              "start": 15,
              "end": 22
            }
          },
          "link": [
            {
              "url": "https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/",
              "caption": ""
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "hacks"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\hacks\\_hacks.scss",
            "name": "_hacks.scss"
          },
          "groupName": {
            "hacks": "Hacks"
          }
        },
        {
          "description": "<p>Cross browser border box</p>\n",
          "commentRange": {
            "start": 24,
            "end": 25
          },
          "context": {
            "type": "mixin",
            "name": "border-box",
            "code": "\n  -webkit-box-sizing: border-box;\n     -moz-box-sizing: border-box;\n          box-sizing: border-box;\n",
            "line": {
              "start": 26,
              "end": 30
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "hacks"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\hacks\\_hacks.scss",
            "name": "_hacks.scss"
          },
          "usedBy": [
            {
              "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid-item",
                "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
                "line": {
                  "start": 180,
                  "end": 238
                }
              }
            }
          ],
          "groupName": {
            "hacks": "Hacks"
          }
        },
        {
          "description": "<p>Fix unwanted button padding in Firefox</p>\n",
          "commentRange": {
            "start": 32,
            "end": 34
          },
          "context": {
            "type": "mixin",
            "name": "remove-mz-focus-inner",
            "code": "\n  &::-moz-focus-inner {\n    border: 0;\n    padding: 0;\n  }\n",
            "line": {
              "start": 35,
              "end": 40
            }
          },
          "link": [
            {
              "url": "http://stackoverflow.com/a/5518143/486434",
              "caption": "Stack Overflow answer"
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "hacks"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\hacks\\_hacks.scss",
            "name": "_hacks.scss"
          },
          "groupName": {
            "hacks": "Hacks"
          }
        }
      ]
    },
    "helpers": {
      "mixin": [
        {
          "description": "<p>Block Element</p>\n",
          "commentRange": {
            "start": 5,
            "end": 9
          },
          "context": {
            "type": "mixin",
            "name": "element",
            "code": "\n  &__#{$element} {\n    @content;\n  }\n",
            "line": {
              "start": 10,
              "end": 14
            }
          },
          "access": "public",
          "parameter": [
            {
              "type": "String",
              "name": "element",
              "description": "<p>Element&#39;s name</p>\n"
            }
          ],
          "link": [
            {
              "url": "https://css-tricks.com/snippets/sass/bem-mixins/",
              "caption": ""
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "content": "",
          "require": [],
          "file": {
            "path": "stylesheets\\helpers\\_helpers-bem.scss",
            "name": "_helpers-bem.scss"
          },
          "aliased": [
            "e"
          ],
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Block Modifier</p>\n",
          "commentRange": {
            "start": 16,
            "end": 20
          },
          "context": {
            "type": "mixin",
            "name": "modifier",
            "code": "\n  &--#{$modifier} {\n    @content;\n  }\n",
            "line": {
              "start": 21,
              "end": 25
            }
          },
          "access": "public",
          "parameter": [
            {
              "type": "String",
              "name": "modifier",
              "description": "<p>Modifier&#39;s name</p>\n"
            }
          ],
          "link": [
            {
              "url": "https://css-tricks.com/snippets/sass/bem-mixins/",
              "caption": ""
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "content": "",
          "require": [],
          "file": {
            "path": "stylesheets\\helpers\\_helpers-bem.scss",
            "name": "_helpers-bem.scss"
          },
          "aliased": [
            "m"
          ],
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Make an element adapt its height to fit floated children, and clear floats in both directions.</p>\n",
          "commentRange": {
            "start": 5,
            "end": 6
          },
          "context": {
            "type": "mixin",
            "name": "clearfix",
            "code": "\n  &:before,\n  &:after {\n    content: ' ';\n    display: table;\n  }\n\n  &:after {\n    clear: both;\n  }\n",
            "line": {
              "start": 7,
              "end": 17
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-clearfix.scss",
            "name": "_helpers-clearfix.scss"
          },
          "usedBy": [
            {
              "description": "<p>Placeholder for clearfix</p>\n",
              "context": {
                "type": "placeholder",
                "name": "clearfix",
                "code": "\n  @include clearfix;\n",
                "line": {
                  "start": 21,
                  "end": 23
                }
              }
            }
          ],
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Text truncate\nRequires inline-block or block for proper styling</p>\n",
          "commentRange": {
            "start": 5,
            "end": 7
          },
          "context": {
            "type": "mixin",
            "name": "text-truncate",
            "code": "\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n",
            "line": {
              "start": 8,
              "end": 12
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-text.scss",
            "name": "_helpers-text.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Set and element to display as block and align\ncentrally via auto left/right margins</p>\n",
          "commentRange": {
            "start": 111,
            "end": 113
          },
          "context": {
            "type": "mixin",
            "name": "center-block",
            "code": "\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n",
            "line": {
              "start": 114,
              "end": 118
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-text.scss",
            "name": "_helpers-text.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Portrait media query</p>\n",
          "commentRange": {
            "start": 9,
            "end": 9
          },
          "context": {
            "type": "mixin",
            "name": "portrait",
            "code": "\n  @media screen and (orientation: portrait) {\n    @content;\n  }\n",
            "line": {
              "start": 10,
              "end": 14
            }
          },
          "group": [
            "helpers"
          ],
          "access": "public",
          "content": "",
          "require": [],
          "file": {
            "path": "stylesheets\\helpers\\_helpers-visibility.scss",
            "name": "_helpers-visibility.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Landscape media query</p>\n",
          "commentRange": {
            "start": 16,
            "end": 16
          },
          "context": {
            "type": "mixin",
            "name": "landscape",
            "code": "\n  @media screen and (orientation: landscape) {\n    @content;\n  }\n",
            "line": {
              "start": 17,
              "end": 21
            }
          },
          "group": [
            "helpers"
          ],
          "access": "public",
          "content": "",
          "require": [],
          "file": {
            "path": "stylesheets\\helpers\\_helpers-visibility.scss",
            "name": "_helpers-visibility.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Makes an element visually hidden, but still accessible to keyboards and assistive devices.</p>\n",
          "commentRange": {
            "start": 23,
            "end": 23
          },
          "context": {
            "type": "mixin",
            "name": "invisible",
            "code": "\n  @include important(position, absolute);\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  overflow: hidden;\n  width: 1px;\n",
            "line": {
              "start": 24,
              "end": 30
            }
          },
          "group": [
            "helpers"
          ],
          "access": "public",
          "require": [
            {
              "type": "mixin",
              "name": "important"
            }
          ],
          "file": {
            "path": "stylesheets\\helpers\\_helpers-visibility.scss",
            "name": "_helpers-visibility.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Reverses the CSS output created by the <code>invisible()</code> mixin.</p>\n",
          "commentRange": {
            "start": 32,
            "end": 32
          },
          "context": {
            "type": "mixin",
            "name": "invisible-off",
            "code": "\n  @include important(static, absolute);\n  clip: auto;\n  height: auto;\n  overflow: visible;\n  width: auto;\n",
            "line": {
              "start": 33,
              "end": 39
            }
          },
          "group": [
            "helpers"
          ],
          "access": "public",
          "require": [
            {
              "type": "mixin",
              "name": "important"
            }
          ],
          "file": {
            "path": "stylesheets\\helpers\\_helpers-visibility.scss",
            "name": "_helpers-visibility.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        }
      ],
      "placeholder": [
        {
          "description": "<p>Placeholder for clearfix</p>\n",
          "commentRange": {
            "start": 19,
            "end": 20
          },
          "context": {
            "type": "placeholder",
            "name": "clearfix",
            "code": "\n  @include clearfix;\n",
            "line": {
              "start": 21,
              "end": 23
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "require": [
            {
              "type": "mixin",
              "name": "clearfix"
            }
          ],
          "file": {
            "path": "stylesheets\\helpers\\_helpers-clearfix.scss",
            "name": "_helpers-clearfix.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        }
      ],
      "css": [
        {
          "description": "<p>Clearfix class</p>\n",
          "commentRange": {
            "start": 25,
            "end": 26
          },
          "context": {
            "type": "css",
            "name": ".clearfix",
            "value": "@extend %clearfix;",
            "line": {
              "start": 27,
              "end": 30
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-clearfix.scss",
            "name": "_helpers-clearfix.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Output a BEM style glyph selector for each glyph in the map.\n  E.g. .glyph.glyph--bullet { content: &#39;\\2022&#39;; }\n  @since 0.1.0</p>\n",
          "commentRange": {
            "start": 60,
            "end": 62
          },
          "context": {
            "type": "css",
            "name": ".glyph",
            "value": "@each $key, $value in $nice-glyphs {\n      &--#{$key} {\n        &::before {\n          content: unquote('\\'\\\\#{$value}\\'');\n        }\n      }\n    }",
            "line": {
              "start": 63,
              "end": 73
            }
          },
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-glyphs.scss",
            "name": "_helpers-glyphs.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Justified text alignment</p>\n",
          "commentRange": {
            "start": 17,
            "end": 18
          },
          "context": {
            "type": "css",
            "name": ".text-justify",
            "value": "@include important(text-align, justify);",
            "line": {
              "start": 19,
              "end": 126
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-text.scss",
            "name": "_helpers-text.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Stop text from wrapping</p>\n",
          "commentRange": {
            "start": 23,
            "end": 24
          },
          "context": {
            "type": "css",
            "name": ".text-nowrap",
            "value": "@include important(white-space, nowrap);",
            "line": {
              "start": 25,
              "end": 126
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-text.scss",
            "name": "_helpers-text.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Truncate text with an ellipsis.\nRequires inline-block or block for proper styling</p>\n",
          "commentRange": {
            "start": 29,
            "end": 31
          },
          "context": {
            "type": "css",
            "name": ".text-truncate",
            "value": "@include text-truncate;",
            "line": {
              "start": 32,
              "end": 126
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-text.scss",
            "name": "_helpers-text.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Align text left</p>\n",
          "commentRange": {
            "start": 36,
            "end": 37
          },
          "context": {
            "type": "css",
            "name": ".text-left",
            "value": "@include important(text-align, left);",
            "line": {
              "start": 38,
              "end": 126
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-text.scss",
            "name": "_helpers-text.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Align text right</p>\n",
          "commentRange": {
            "start": 42,
            "end": 43
          },
          "context": {
            "type": "css",
            "name": ".text-center",
            "value": "@include important(text-align, center);",
            "line": {
              "start": 44,
              "end": 126
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-text.scss",
            "name": "_helpers-text.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Align text right</p>\n",
          "commentRange": {
            "start": 48,
            "end": 49
          },
          "context": {
            "type": "css",
            "name": ".text-right",
            "value": "@include important(text-align, right);",
            "line": {
              "start": 50,
              "end": 126
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-text.scss",
            "name": "_helpers-text.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Lowercase text</p>\n",
          "commentRange": {
            "start": 59,
            "end": 60
          },
          "context": {
            "type": "css",
            "name": ".text-lowercase",
            "value": "@include important(text-transform, lowercase);",
            "line": {
              "start": 61,
              "end": 126
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-text.scss",
            "name": "_helpers-text.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Uppercase text</p>\n",
          "commentRange": {
            "start": 65,
            "end": 66
          },
          "context": {
            "type": "css",
            "name": ".text-uppercase",
            "value": "@include important(text-transform, uppercase);",
            "line": {
              "start": 67,
              "end": 126
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-text.scss",
            "name": "_helpers-text.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Capitalized text</p>\n",
          "commentRange": {
            "start": 71,
            "end": 72
          },
          "context": {
            "type": "css",
            "name": ".text-capitalize",
            "value": "@include important(text-transform, capitalize);",
            "line": {
              "start": 73,
              "end": 126
            }
          },
          "since": [
            {
              "version": "0.0.1"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-text.scss",
            "name": "_helpers-text.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Normal font weight</p>\n",
          "commentRange": {
            "start": 80,
            "end": 81
          },
          "context": {
            "type": "css",
            "name": ".font-weight-normal",
            "value": "font-weight: normal;",
            "line": {
              "start": 82,
              "end": 126
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-text.scss",
            "name": "_helpers-text.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Bold font weight</p>\n",
          "commentRange": {
            "start": 86,
            "end": 87
          },
          "context": {
            "type": "css",
            "name": ".font-weight-bold",
            "value": "font-weight: bold;",
            "line": {
              "start": 88,
              "end": 126
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-text.scss",
            "name": "_helpers-text.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Italic font style</p>\n",
          "commentRange": {
            "start": 92,
            "end": 93
          },
          "context": {
            "type": "css",
            "name": ".font-italic",
            "value": "font-style: italic;",
            "line": {
              "start": 94,
              "end": 126
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-text.scss",
            "name": "_helpers-text.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Quick left float</p>\n",
          "commentRange": {
            "start": 98,
            "end": 99
          },
          "context": {
            "type": "css",
            "name": ".left",
            "value": "float: left;",
            "line": {
              "start": 100,
              "end": 126
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-text.scss",
            "name": "_helpers-text.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Quick right float</p>\n",
          "commentRange": {
            "start": 104,
            "end": 105
          },
          "context": {
            "type": "css",
            "name": ".right",
            "value": "float: right;",
            "line": {
              "start": 106,
              "end": 126
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-text.scss",
            "name": "_helpers-text.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Set and element to display as block and align\ncentrally via auto left/right margins</p>\n",
          "commentRange": {
            "start": 120,
            "end": 122
          },
          "context": {
            "type": "css",
            "name": ".center-block",
            "value": "@include center-block;",
            "line": {
              "start": 123,
              "end": 126
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-text.scss",
            "name": "_helpers-text.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Display none.\nNote the use of <code>!important</code> for overriding styles.</p>\n",
          "commentRange": {
            "start": 44,
            "end": 45
          },
          "context": {
            "type": "css",
            "name": ".hide",
            "value": "display: none !important;",
            "line": {
              "start": 46,
              "end": 162
            }
          },
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-visibility.scss",
            "name": "_helpers-visibility.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Displays an element as block by default.\nOr use modifiers to display inline/inline-block:</p>\n<p>Modifiers:</p>\n<ul>\n<li><code>i</code></li>\n<li><code>ib</code></li>\n</ul>\n",
          "commentRange": {
            "start": 50,
            "end": 55
          },
          "context": {
            "type": "css",
            "name": ".show",
            "value": "display: block !important;\n\n  &--i {\n    display: inline !important;\n  }\n\n  &--ib {\n    display: inline-block !important;\n  }",
            "line": {
              "start": 56,
              "end": 162
            }
          },
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-visibility.scss",
            "name": "_helpers-visibility.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Visible</p>\n",
          "commentRange": {
            "start": 68,
            "end": 68
          },
          "context": {
            "type": "css",
            "name": ".visible",
            "value": "visibility: visible !important;",
            "line": {
              "start": 69,
              "end": 162
            }
          },
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-visibility.scss",
            "name": "_helpers-visibility.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Visibility hidden</p>\n",
          "commentRange": {
            "start": 73,
            "end": 73
          },
          "context": {
            "type": "css",
            "name": ".invisible",
            "value": "visibility: hidden !important;",
            "line": {
              "start": 74,
              "end": 162
            }
          },
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-visibility.scss",
            "name": "_helpers-visibility.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Landscape and portrait display</p>\n",
          "commentRange": {
            "start": 81,
            "end": 81
          },
          "context": {
            "type": "css",
            "name": ".show-landscape,\n.hide-portrait",
            "value": "display: block !important;\n\n  @include landscape {\n    display: block !important;\n  }\n\n  @include portrait {\n    display: none !important;\n  }",
            "line": {
              "start": 83,
              "end": 162
            }
          },
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-visibility.scss",
            "name": "_helpers-visibility.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Landscape and portrait display</p>\n",
          "commentRange": {
            "start": 95,
            "end": 95
          },
          "context": {
            "type": "css",
            "name": ".hide-landscape,\n.show-portrait",
            "value": "display: none !important;\n\n  @include landscape {\n    display: none !important;\n  }\n\n  @include portrait {\n    display: block !important;\n  }",
            "line": {
              "start": 97,
              "end": 162
            }
          },
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-visibility.scss",
            "name": "_helpers-visibility.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        }
      ],
      "variable": [
        {
          "description": "<p>A map of glyph name to code point (character entity reference).\nAvoids magic strings like <code>content: &#39;\\201C&#39;</code> within our SASS.\nUsual usage is via the <code>get-glyph</code> function, e.g. <code>get-glyph(greater-than)</code>.</p>\n",
          "commentRange": {
            "start": 5,
            "end": 17
          },
          "context": {
            "type": "variable",
            "name": "nice-glyphs",
            "value": "(\n  bullet: '2022',\n  copyright: '00a9',\n  greater-than: '003e',\n  heavy-right-pointing-angle-quotation-mark-ornament: '276F',\n  left-double-quotation-mark: '201C',\n  less-than: '003c',\n  punc-space: '02008'\n  // Add more entity codes here as and when they're needed\n)",
            "scope": "default",
            "line": {
              "start": 18,
              "end": 27
            }
          },
          "see": [
            {
              "description": "<p>Gets a glyph code, or several, (character entity reference) from the\n<code>$nice-glyphs</code> map, matching the given <code>$names</code>. Usually used with the content\nproperty for psuedo elements, to avoid use of magic character reference strings.</p>\n",
              "context": {
                "type": "function",
                "name": "get-glyph",
                "code": "\n  $codes: '';\n\n  @each $name in $names {\n    @if map-has-key($nice-glyphs, $name) {\n      $code: map-get($nice-glyphs, $name);\n      $codes: $codes + '\\\\#{$code}';\n    } @else {\n      @error 'Glyph with name #{$name} could not be found in the $nice-glyphs map';\n    }\n  }\n\n  @return unquote('\\'#{$codes}\\'');\n",
                "line": {
                  "start": 44,
                  "end": 57
                }
              }
            }
          ],
          "link": [
            {
              "url": "https://css-tricks.com/snippets/html/glyphs/",
              "caption": ""
            }
          ],
          "property": [
            {
              "type": "String",
              "name": "bullet",
              "default": "2022",
              "description": "<p>Bullet (•)</p>\n",
              "resolvedValue": "2022"
            },
            {
              "type": "String",
              "name": "copyright",
              "default": "00a9",
              "description": "<p>Copyright symbol (©)</p>\n",
              "resolvedValue": "00a9"
            },
            {
              "type": "String",
              "name": "greater-than",
              "default": "003e",
              "description": "<p>Greater than symbol (&gt;)</p>\n",
              "resolvedValue": "003e"
            },
            {
              "type": "String",
              "name": "heavy-right-pointing-angle-quotation-mark-ornament",
              "default": "276F",
              "description": "<p>Heavy right pointing angle quotation mark ornament (❯)</p>\n",
              "resolvedValue": "276F"
            },
            {
              "type": "String",
              "name": "left-double-quotation-mark",
              "default": "201C",
              "description": "<p>Left double quotation mark (“)</p>\n",
              "resolvedValue": "201C"
            },
            {
              "type": "String",
              "name": "less-than",
              "default": "003c",
              "description": "<p>Less than symbol (&lt;)</p>\n",
              "resolvedValue": "003c"
            },
            {
              "type": "String",
              "name": "punc-space",
              "default": "02008",
              "description": "<p>Punctuation space (small, width of a comma)</p>\n",
              "resolvedValue": "02008"
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\helpers\\_helpers-glyphs.scss",
            "name": "_helpers-glyphs.scss"
          },
          "usedBy": [
            {
              "description": "<p>Gets a glyph code, or several, (character entity reference) from the\n<code>$nice-glyphs</code> map, matching the given <code>$names</code>. Usually used with the content\nproperty for psuedo elements, to avoid use of magic character reference strings.</p>\n",
              "context": {
                "type": "function",
                "name": "get-glyph",
                "code": "\n  $codes: '';\n\n  @each $name in $names {\n    @if map-has-key($nice-glyphs, $name) {\n      $code: map-get($nice-glyphs, $name);\n      $codes: $codes + '\\\\#{$code}';\n    } @else {\n      @error 'Glyph with name #{$name} could not be found in the $nice-glyphs map';\n    }\n  }\n\n  @return unquote('\\'#{$codes}\\'');\n",
                "line": {
                  "start": 44,
                  "end": 57
                }
              }
            },
            {
              "description": "<p>Gets a glyph code, or several, (character entity reference) from the\n<code>$nice-glyphs</code> map, matching the given <code>$names</code>. Usually used with the content\nproperty for psuedo elements, to avoid use of magic character reference strings.</p>\n",
              "context": {
                "type": "function",
                "name": "get-glyph",
                "code": "\n  $codes: '';\n\n  @each $name in $names {\n    @if map-has-key($nice-glyphs, $name) {\n      $code: map-get($nice-glyphs, $name);\n      $codes: $codes + '\\\\#{$code}';\n    } @else {\n      @error 'Glyph with name #{$name} could not be found in the $nice-glyphs map';\n    }\n  }\n\n  @return unquote('\\'#{$codes}\\'');\n",
                "line": {
                  "start": 44,
                  "end": 57
                }
              }
            },
            {
              "description": "<p>Gets a glyph code, or several, (character entity reference) from the\n<code>$nice-glyphs</code> map, matching the given <code>$names</code>. Usually used with the content\nproperty for psuedo elements, to avoid use of magic character reference strings.</p>\n",
              "context": {
                "type": "function",
                "name": "get-glyph",
                "code": "\n  $codes: '';\n\n  @each $name in $names {\n    @if map-has-key($nice-glyphs, $name) {\n      $code: map-get($nice-glyphs, $name);\n      $codes: $codes + '\\\\#{$code}';\n    } @else {\n      @error 'Glyph with name #{$name} could not be found in the $nice-glyphs map';\n    }\n  }\n\n  @return unquote('\\'#{$codes}\\'');\n",
                "line": {
                  "start": 44,
                  "end": 57
                }
              }
            }
          ],
          "groupName": {
            "helpers": "Helpers"
          },
          "resolvedValue": "(\n  bullet: '2022',\n  copyright: '00a9',\n  greater-than: '003e',\n  heavy-right-pointing-angle-quotation-mark-ornament: '276F',\n  left-double-quotation-mark: '201C',\n  less-than: '003c',\n  punc-space: '02008'\n  // Add more entity codes here as and when they're needed\n)"
        }
      ],
      "function": [
        {
          "description": "<p>Gets a glyph code, or several, (character entity reference) from the\n<code>$nice-glyphs</code> map, matching the given <code>$names</code>. Usually used with the content\nproperty for psuedo elements, to avoid use of magic character reference strings.</p>\n",
          "commentRange": {
            "start": 29,
            "end": 43
          },
          "context": {
            "type": "function",
            "name": "get-glyph",
            "code": "\n  $codes: '';\n\n  @each $name in $names {\n    @if map-has-key($nice-glyphs, $name) {\n      $code: map-get($nice-glyphs, $name);\n      $codes: $codes + '\\\\#{$code}';\n    } @else {\n      @error 'Glyph with name #{$name} could not be found in the $nice-glyphs map';\n    }\n  }\n\n  @return unquote('\\'#{$codes}\\'');\n",
            "line": {
              "start": 44,
              "end": 57
            }
          },
          "parameter": [
            {
              "type": "argList",
              "name": "names",
              "description": "<p>The name(s) of the glyph(s) to get</p>\n"
            }
          ],
          "return": {
            "type": "string",
            "description": "<p>The character entity reference code(s) as a string, e.g. &#39;\\201C&#39; or &#39;\\02008\\029C9&#39;</p>\n"
          },
          "see": [
            {
              "description": "<p>A map of glyph name to code point (character entity reference).\nAvoids magic strings like <code>content: &#39;\\201C&#39;</code> within our SASS.\nUsual usage is via the <code>get-glyph</code> function, e.g. <code>get-glyph(greater-than)</code>.</p>\n",
              "context": {
                "type": "variable",
                "name": "nice-glyphs",
                "value": "(\n  bullet: '2022',\n  copyright: '00a9',\n  greater-than: '003e',\n  heavy-right-pointing-angle-quotation-mark-ornament: '276F',\n  left-double-quotation-mark: '201C',\n  less-than: '003c',\n  punc-space: '02008'\n  // Add more entity codes here as and when they're needed\n)",
                "scope": "default",
                "line": {
                  "start": 18,
                  "end": 27
                }
              }
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "example": [
            {
              "type": "Single",
              "code": ".rule {\n  content: get-glyph(greater-than);\n}",
              "description": "<p>glyph</p>\n"
            },
            {
              "type": "Multiple",
              "code": ".rule {\n  content: get-glyph(punc-space, box-box);\n}",
              "description": "<p>glyphs together</p>\n"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "require": [
            {
              "type": "variable",
              "name": "nice-glyphs"
            },
            {
              "type": "variable",
              "name": "nice-glyphs"
            },
            {
              "type": "variable",
              "name": "nice-glyphs"
            }
          ],
          "throw": [
            "<p>Glyph with name #{$name} could not be found in the $nice-glyphs map</p>\n"
          ],
          "file": {
            "path": "stylesheets\\helpers\\_helpers-glyphs.scss",
            "name": "_helpers-glyphs.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Shortcut for getting the first item from a list</p>\n",
          "commentRange": {
            "start": 5,
            "end": 7
          },
          "context": {
            "type": "function",
            "name": "first",
            "code": "\n  @return nth($list, 1);\n",
            "line": {
              "start": 8,
              "end": 10
            }
          },
          "link": [
            {
              "url": "http://hugogiraudel.com/2013/08/08/advanced-sass-list-functions/#selecting-values-from-list",
              "caption": ""
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "require": [],
          "file": {
            "path": "stylesheets\\helpers\\_helpers-lists.scss",
            "name": "_helpers-lists.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Shortcut for getting the last item from a list</p>\n",
          "commentRange": {
            "start": 12,
            "end": 14
          },
          "context": {
            "type": "function",
            "name": "last",
            "code": "\n  @return nth($list, length($list));\n",
            "line": {
              "start": 15,
              "end": 17
            }
          },
          "link": [
            {
              "url": "http://hugogiraudel.com/2013/08/08/advanced-sass-list-functions/#selecting-values-from-list",
              "caption": ""
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "require": [],
          "file": {
            "path": "stylesheets\\helpers\\_helpers-lists.scss",
            "name": "_helpers-lists.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Returns last index of <code>$value</code> in <code>$list</code>.</p>\n",
          "commentRange": {
            "start": 19,
            "end": 36
          },
          "context": {
            "type": "function",
            "name": "last-index",
            "code": "\n  @for $i from length($list) through 1 {\n    @if nth($list, $i) == $value {\n      @return $i;\n    }\n  }\n\n  @return null;\n",
            "line": {
              "start": 37,
              "end": 45
            }
          },
          "ignore": [],
          "parameter": [
            {
              "type": "List",
              "name": "list",
              "description": "<p>list to search</p>\n"
            },
            {
              "type": "*",
              "name": "value",
              "description": "<p>value to be searched for</p>\n"
            }
          ],
          "example": [
            {
              "type": "scss",
              "code": "sl-last-index(a b a, a)\n// 3"
            },
            {
              "type": "scss",
              "code": "sl-last-index(a b a, z)\n// null"
            }
          ],
          "return": {
            "type": "Number | Null"
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "require": [],
          "file": {
            "path": "stylesheets\\helpers\\_helpers-lists.scss",
            "name": "_helpers-lists.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Strip the unit from a number.</p>\n",
          "commentRange": {
            "start": 5,
            "end": 8
          },
          "context": {
            "type": "function",
            "name": "strip-unit",
            "code": "\n  @return $num / ($num * 0 + 1);\n",
            "line": {
              "start": 9,
              "end": 11
            }
          },
          "parameter": [
            {
              "type": "Number",
              "name": "num",
              "description": "<p>The number whose units you wish to strip.</p>\n"
            }
          ],
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "link": [
            {
              "url": "https://davidtheclark.github.io/scut/strip-unit.html",
              "caption": ""
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "require": [],
          "file": {
            "path": "stylesheets\\helpers\\_helpers-utils.scss",
            "name": "_helpers-utils.scss"
          },
          "usedBy": [
            {
              "description": "<p>Convert pixel-values to em-values.</p>\n",
              "context": {
                "type": "function",
                "name": "em",
                "code": "\n  // $base could be in em or px (no unit = px).\n  // Adjust accordingly to create a $divisor that\n  // serves as context for $pixels.\n  $multiplier: if(unit($base) == em, 16, 1);\n  $divisor: strip-unit($base) * $multiplier;\n\n  $em-vals: ();\n  @each $val in $pixels {\n    $val-in-ems: (strip-unit($val) / $divisor) * 1em;\n    $em-vals: append($em-vals, $val-in-ems);\n  }\n\n  @if length($em-vals) == 1 {\n    // return a single value instead of a list,\n    // so it can be used in calculations\n    @return nth($em-vals, 1);\n  } @else {\n    @return $em-vals;\n  }\n",
                "line": {
                  "start": 18,
                  "end": 38
                }
              }
            },
            {
              "description": "<p>Convert pixel-values to em-values.</p>\n",
              "context": {
                "type": "function",
                "name": "em",
                "code": "\n  // $base could be in em or px (no unit = px).\n  // Adjust accordingly to create a $divisor that\n  // serves as context for $pixels.\n  $multiplier: if(unit($base) == em, 16, 1);\n  $divisor: strip-unit($base) * $multiplier;\n\n  $em-vals: ();\n  @each $val in $pixels {\n    $val-in-ems: (strip-unit($val) / $divisor) * 1em;\n    $em-vals: append($em-vals, $val-in-ems);\n  }\n\n  @if length($em-vals) == 1 {\n    // return a single value instead of a list,\n    // so it can be used in calculations\n    @return nth($em-vals, 1);\n  } @else {\n    @return $em-vals;\n  }\n",
                "line": {
                  "start": 18,
                  "end": 38
                }
              }
            },
            {
              "description": "<p>Convert pixel-values to rem-values.</p>\n",
              "context": {
                "type": "function",
                "name": "rem",
                "code": "\n\n  $rem-vals: ();\n  @each $val in $pixels {\n    $val-in-rems: strip-unit($val) / $base * 1rem;\n    $rem-vals: append($rem-vals, $val-in-rems);\n  }\n\n  @if length($rem-vals) == 1 {\n    // return a single value instead of a list,\n    // so it can be used in calculations\n    @return nth($rem-vals, 1);\n  } @else {\n    @return $rem-vals;\n  }\n",
                "line": {
                  "start": 46,
                  "end": 61
                }
              }
            }
          ],
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Convert pixel-values to em-values.</p>\n",
          "commentRange": {
            "start": 13,
            "end": 17
          },
          "context": {
            "type": "function",
            "name": "em",
            "code": "\n  // $base could be in em or px (no unit = px).\n  // Adjust accordingly to create a $divisor that\n  // serves as context for $pixels.\n  $multiplier: if(unit($base) == em, 16, 1);\n  $divisor: strip-unit($base) * $multiplier;\n\n  $em-vals: ();\n  @each $val in $pixels {\n    $val-in-ems: (strip-unit($val) / $divisor) * 1em;\n    $em-vals: append($em-vals, $val-in-ems);\n  }\n\n  @if length($em-vals) == 1 {\n    // return a single value instead of a list,\n    // so it can be used in calculations\n    @return nth($em-vals, 1);\n  } @else {\n    @return $em-vals;\n  }\n",
            "line": {
              "start": 18,
              "end": 38
            }
          },
          "parameter": [
            {
              "type": "Number",
              "name": "pixels",
              "description": "<p>The px-value you wish to convert to ems. No px unit necessary (e.g. 20 is fine, so is 20px). Passing a list will result in a list of em values (see examples).</p>\n"
            },
            {
              "type": "Number",
              "name": "base",
              "default": "$nice-base-font-size",
              "description": "<p>A base-value with which to calculate the em-value</p>\n",
              "resolvedValue": "$nice-baseline * 4"
            }
          ],
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "link": [
            {
              "url": "https://davidtheclark.github.io/scut/em.html",
              "caption": ""
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "require": [
            {
              "type": "function",
              "name": "strip-unit"
            },
            {
              "type": "function",
              "name": "strip-unit"
            }
          ],
          "file": {
            "path": "stylesheets\\helpers\\_helpers-utils.scss",
            "name": "_helpers-utils.scss"
          },
          "groupName": {
            "helpers": "Helpers"
          }
        },
        {
          "description": "<p>Convert pixel-values to rem-values.</p>\n",
          "commentRange": {
            "start": 41,
            "end": 45
          },
          "context": {
            "type": "function",
            "name": "rem",
            "code": "\n\n  $rem-vals: ();\n  @each $val in $pixels {\n    $val-in-rems: strip-unit($val) / $base * 1rem;\n    $rem-vals: append($rem-vals, $val-in-rems);\n  }\n\n  @if length($rem-vals) == 1 {\n    // return a single value instead of a list,\n    // so it can be used in calculations\n    @return nth($rem-vals, 1);\n  } @else {\n    @return $rem-vals;\n  }\n",
            "line": {
              "start": 46,
              "end": 61
            }
          },
          "parameter": [
            {
              "type": "Number",
              "name": "pixels",
              "description": "<p>The px-value you wish to convert to rems. No px unit necessary (e.g. 20 is fine, so is 20px). Passing a list will result in a list of rem values (see examples).</p>\n"
            },
            {
              "type": "Number",
              "name": "base",
              "default": "$nice-base-font-size",
              "description": "<p>A base-value with which to calculate the em-value</p>\n",
              "resolvedValue": "$nice-baseline * 4"
            }
          ],
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "link": [
            {
              "url": "https://davidtheclark.github.io/scut/rem.html",
              "caption": ""
            }
          ],
          "group": [
            "helpers"
          ],
          "access": "public",
          "require": [
            {
              "type": "function",
              "name": "strip-unit"
            }
          ],
          "file": {
            "path": "stylesheets\\helpers\\_helpers-utils.scss",
            "name": "_helpers-utils.scss"
          },
          "usedBy": [
            {
              "description": "<p>Container placeholder.</p>\n",
              "context": {
                "type": "placeholder",
                "name": "container",
                "code": "\n  margin: auto;\n  max-width: rem(1170px);\n  width: 96%;\n",
                "line": {
                  "start": 7,
                  "end": 11
                }
              }
            },
            {
              "description": "<p>Applies font size and line-height for the given scale.</p>\n",
              "context": {
                "type": "mixin",
                "name": "font-size",
                "code": "\n  $font-size: get-font-size($scale);\n  $line-height: get-line-height($scale);\n\n  font-size: rem($font-size);\n  line-height: rem($line-height);\n",
                "line": {
                  "start": 69,
                  "end": 75
                }
              }
            },
            {
              "description": "<p>Applies font size and line-height for the given scale.</p>\n",
              "context": {
                "type": "mixin",
                "name": "font-size",
                "code": "\n  $font-size: get-font-size($scale);\n  $line-height: get-line-height($scale);\n\n  font-size: rem($font-size);\n  line-height: rem($line-height);\n",
                "line": {
                  "start": 69,
                  "end": 75
                }
              }
            },
            {
              "description": "<p>Nice font: includes font size, line height, and margins.</p>\n",
              "context": {
                "type": "mixin",
                "name": "font",
                "code": "\n  @include font-size($scale);\n\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n\n  font-weight: map-get($font-map, fw);\n  margin-bottom: rem(map-get($font-map, mb));\n  margin-top: rem(map-get($font-map, mt));\n",
                "line": {
                  "start": 88,
                  "end": 97
                }
              }
            },
            {
              "description": "<p>Nice font: includes font size, line height, and margins.</p>\n",
              "context": {
                "type": "mixin",
                "name": "font",
                "code": "\n  @include font-size($scale);\n\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n\n  font-weight: map-get($font-map, fw);\n  margin-bottom: rem(map-get($font-map, mb));\n  margin-top: rem(map-get($font-map, mt));\n",
                "line": {
                  "start": 88,
                  "end": 97
                }
              }
            },
            {
              "description": "<p>List placeholder</p>\n",
              "context": {
                "type": "placeholder",
                "name": "list",
                "code": "\n  font-feature-settings: 'kern', 'onum', 'liga';\n  margin-left: rem($spacing-medium);\n  padding: 0;\n",
                "line": {
                  "start": 7,
                  "end": 11
                }
              }
            }
          ],
          "groupName": {
            "helpers": "Helpers"
          }
        }
      ]
    },
    "icons": {
      "variable": [
        {
          "description": "<p>Base path for loading font files\nOverride this in your application if your path differs.\nE.g. if you want to replace it off a CDN you could change this to &#39;<a href=\"http://cdn.com/fonts/\">http://cdn.com/fonts/</a>&#39;</p>\n",
          "commentRange": {
            "start": 13,
            "end": 15
          },
          "context": {
            "type": "variable",
            "name": "nice-font-base-path",
            "value": "'/fonts/'",
            "scope": "default",
            "line": {
              "start": 16,
              "end": 16
            }
          },
          "group": [
            "icons"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\typography\\_typography-icons.scss",
            "name": "_typography-icons.scss"
          },
          "groupName": {
            "icons": "Icons"
          },
          "resolvedValue": "'/fonts/'"
        },
        {
          "description": "<p>Map of icon name to codepoint.\nThis map avoids the use of &#39;magic strings&#39; for codepoints throught SASS code. The map is usually not used directly - use the nice-icon function/mixin instead.\nPlease note - the values for codepoints are not fixed and may change each time the font is re-generated.</p>\n",
          "commentRange": {
            "start": 30,
            "end": 43
          },
          "context": {
            "type": "variable",
            "name": "nice-icons",
            "value": "(\n  evidence: \"f101\",\n  facebook-square: \"f102\",\n  guidance: \"f103\",\n  linkedin-square: \"f104\",\n  logo-name: \"f105\",\n  logo: \"f106\",\n  pathways: \"f107\",\n  standards: \"f108\",\n  syndication: \"f109\",\n  twitter-square: \"f10a\",\n  youtube-square: \"f10b\"\n)",
            "scope": "default",
            "line": {
              "start": 45,
              "end": 57
            }
          },
          "property": [
            {
              "type": "string",
              "name": "evidence",
              "default": "f101",
              "description": "<p><span class=\"icon icon--evidence\" aria-hidden=\"true\"></span></p>\n",
              "resolvedValue": "f101"
            },
            {
              "type": "string",
              "name": "facebook-square",
              "default": "f102",
              "description": "<p><span class=\"icon icon--facebook-square\" aria-hidden=\"true\"></span></p>\n",
              "resolvedValue": "f102"
            },
            {
              "type": "string",
              "name": "guidance",
              "default": "f103",
              "description": "<p><span class=\"icon icon--guidance\" aria-hidden=\"true\"></span></p>\n",
              "resolvedValue": "f103"
            },
            {
              "type": "string",
              "name": "linkedin-square",
              "default": "f104",
              "description": "<p><span class=\"icon icon--linkedin-square\" aria-hidden=\"true\"></span></p>\n",
              "resolvedValue": "f104"
            },
            {
              "type": "string",
              "name": "logo-name",
              "default": "f105",
              "description": "<p><span class=\"icon icon--logo-name\" aria-hidden=\"true\"></span></p>\n",
              "resolvedValue": "f105"
            },
            {
              "type": "string",
              "name": "logo",
              "default": "f106",
              "description": "<p><span class=\"icon icon--logo\" aria-hidden=\"true\"></span></p>\n",
              "resolvedValue": "f106"
            },
            {
              "type": "string",
              "name": "pathways",
              "default": "f107",
              "description": "<p><span class=\"icon icon--pathways\" aria-hidden=\"true\"></span></p>\n",
              "resolvedValue": "f107"
            },
            {
              "type": "string",
              "name": "standards",
              "default": "f108",
              "description": "<p><span class=\"icon icon--standards\" aria-hidden=\"true\"></span></p>\n",
              "resolvedValue": "f108"
            },
            {
              "type": "string",
              "name": "syndication",
              "default": "f109",
              "description": "<p><span class=\"icon icon--syndication\" aria-hidden=\"true\"></span></p>\n",
              "resolvedValue": "f109"
            },
            {
              "type": "string",
              "name": "twitter-square",
              "default": "f10a",
              "description": "<p><span class=\"icon icon--twitter-square\" aria-hidden=\"true\"></span></p>\n",
              "resolvedValue": "f10a"
            },
            {
              "type": "string",
              "name": "youtube-square",
              "default": "f10b",
              "description": "<p><span class=\"icon icon--youtube-square\" aria-hidden=\"true\"></span></p>\n",
              "resolvedValue": "f10b"
            }
          ],
          "group": [
            "icons"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\typography\\_typography-icons.scss",
            "name": "_typography-icons.scss"
          },
          "usedBy": [
            {
              "description": "<p>Applies the required styles for the given icon\nincluding the codepoint.</p>\n",
              "context": {
                "type": "mixin",
                "name": "nice-icon",
                "code": "\n  @if map-has-key($nice-icons, $icon) {\n    @include icon-base;\n    content: nice-icon($icon);\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
                "line": {
                  "start": 91,
                  "end": 98
                }
              }
            },
            {
              "description": "<p>Applies the required styles for the given icon\nincluding the codepoint.</p>\n",
              "context": {
                "type": "mixin",
                "name": "nice-icon",
                "code": "\n  @if map-has-key($nice-icons, $icon) {\n    @include icon-base;\n    content: nice-icon($icon);\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
                "line": {
                  "start": 91,
                  "end": 98
                }
              }
            },
            {
              "description": "<p>Function for getting the codepoint for a given icon, for use\nwithin the <code>content</code> property of psuedo elements.</p>\n",
              "context": {
                "type": "function",
                "name": "nice-icon",
                "code": "\n  @if map-has-key($nice-icons, $icon) {\n    $icon-code: map-get($nice-icons, $icon);\n    @return unquote('\\'\\\\#{ $icon-code }\\'');\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
                "line": {
                  "start": 110,
                  "end": 117
                }
              }
            },
            {
              "description": "<p>Function for getting the codepoint for a given icon, for use\nwithin the <code>content</code> property of psuedo elements.</p>\n",
              "context": {
                "type": "function",
                "name": "nice-icon",
                "code": "\n  @if map-has-key($nice-icons, $icon) {\n    $icon-code: map-get($nice-icons, $icon);\n    @return unquote('\\'\\\\#{ $icon-code }\\'');\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
                "line": {
                  "start": 110,
                  "end": 117
                }
              }
            },
            {
              "description": "<p>Function for getting the codepoint for a given icon, for use\nwithin the <code>content</code> property of psuedo elements.</p>\n",
              "context": {
                "type": "function",
                "name": "nice-icon",
                "code": "\n  @if map-has-key($nice-icons, $icon) {\n    $icon-code: map-get($nice-icons, $icon);\n    @return unquote('\\'\\\\#{ $icon-code }\\'');\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
                "line": {
                  "start": 110,
                  "end": 117
                }
              }
            }
          ],
          "groupName": {
            "icons": "Icons"
          },
          "resolvedValue": "(\n  evidence: \"f101\",\n  facebook-square: \"f102\",\n  guidance: \"f103\",\n  linkedin-square: \"f104\",\n  logo-name: \"f105\",\n  logo: \"f106\",\n  pathways: \"f107\",\n  standards: \"f108\",\n  syndication: \"f109\",\n  twitter-square: \"f10a\",\n  youtube-square: \"f10b\"\n)"
        }
      ],
      "mixin": [
        {
          "description": "<p>Base styles required for an icon including font family etc</p>\n",
          "commentRange": {
            "start": 59,
            "end": 67
          },
          "context": {
            "type": "mixin",
            "name": "icon-base",
            "code": "\n  display: inline-block;\n  font-family: 'NICE Icons';\n  font-style: normal;\n  font-weight: normal;\n  line-height: 1;\n  speak: none;\n  text-decoration: inherit;\n  text-rendering: auto;\n  text-transform: none;\n  vertical-align: baseline;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n",
            "line": {
              "start": 68,
              "end": 81
            }
          },
          "example": [
            {
              "type": "scss",
              "code": ".test {\n  @icnlude icon-base;\n\n  &:before {\n    content: nice-icon(search);\n  }\n}"
            }
          ],
          "group": [
            "icons"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\typography\\_typography-icons.scss",
            "name": "_typography-icons.scss"
          },
          "usedBy": [
            {
              "description": "<p>Applies the required styles for the given icon\nincluding the codepoint.</p>\n",
              "context": {
                "type": "mixin",
                "name": "nice-icon",
                "code": "\n  @if map-has-key($nice-icons, $icon) {\n    @include icon-base;\n    content: nice-icon($icon);\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
                "line": {
                  "start": 91,
                  "end": 98
                }
              }
            }
          ],
          "groupName": {
            "icons": "Icons"
          }
        },
        {
          "description": "<p>Applies the required styles for the given icon\nincluding the codepoint.</p>\n",
          "commentRange": {
            "start": 83,
            "end": 90
          },
          "context": {
            "type": "mixin",
            "name": "nice-icon",
            "code": "\n  @if map-has-key($nice-icons, $icon) {\n    @include icon-base;\n    content: nice-icon($icon);\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
            "line": {
              "start": 91,
              "end": 98
            }
          },
          "parameter": [
            {
              "type": "string",
              "name": "icon",
              "description": "<p>The name of the icon</p>\n"
            }
          ],
          "throw": [
            "<p>Icons with name #{ $icon } could not be found in the $nice-icons map</p>\n"
          ],
          "example": [
            {
              "type": "scss",
              "code": ".search-icon {\n  @include nice-icon(search);\n}"
            }
          ],
          "group": [
            "icons"
          ],
          "access": "public",
          "require": [
            {
              "type": "mixin",
              "name": "icon-base"
            },
            {
              "type": "function",
              "name": "nice-icon"
            },
            {
              "type": "variable",
              "name": "nice-icons"
            },
            {
              "type": "variable",
              "name": "nice-icons"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-icons.scss",
            "name": "_typography-icons.scss"
          },
          "groupName": {
            "icons": "Icons"
          }
        }
      ],
      "function": [
        {
          "description": "<p>Function for getting the codepoint for a given icon, for use\nwithin the <code>content</code> property of psuedo elements.</p>\n",
          "commentRange": {
            "start": 100,
            "end": 109
          },
          "context": {
            "type": "function",
            "name": "nice-icon",
            "code": "\n  @if map-has-key($nice-icons, $icon) {\n    $icon-code: map-get($nice-icons, $icon);\n    @return unquote('\\'\\\\#{ $icon-code }\\'');\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
            "line": {
              "start": 110,
              "end": 117
            }
          },
          "example": [
            {
              "type": "scss",
              "code": ".test {\n  @icnlude icon-base;\n\n  &:before {\n    content: nice-icon(search);\n  }\n}"
            }
          ],
          "group": [
            "icons"
          ],
          "access": "public",
          "require": [
            {
              "type": "variable",
              "name": "nice-icons"
            },
            {
              "type": "variable",
              "name": "nice-icons"
            },
            {
              "type": "variable",
              "name": "nice-icons"
            }
          ],
          "throw": [
            "<p>Icons with name #{ $icon } could not be found in the $nice-icons map</p>\n"
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-icons.scss",
            "name": "_typography-icons.scss"
          },
          "usedBy": [
            {
              "description": "<p>Applies the required styles for the given icon\nincluding the codepoint.</p>\n",
              "context": {
                "type": "mixin",
                "name": "nice-icon",
                "code": "\n  @if map-has-key($nice-icons, $icon) {\n    @include icon-base;\n    content: nice-icon($icon);\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n",
                "line": {
                  "start": 91,
                  "end": 98
                }
              }
            }
          ],
          "groupName": {
            "icons": "Icons"
          }
        }
      ],
      "css": [
        {
          "description": "<p>Class for rendering an icon.\nUse with a named modifier for an icon.</p>\n",
          "commentRange": {
            "start": 119,
            "end": 122
          },
          "context": {
            "type": "css",
            "name": ".icon",
            "value": "@include icon-base;\n\n  &:before {\n    display: block;\n  }\n\n  @each $icon, $code in $nice-icons {\n    &--#{ $icon }:before {\n      content: nice-icon($icon);\n    }\n  }",
            "line": {
              "start": 123,
              "end": 136
            }
          },
          "example": [
            {
              "type": "scss",
              "code": "<span class=\"icon icon--search\" aria-hidden=\"true\"></span>"
            }
          ],
          "group": [
            "icons"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\typography\\_typography-icons.scss",
            "name": "_typography-icons.scss"
          },
          "groupName": {
            "icons": "Icons"
          }
        }
      ]
    },
    "spacing": {
      "variable": [
        {
          "description": "<p>Extra extra small spacing</p>\n",
          "commentRange": {
            "start": 5,
            "end": 6
          },
          "context": {
            "type": "variable",
            "name": "spacing-xx-small",
            "value": "2",
            "scope": "private",
            "line": {
              "start": 7,
              "end": 7
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "spacing"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-spacing.scss",
            "name": "_settings-spacing.scss"
          },
          "groupName": {
            "spacing": "Spacing"
          },
          "resolvedValue": "2"
        },
        {
          "description": "<p>Extra small spacing</p>\n",
          "commentRange": {
            "start": 9,
            "end": 10
          },
          "context": {
            "type": "variable",
            "name": "spacing-x-small",
            "value": "4",
            "scope": "private",
            "line": {
              "start": 11,
              "end": 11
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "spacing"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-spacing.scss",
            "name": "_settings-spacing.scss"
          },
          "groupName": {
            "spacing": "Spacing"
          },
          "resolvedValue": "4"
        },
        {
          "description": "<p>Small spacing</p>\n",
          "commentRange": {
            "start": 13,
            "end": 14
          },
          "context": {
            "type": "variable",
            "name": "spacing-small",
            "value": "8",
            "scope": "private",
            "line": {
              "start": 15,
              "end": 15
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "spacing"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-spacing.scss",
            "name": "_settings-spacing.scss"
          },
          "groupName": {
            "spacing": "Spacing"
          },
          "resolvedValue": "8"
        },
        {
          "description": "<p>Medium spacing</p>\n",
          "commentRange": {
            "start": 17,
            "end": 18
          },
          "context": {
            "type": "variable",
            "name": "spacing-medium",
            "value": "16",
            "scope": "private",
            "line": {
              "start": 19,
              "end": 19
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "spacing"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-spacing.scss",
            "name": "_settings-spacing.scss"
          },
          "usedBy": [
            {
              "description": "<p>List placeholder</p>\n",
              "context": {
                "type": "placeholder",
                "name": "list",
                "code": "\n  font-feature-settings: 'kern', 'onum', 'liga';\n  margin-left: rem($spacing-medium);\n  padding: 0;\n",
                "line": {
                  "start": 7,
                  "end": 11
                }
              }
            }
          ],
          "groupName": {
            "spacing": "Spacing"
          },
          "resolvedValue": "16"
        },
        {
          "description": "<p>Large spacing</p>\n",
          "commentRange": {
            "start": 21,
            "end": 22
          },
          "context": {
            "type": "variable",
            "name": "spacing-large",
            "value": "32",
            "scope": "private",
            "line": {
              "start": 23,
              "end": 23
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "spacing"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-spacing.scss",
            "name": "_settings-spacing.scss"
          },
          "groupName": {
            "spacing": "Spacing"
          },
          "resolvedValue": "32"
        },
        {
          "description": "<p>Extra large spacing</p>\n",
          "commentRange": {
            "start": 25,
            "end": 26
          },
          "context": {
            "type": "variable",
            "name": "spacing-x-large",
            "value": "48",
            "scope": "private",
            "line": {
              "start": 27,
              "end": 27
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "spacing"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-spacing.scss",
            "name": "_settings-spacing.scss"
          },
          "groupName": {
            "spacing": "Spacing"
          },
          "resolvedValue": "48"
        },
        {
          "description": "<p>Extra extra large spacing</p>\n",
          "commentRange": {
            "start": 29,
            "end": 30
          },
          "context": {
            "type": "variable",
            "name": "spacing-xx-large",
            "value": "64",
            "scope": "private",
            "line": {
              "start": 31,
              "end": 31
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "spacing"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-spacing.scss",
            "name": "_settings-spacing.scss"
          },
          "groupName": {
            "spacing": "Spacing"
          },
          "resolvedValue": "64"
        },
        {
          "description": "<p>A map of spacing values</p>\n",
          "commentRange": {
            "start": 33,
            "end": 34
          },
          "context": {
            "type": "variable",
            "name": "spacings",
            "value": "(\n  xx-small: $spacing-xx-small,\n  x-small: $spacing-x-small,\n  small: $spacing-small,\n  medium: $spacing-medium,\n  large: $spacing-large,\n  x-large: $spacing-x-large,\n  xx-large: $spacing-xx-large\n)",
            "scope": "private",
            "line": {
              "start": 35,
              "end": 43
            }
          },
          "since": [
            {
              "version": "0.2.15"
            }
          ],
          "group": [
            "spacing"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\settings\\_settings-spacing.scss",
            "name": "_settings-spacing.scss"
          },
          "groupName": {
            "spacing": "Spacing"
          },
          "resolvedValue": "(\n  xx-small: $spacing-xx-small,\n  x-small: $spacing-x-small,\n  small: $spacing-small,\n  medium: $spacing-medium,\n  large: $spacing-large,\n  x-large: $spacing-x-large,\n  xx-large: $spacing-xx-large\n)"
        }
      ]
    },
    "typography": {
      "mixin": [
        {
          "description": "<p>The default focus style used for elements like anchors and buttons</p>\n",
          "commentRange": {
            "start": 7,
            "end": 9
          },
          "context": {
            "type": "mixin",
            "name": "default-focus-style",
            "code": "\n  outline: 3px solid $colour-focus;\n",
            "line": {
              "start": 10,
              "end": 12
            }
          },
          "output": "<p>the default focus styles ie background colour and outline</p>\n",
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "variable",
              "name": "colour-focus"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-global.scss",
            "name": "_typography-global.scss"
          },
          "usedBy": [
            {
              "description": "<p>Default link style for use on a normal (light) background</p>\n",
              "context": {
                "type": "placeholder",
                "name": "link",
                "code": "\n  color: $colour-link;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-visited;\n  }\n\n  &:hover {\n    color: $colour-link-hover;\n  }\n\n  &:focus {\n    @include default-focus-style;\n    color: $colour-link-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-active;\n  }\n",
                "line": {
                  "start": 7,
                  "end": 28
                }
              }
            }
          ],
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Primary heading. Used for h1 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
          "commentRange": {
            "start": 25,
            "end": 27
          },
          "context": {
            "type": "mixin",
            "name": "h1",
            "code": "\n  @include font(h1);\n",
            "line": {
              "start": 28,
              "end": 30
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "mixin",
              "name": "font"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-headings.scss",
            "name": "_typography-headings.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Secondary heading. Used for h2 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
          "commentRange": {
            "start": 32,
            "end": 34
          },
          "context": {
            "type": "mixin",
            "name": "h2",
            "code": "\n  @include font(h2);\n",
            "line": {
              "start": 35,
              "end": 37
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "mixin",
              "name": "font"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-headings.scss",
            "name": "_typography-headings.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Tertiary heading. Used for h3 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
          "commentRange": {
            "start": 39,
            "end": 41
          },
          "context": {
            "type": "mixin",
            "name": "h3",
            "code": "\n  @include font(h3);\n",
            "line": {
              "start": 42,
              "end": 44
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "mixin",
              "name": "font"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-headings.scss",
            "name": "_typography-headings.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Fourth level heading. Used for h4 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
          "commentRange": {
            "start": 46,
            "end": 48
          },
          "context": {
            "type": "mixin",
            "name": "h4",
            "code": "\n  @include font(h4);\n",
            "line": {
              "start": 49,
              "end": 51
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "mixin",
              "name": "font"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-headings.scss",
            "name": "_typography-headings.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Fifth level heading. Used for h5 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
          "commentRange": {
            "start": 53,
            "end": 55
          },
          "context": {
            "type": "mixin",
            "name": "h5",
            "code": "\n  @include font(h5);\n",
            "line": {
              "start": 56,
              "end": 58
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "mixin",
              "name": "font"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-headings.scss",
            "name": "_typography-headings.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Sixth level heading. Used for h6 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
          "commentRange": {
            "start": 60,
            "end": 62
          },
          "context": {
            "type": "mixin",
            "name": "h6",
            "code": "\n  @include font(h6);\n",
            "line": {
              "start": 63,
              "end": 65
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "mixin",
              "name": "font"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-headings.scss",
            "name": "_typography-headings.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Applies font size and line-height for the given scale.</p>\n",
          "commentRange": {
            "start": 58,
            "end": 68
          },
          "context": {
            "type": "mixin",
            "name": "font-size",
            "code": "\n  $font-size: get-font-size($scale);\n  $line-height: get-line-height($scale);\n\n  font-size: rem($font-size);\n  line-height: rem($line-height);\n",
            "line": {
              "start": 69,
              "end": 75
            }
          },
          "parameter": [
            {
              "name": "scale",
              "description": "<p>{Integer|Name} The integer ratio or named font-size.</p>\n"
            }
          ],
          "example": [
            {
              "type": "scss",
              "code": ".test {\n  @include font-size(-2);\n}"
            },
            {
              "type": "scss",
              "code": ".test {\n  @include font-size(h1);\n}"
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "function",
              "name": "get-font-size"
            },
            {
              "type": "function",
              "name": "get-line-height"
            },
            {
              "type": "function",
              "name": "rem"
            },
            {
              "type": "function",
              "name": "rem"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-helpers.scss",
            "name": "_typography-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Nice font: includes font size, line height, and margins.</p>\n",
              "context": {
                "type": "mixin",
                "name": "font",
                "code": "\n  @include font-size($scale);\n\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n\n  font-weight: map-get($font-map, fw);\n  margin-bottom: rem(map-get($font-map, mb));\n  margin-top: rem(map-get($font-map, mt));\n",
                "line": {
                  "start": 88,
                  "end": 97
                }
              }
            }
          ],
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Nice font: includes font size, line height, and margins.</p>\n",
          "commentRange": {
            "start": 77,
            "end": 87
          },
          "context": {
            "type": "mixin",
            "name": "font",
            "code": "\n  @include font-size($scale);\n\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n\n  font-weight: map-get($font-map, fw);\n  margin-bottom: rem(map-get($font-map, mb));\n  margin-top: rem(map-get($font-map, mt));\n",
            "line": {
              "start": 88,
              "end": 97
            }
          },
          "parameter": [
            {
              "name": "scale",
              "description": "<p>{Integer|Name} The integer ratio or named font-size.</p>\n"
            }
          ],
          "example": [
            {
              "type": "scss",
              "code": ".test {\n  @include font(3);\n}"
            },
            {
              "type": "scss",
              "code": ".test {\n  @include font(h1);\n}"
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "mixin",
              "name": "font-size"
            },
            {
              "type": "function",
              "name": "get-scale-integer"
            },
            {
              "type": "function",
              "name": "rem"
            },
            {
              "type": "function",
              "name": "rem"
            },
            {
              "type": "variable",
              "name": "font-sizes"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-helpers.scss",
            "name": "_typography-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Primary heading. Used for h1 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
              "context": {
                "type": "mixin",
                "name": "h1",
                "code": "\n  @include font(h1);\n",
                "line": {
                  "start": 28,
                  "end": 30
                }
              }
            },
            {
              "description": "<p>Secondary heading. Used for h2 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
              "context": {
                "type": "mixin",
                "name": "h2",
                "code": "\n  @include font(h2);\n",
                "line": {
                  "start": 35,
                  "end": 37
                }
              }
            },
            {
              "description": "<p>Tertiary heading. Used for h3 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
              "context": {
                "type": "mixin",
                "name": "h3",
                "code": "\n  @include font(h3);\n",
                "line": {
                  "start": 42,
                  "end": 44
                }
              }
            },
            {
              "description": "<p>Fourth level heading. Used for h4 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
              "context": {
                "type": "mixin",
                "name": "h4",
                "code": "\n  @include font(h4);\n",
                "line": {
                  "start": 49,
                  "end": 51
                }
              }
            },
            {
              "description": "<p>Fifth level heading. Used for h5 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
              "context": {
                "type": "mixin",
                "name": "h5",
                "code": "\n  @include font(h5);\n",
                "line": {
                  "start": 56,
                  "end": 58
                }
              }
            },
            {
              "description": "<p>Sixth level heading. Used for h6 tag but can be used directly\nfor semantic classes for visual styling.</p>\n",
              "context": {
                "type": "mixin",
                "name": "h6",
                "code": "\n  @include font(h6);\n",
                "line": {
                  "start": 63,
                  "end": 65
                }
              }
            },
            {
              "description": "<p>Lead paragraph style</p>\n",
              "context": {
                "type": "mixin",
                "name": "lead",
                "code": "\n  @include font(lead);\n",
                "line": {
                  "start": 101,
                  "end": 103
                }
              }
            }
          ],
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Lead paragraph style</p>\n",
          "commentRange": {
            "start": 99,
            "end": 100
          },
          "context": {
            "type": "mixin",
            "name": "lead",
            "code": "\n  @include font(lead);\n",
            "line": {
              "start": 101,
              "end": 103
            }
          },
          "since": [
            {
              "version": "0.2.12"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "mixin",
              "name": "font"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-helpers.scss",
            "name": "_typography-helpers.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        }
      ],
      "css": [
        {
          "description": "<p>Mark</p>\n",
          "commentRange": {
            "start": 82,
            "end": 82
          },
          "context": {
            "type": "css",
            "name": "mark,\n.mark",
            "value": "background-color: #fff999;\n  padding: em(4);",
            "line": {
              "start": 84,
              "end": 94
            }
          },
          "group": [
            "typography"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\typography\\_typography-global.scss",
            "name": "_typography-global.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Small</p>\n",
          "commentRange": {
            "start": 89,
            "end": 89
          },
          "context": {
            "type": "css",
            "name": "small,\n.small",
            "value": "font-size: 85%;",
            "line": {
              "start": 91,
              "end": 94
            }
          },
          "group": [
            "typography"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\typography\\_typography-global.scss",
            "name": "_typography-global.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Heading, BEM style.\nModifiers:</p>\n<ul>\n<li>separator: Border below</li>\n</ul>\n",
          "commentRange": {
            "start": 16,
            "end": 18
          },
          "context": {
            "type": "css",
            "name": ".heading",
            "value": "&--separator {\n    border-bottom: 1px solid $colour-border;\n  }",
            "line": {
              "start": 19,
              "end": 102
            }
          },
          "group": [
            "typography"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\typography\\_typography-headings.scss",
            "name": "_typography-headings.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Inverse link for use on a dark background. Apply to an individual link.\nPrefer using <code>.inverse-links</code> on the container instead.</p>\n",
          "commentRange": {
            "start": 66,
            "end": 68
          },
          "context": {
            "type": "css",
            "name": ".link--inverse",
            "value": "@extend %inverse-link;",
            "line": {
              "start": 69,
              "end": 80
            }
          },
          "since": [
            {
              "version": "0.2.9"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\typography\\_typography-links.scss",
            "name": "_typography-links.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Inverse links, for use on dark backgrounds e.g dark panels.\nUse this class on a containing element to apply to all links within it.</p>\n",
          "commentRange": {
            "start": 73,
            "end": 76
          },
          "context": {
            "type": "css",
            "name": ".inverse-links",
            "value": "@extend %inverse-links;",
            "line": {
              "start": 77,
              "end": 80
            }
          },
          "require": [
            {
              "type": "placeholder",
              "name": "inverse-links",
              "external": false
            }
          ],
          "since": [
            {
              "version": "0.2.9"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\typography\\_typography-links.scss",
            "name": "_typography-links.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Base list class. Can be used with various modifiers.</p>\n",
          "commentRange": {
            "start": 18,
            "end": 21
          },
          "context": {
            "type": "css",
            "name": ".list",
            "value": "@extend %list;",
            "line": {
              "start": 22,
              "end": 45
            }
          },
          "see": [
            {
              "description": "<p>Unstyled list modifier - remove bullets, padding etc.\nUsed as a modifier for <code>.list</code>.\nOften used for lists of links.</p>\n",
              "context": {
                "type": "css",
                "name": ".list--unstyled",
                "value": "list-style: none;\n  margin-left: 0;\n  padding: 0;",
                "line": {
                  "start": 31,
                  "end": 45
                }
              }
            },
            {
              "description": "<p>Loose list style - with a gap between list items</p>\n",
              "context": {
                "type": "css",
                "name": ".list--loose",
                "value": "li,\n  .list__item {\n    margin-bottom: rem($spacing-x-small);\n  }",
                "line": {
                  "start": 39,
                  "end": 45
                }
              }
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\typography\\_typography-lists.scss",
            "name": "_typography-lists.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Unstyled list modifier - remove bullets, padding etc.\nUsed as a modifier for <code>.list</code>.\nOften used for lists of links.</p>\n",
          "commentRange": {
            "start": 26,
            "end": 30
          },
          "context": {
            "type": "css",
            "name": ".list--unstyled",
            "value": "list-style: none;\n  margin-left: 0;\n  padding: 0;",
            "line": {
              "start": 31,
              "end": 45
            }
          },
          "require": [
            {
              "type": "function",
              "name": ".list",
              "external": true
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\typography\\_typography-lists.scss",
            "name": "_typography-lists.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Loose list style - with a gap between list items</p>\n",
          "commentRange": {
            "start": 37,
            "end": 38
          },
          "context": {
            "type": "css",
            "name": ".list--loose",
            "value": "li,\n  .list__item {\n    margin-bottom: rem($spacing-x-small);\n  }",
            "line": {
              "start": 39,
              "end": 45
            }
          },
          "since": [
            {
              "version": "0.2.12"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\typography\\_typography-lists.scss",
            "name": "_typography-lists.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Blockquote style</p>\n",
          "commentRange": {
            "start": 5,
            "end": 6
          },
          "context": {
            "type": "css",
            "name": ".quote",
            "value": "@include font-size(lead);\n  border-left: em($spacing-x-small) solid $colour-nice-teal;\n  font-weight: normal;\n  margin: rem($spacing-large 0);\n  padding: rem(0 0 0 $spacing-xx-large);\n  position: relative;\n\n  &:before {\n    color: $colour-nice-teal;\n    content: get-glyph(left-double-quotation-mark);\n    display: block;\n    font-family: Arial;\n    font-size: 5rem;\n    font-weight: bold;\n    left: 0;\n    line-height: .8;\n    position: absolute;\n    text-align: center;\n    top: 0;\n    width: rem($spacing-xx-large);\n\n    @media print {\n      color: $colour-true-black;\n    }\n  }\n\n  p {\n    font-size: inherit;\n  }\n\n  footer,\n  cite {\n    @include font-size($scale: 0);\n    font-style: normal;\n  }",
            "line": {
              "start": 7,
              "end": 44
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\typography\\_typography-quotations.scss",
            "name": "_typography-quotations.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        }
      ],
      "function": [
        {
          "description": "<p>Gets a font family from the <code>$nice-font-families</code> map, given a name</p>\n",
          "commentRange": {
            "start": 5,
            "end": 7
          },
          "context": {
            "type": "function",
            "name": "font-family",
            "code": "\n  $result: map-get($nice-font-families, $stack);\n  @return unquote($result);\n",
            "line": {
              "start": 8,
              "end": 11
            }
          },
          "parameter": [
            {
              "type": "String",
              "name": "stack",
              "description": "<p>The stack name e.g. sans, serif or mono</p>\n"
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "variable",
              "name": "nice-font-families"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-helpers.scss",
            "name": "_typography-helpers.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Gets a numeric scale</p>\n",
          "commentRange": {
            "start": 13,
            "end": 15
          },
          "context": {
            "type": "function",
            "name": "get-scale-integer",
            "code": "\n  @if map-has-key($named-font-sizes, $scale) {\n    @return map-get($named-font-sizes, $scale);\n  }\n  @elseif is-integer($scale) {\n    @return $scale;\n  }\n\n  @error '`$scale` must either be an integer or exist as a named font size in `$named-font-sizes`';\n",
            "line": {
              "start": 16,
              "end": 25
            }
          },
          "parameter": [
            {
              "name": "scale",
              "description": "<p>{Integer|Name} The integer ratio or named font-size.</p>\n"
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "variable",
              "name": "named-font-sizes"
            },
            {
              "type": "variable",
              "name": "named-font-sizes"
            },
            {
              "type": "variable",
              "name": "named-font-sizes"
            }
          ],
          "throw": [
            "<p><code>$scale</code> must either be an integer or exist as a named font size in <code>$named-font-sizes</code></p>\n"
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-helpers.scss",
            "name": "_typography-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Gets a numeric font size (in px) from a given scale multiplier.\nUsually not used directly - the font-size or font mixin is usually used instead.</p>\n",
              "context": {
                "type": "function",
                "name": "get-font-size",
                "code": "\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n  @return map-get($font-map, fs);\n",
                "line": {
                  "start": 37,
                  "end": 41
                }
              }
            },
            {
              "description": "<p>Gets a numeric line height (in px) from a given scale multiplier.\nUsually not used directly - the font-size or font mixin is usually used instead.</p>\n",
              "context": {
                "type": "function",
                "name": "get-line-height",
                "code": "\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n  @return map-get($font-map, lh);\n",
                "line": {
                  "start": 52,
                  "end": 56
                }
              }
            },
            {
              "description": "<p>Nice font: includes font size, line height, and margins.</p>\n",
              "context": {
                "type": "mixin",
                "name": "font",
                "code": "\n  @include font-size($scale);\n\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n\n  font-weight: map-get($font-map, fw);\n  margin-bottom: rem(map-get($font-map, mb));\n  margin-top: rem(map-get($font-map, mt));\n",
                "line": {
                  "start": 88,
                  "end": 97
                }
              }
            }
          ],
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Gets a numeric font size (in px) from a given scale multiplier.\nUsually not used directly - the font-size or font mixin is usually used instead.</p>\n",
          "commentRange": {
            "start": 28,
            "end": 36
          },
          "context": {
            "type": "function",
            "name": "get-font-size",
            "code": "\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n  @return map-get($font-map, fs);\n",
            "line": {
              "start": 37,
              "end": 41
            }
          },
          "parameter": [
            {
              "name": "scale",
              "description": "<p>{Integer|Name} The integer ratio or named font-size.</p>\n"
            }
          ],
          "return": {
            "type": "Number",
            "description": "<p>Numeric font size (in px)</p>\n"
          },
          "example": [
            {
              "type": "scss",
              "code": "$font-size: get-font-size(2)"
            },
            {
              "type": "scss",
              "code": "$font-size: get-font-size(h1)"
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "function",
              "name": "get-scale-integer"
            },
            {
              "type": "variable",
              "name": "font-sizes"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-helpers.scss",
            "name": "_typography-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Applies font size and line-height for the given scale.</p>\n",
              "context": {
                "type": "mixin",
                "name": "font-size",
                "code": "\n  $font-size: get-font-size($scale);\n  $line-height: get-line-height($scale);\n\n  font-size: rem($font-size);\n  line-height: rem($line-height);\n",
                "line": {
                  "start": 69,
                  "end": 75
                }
              }
            }
          ],
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Gets a numeric line height (in px) from a given scale multiplier.\nUsually not used directly - the font-size or font mixin is usually used instead.</p>\n",
          "commentRange": {
            "start": 43,
            "end": 51
          },
          "context": {
            "type": "function",
            "name": "get-line-height",
            "code": "\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n  @return map-get($font-map, lh);\n",
            "line": {
              "start": 52,
              "end": 56
            }
          },
          "parameter": [
            {
              "name": "scale",
              "description": "<p>{Integer|Name} The integer ratio or named font-size.</p>\n"
            }
          ],
          "return": {
            "type": "Number",
            "description": "<p>Numeric line-height (in px)</p>\n"
          },
          "example": [
            {
              "type": "scss",
              "code": "$line-height: get-line-height(2)"
            },
            {
              "type": "scss",
              "code": "$line-height: get-line-height(h1)"
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "function",
              "name": "get-scale-integer"
            },
            {
              "type": "variable",
              "name": "font-sizes"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-helpers.scss",
            "name": "_typography-helpers.scss"
          },
          "usedBy": [
            {
              "description": "<p>Applies font size and line-height for the given scale.</p>\n",
              "context": {
                "type": "mixin",
                "name": "font-size",
                "code": "\n  $font-size: get-font-size($scale);\n  $line-height: get-line-height($scale);\n\n  font-size: rem($font-size);\n  line-height: rem($line-height);\n",
                "line": {
                  "start": 69,
                  "end": 75
                }
              }
            }
          ],
          "groupName": {
            "typography": "Typography"
          }
        }
      ],
      "placeholder": [
        {
          "description": "<p>Default link style for use on a normal (light) background</p>\n",
          "commentRange": {
            "start": 5,
            "end": 6
          },
          "context": {
            "type": "placeholder",
            "name": "link",
            "code": "\n  color: $colour-link;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-visited;\n  }\n\n  &:hover {\n    color: $colour-link-hover;\n  }\n\n  &:focus {\n    @include default-focus-style;\n    color: $colour-link-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-active;\n  }\n",
            "line": {
              "start": 7,
              "end": 28
            }
          },
          "since": [
            {
              "version": "0.2.10"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "mixin",
              "name": "default-focus-style"
            },
            {
              "type": "variable",
              "name": "colour-link"
            },
            {
              "type": "variable",
              "name": "colour-link-visited"
            },
            {
              "type": "variable",
              "name": "colour-link-hover"
            },
            {
              "type": "variable",
              "name": "colour-link-focus-text"
            },
            {
              "type": "variable",
              "name": "colour-link-active"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-links.scss",
            "name": "_typography-links.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Inverse link style for use on an inverse (dark) background</p>\n",
          "commentRange": {
            "start": 30,
            "end": 31
          },
          "context": {
            "type": "placeholder",
            "name": "inverse-link",
            "code": "\n  color: $colour-link-inverse;\n  text-decoration: underline;\n  text-decoration-skip: ink;\n\n  &:visited {\n    color: $colour-link-inverse-visited;\n  }\n\n  &:hover {\n    color: $colour-link-inverse-hover;\n  }\n\n  &:focus {\n    color: $colour-link-inverse-focus-text;\n  }\n\n  &:active {\n    color: $colour-link-inverse-active;\n  }\n",
            "line": {
              "start": 32,
              "end": 52
            }
          },
          "since": [
            {
              "version": "0.2.9"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "variable",
              "name": "colour-link-inverse"
            },
            {
              "type": "variable",
              "name": "colour-link-inverse-visited"
            },
            {
              "type": "variable",
              "name": "colour-link-inverse-hover"
            },
            {
              "type": "variable",
              "name": "colour-link-inverse-focus-text"
            },
            {
              "type": "variable",
              "name": "colour-link-inverse-active"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-links.scss",
            "name": "_typography-links.scss"
          },
          "usedBy": [
            {
              "description": "<p>Inverse links for use on a dark background</p>\n",
              "context": {
                "type": "placeholder",
                "name": "inverse-links",
                "code": "\n  a {\n    @extend %inverse-link;\n  }\n",
                "line": {
                  "start": 56,
                  "end": 60
                }
              }
            }
          ],
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>Inverse links for use on a dark background</p>\n",
          "commentRange": {
            "start": 54,
            "end": 55
          },
          "context": {
            "type": "placeholder",
            "name": "inverse-links",
            "code": "\n  a {\n    @extend %inverse-link;\n  }\n",
            "line": {
              "start": 56,
              "end": 60
            }
          },
          "since": [
            {
              "version": "0.2.9"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "placeholder",
              "name": "inverse-link"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-links.scss",
            "name": "_typography-links.scss"
          },
          "usedBy": [
            {
              "description": "<p>Modifier for the panel, to use a inverse (dark) background.\nAutmatically uses inverse links within it. Doesn&#39;t affect buttons\nthough, so any buttons within a dark panel should be <code>.btn.btn--light</code>.</p>\n",
              "context": {
                "type": "css",
                "name": ".panel--inverse",
                "value": "@extend %inverse-links;\n  background: $colour-panel-inverse;\n  color: $colour-text-inverse;",
                "line": {
                  "start": 28,
                  "end": 33
                }
              }
            },
            {
              "description": "<p>Inverse links, for use on dark backgrounds e.g dark panels.\nUse this class on a containing element to apply to all links within it.</p>\n",
              "context": {
                "type": "css",
                "name": ".inverse-links",
                "value": "@extend %inverse-links;",
                "line": {
                  "start": 77,
                  "end": 80
                }
              }
            }
          ],
          "groupName": {
            "typography": "Typography"
          }
        },
        {
          "description": "<p>List placeholder</p>\n",
          "commentRange": {
            "start": 5,
            "end": 6
          },
          "context": {
            "type": "placeholder",
            "name": "list",
            "code": "\n  font-feature-settings: 'kern', 'onum', 'liga';\n  margin-left: rem($spacing-medium);\n  padding: 0;\n",
            "line": {
              "start": 7,
              "end": 11
            }
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "require": [
            {
              "type": "function",
              "name": "rem"
            },
            {
              "type": "variable",
              "name": "spacing-medium"
            }
          ],
          "file": {
            "path": "stylesheets\\typography\\_typography-lists.scss",
            "name": "_typography-lists.scss"
          },
          "groupName": {
            "typography": "Typography"
          }
        }
      ],
      "variable": [
        {
          "description": "<p>A map of named font sizes to their corresponding modular scale factor</p>\n",
          "commentRange": {
            "start": 5,
            "end": 13
          },
          "context": {
            "type": "variable",
            "name": "named-font-sizes",
            "value": "(\n  h1: 7,\n  h2: 6,\n  h3: 5,\n  h4: 4,\n  h5: 3,\n  h6: 2,\n  lead: 1,\n  p: 0\n)",
            "scope": "private",
            "line": {
              "start": 14,
              "end": 23
            }
          },
          "property": [
            {
              "type": "Integer",
              "name": "h1",
              "default": "6",
              "description": "<p>Heading 1</p>\n",
              "resolvedValue": "6"
            },
            {
              "type": "Integer",
              "name": "h2",
              "default": "5",
              "description": "<p>Heading 2</p>\n",
              "resolvedValue": "5"
            },
            {
              "type": "Integer",
              "name": "h3",
              "default": "4",
              "description": "<p>Heading 3</p>\n",
              "resolvedValue": "4"
            },
            {
              "type": "Integer",
              "name": "h4",
              "default": "3",
              "description": "<p>Heading 4</p>\n",
              "resolvedValue": "3"
            },
            {
              "type": "Integer",
              "name": "h5",
              "default": "2",
              "description": "<p>Heading 5</p>\n",
              "resolvedValue": "2"
            },
            {
              "type": "Integer",
              "name": "h6",
              "default": "1",
              "description": "<p>Heading 6</p>\n",
              "resolvedValue": "1"
            },
            {
              "type": "Integer",
              "name": "p",
              "default": "0",
              "description": "<p>Paragraph</p>\n",
              "resolvedValue": "0"
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\typography\\_typography-settings.scss",
            "name": "_typography-settings.scss"
          },
          "usedBy": [
            {
              "description": "<p>Gets a numeric scale</p>\n",
              "context": {
                "type": "function",
                "name": "get-scale-integer",
                "code": "\n  @if map-has-key($named-font-sizes, $scale) {\n    @return map-get($named-font-sizes, $scale);\n  }\n  @elseif is-integer($scale) {\n    @return $scale;\n  }\n\n  @error '`$scale` must either be an integer or exist as a named font size in `$named-font-sizes`';\n",
                "line": {
                  "start": 16,
                  "end": 25
                }
              }
            },
            {
              "description": "<p>Gets a numeric scale</p>\n",
              "context": {
                "type": "function",
                "name": "get-scale-integer",
                "code": "\n  @if map-has-key($named-font-sizes, $scale) {\n    @return map-get($named-font-sizes, $scale);\n  }\n  @elseif is-integer($scale) {\n    @return $scale;\n  }\n\n  @error '`$scale` must either be an integer or exist as a named font size in `$named-font-sizes`';\n",
                "line": {
                  "start": 16,
                  "end": 25
                }
              }
            },
            {
              "description": "<p>Gets a numeric scale</p>\n",
              "context": {
                "type": "function",
                "name": "get-scale-integer",
                "code": "\n  @if map-has-key($named-font-sizes, $scale) {\n    @return map-get($named-font-sizes, $scale);\n  }\n  @elseif is-integer($scale) {\n    @return $scale;\n  }\n\n  @error '`$scale` must either be an integer or exist as a named font size in `$named-font-sizes`';\n",
                "line": {
                  "start": 16,
                  "end": 25
                }
              }
            }
          ],
          "groupName": {
            "typography": "Typography"
          },
          "resolvedValue": "(\n  h1: 7,\n  h2: 6,\n  h3: 5,\n  h4: 4,\n  h5: 3,\n  h6: 2,\n  lead: 1,\n  p: 0\n)"
        },
        {
          "description": "<p>Numeric font sizes</p>\n",
          "commentRange": {
            "start": 25,
            "end": 26
          },
          "context": {
            "type": "variable",
            "name": "font-sizes",
            "value": "(\n  // sass-lint:disable-block space-around-operator\n  -1: (\n    fs: 14,\n    lh: 4 * 5,\n    fw: 400,\n    mb: $spacing-medium,\n    mt: $spacing-medium\n  ),\n  // Paragraphs\n  0: (\n    fs: 4 * 4,\n    lh: 4 * 6,\n    fw: 400,\n    mb: $spacing-medium,\n    mt: $spacing-medium\n  ),\n  // Lead\n  1: (\n    fs: 4 * 5,\n    lh: 4 * 7,\n    fw: 400,\n    mb: $spacing-medium,\n    mt: $spacing-medium\n  ),\n  // h6\n  2: (\n    fs: 4 * 4,\n    lh: 4 * 5,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h5\n  3: (\n    fs: 4 * 5,\n    lh: 4 * 6,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h4\n  4: (\n    fs: 4 * 6,\n    lh: 4 * 7,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h3\n  5: (\n    fs: 4 * 7,\n    lh: 4 * 8,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h2\n  6: (\n    fs: 4 * 9,\n    lh: 4 * 10,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h1\n  7: (\n    fs: 4 * 11,\n    lh: 4 * 12,\n    fw: 900,\n    mb: $spacing-medium,\n    mt: 0,\n  )\n)",
            "scope": "private",
            "line": {
              "start": 27,
              "end": 100
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "group": [
            "typography"
          ],
          "access": "public",
          "file": {
            "path": "stylesheets\\typography\\_typography-settings.scss",
            "name": "_typography-settings.scss"
          },
          "usedBy": [
            {
              "description": "<p>Gets a numeric font size (in px) from a given scale multiplier.\nUsually not used directly - the font-size or font mixin is usually used instead.</p>\n",
              "context": {
                "type": "function",
                "name": "get-font-size",
                "code": "\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n  @return map-get($font-map, fs);\n",
                "line": {
                  "start": 37,
                  "end": 41
                }
              }
            },
            {
              "description": "<p>Gets a numeric line height (in px) from a given scale multiplier.\nUsually not used directly - the font-size or font mixin is usually used instead.</p>\n",
              "context": {
                "type": "function",
                "name": "get-line-height",
                "code": "\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n  @return map-get($font-map, lh);\n",
                "line": {
                  "start": 52,
                  "end": 56
                }
              }
            },
            {
              "description": "<p>Nice font: includes font size, line height, and margins.</p>\n",
              "context": {
                "type": "mixin",
                "name": "font",
                "code": "\n  @include font-size($scale);\n\n  $scale-integer: get-scale-integer($scale);\n  $font-map: map-get($font-sizes, $scale-integer);\n\n  font-weight: map-get($font-map, fw);\n  margin-bottom: rem(map-get($font-map, mb));\n  margin-top: rem(map-get($font-map, mt));\n",
                "line": {
                  "start": 88,
                  "end": 97
                }
              }
            }
          ],
          "groupName": {
            "typography": "Typography"
          },
          "resolvedValue": "(\n  // sass-lint:disable-block space-around-operator\n  -1: (\n    fs: 14,\n    lh: 4 * 5,\n    fw: 400,\n    mb: $spacing-medium,\n    mt: $spacing-medium\n  ),\n  // Paragraphs\n  0: (\n    fs: 4 * 4,\n    lh: 4 * 6,\n    fw: 400,\n    mb: $spacing-medium,\n    mt: $spacing-medium\n  ),\n  // Lead\n  1: (\n    fs: 4 * 5,\n    lh: 4 * 7,\n    fw: 400,\n    mb: $spacing-medium,\n    mt: $spacing-medium\n  ),\n  // h6\n  2: (\n    fs: 4 * 4,\n    lh: 4 * 5,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h5\n  3: (\n    fs: 4 * 5,\n    lh: 4 * 6,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h4\n  4: (\n    fs: 4 * 6,\n    lh: 4 * 7,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h3\n  5: (\n    fs: 4 * 7,\n    lh: 4 * 8,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h2\n  6: (\n    fs: 4 * 9,\n    lh: 4 * 10,\n    fw: 700,\n    mb: $spacing-medium,\n    mt: $spacing-large\n  ),\n  // h1\n  7: (\n    fs: 4 * 11,\n    lh: 4 * 12,\n    fw: 900,\n    mb: $spacing-medium,\n    mt: 0,\n  )\n)"
        }
      ]
    },
    "undefined": {
      "variable": [
        {
          "description": "<p>Modular scale values</p>\n",
          "commentRange": {
            "start": 1,
            "end": 19
          },
          "context": {
            "type": "variable",
            "name": "scales",
            "value": "(\n  golden: 1.618034,\n  double-octave: 4 / 1,\n  major-twelfth: 3 / 1,\n  major-eleventh: 8 / 3,\n  major-tenth: 5 / 2,\n  octave: 2 / 1,\n  major-seventh: 15 / 8,\n  minor-seventh: 16 / 9,\n  major-sixth: 5 / 3,\n  minor-sixth: 8 / 5,\n  fifth: 3 / 2,\n  augmented-fourth: sqrt(2) / 1,\n  fourth: 4 / 3,\n  major-third: 5 / 4,\n  minor-third: 6 / 5,\n  major-second: 9 / 8,\n  minor-second: 16 / 15\n)",
            "scope": "private",
            "line": {
              "start": 20,
              "end": 38
            }
          },
          "link": [
            {
              "url": "http://www.modularscale.com/",
              "caption": ""
            }
          ],
          "property": [
            {
              "type": "Number",
              "name": "golden",
              "default": "1.618034",
              "resolvedValue": "1.618034"
            },
            {
              "type": "Number",
              "name": "double-octave",
              "default": "4",
              "resolvedValue": "4"
            },
            {
              "type": "Number",
              "name": "major-twelfth",
              "default": "3",
              "resolvedValue": "3"
            },
            {
              "type": "Number",
              "name": "major-eleventh",
              "default": "2.666666667",
              "resolvedValue": "2.666666667"
            },
            {
              "type": "Number",
              "name": "major-tenth",
              "default": "2.5",
              "resolvedValue": "2.5"
            },
            {
              "type": "Number",
              "name": "octave",
              "default": "2",
              "resolvedValue": "2"
            },
            {
              "type": "Number",
              "name": "major-seventh",
              "default": "1.875",
              "resolvedValue": "1.875"
            },
            {
              "type": "Number",
              "name": "minor-seventh",
              "default": "1.777777778",
              "resolvedValue": "1.777777778"
            },
            {
              "type": "Number",
              "name": "major-sixth",
              "default": "1.666666667",
              "resolvedValue": "1.666666667"
            },
            {
              "type": "Number",
              "name": "minor-sixth",
              "default": "1.6",
              "resolvedValue": "1.6"
            },
            {
              "type": "Number",
              "name": "fifth",
              "default": "1.5",
              "resolvedValue": "1.5"
            },
            {
              "type": "Number",
              "name": "augmented-fourth",
              "default": "1.41421",
              "resolvedValue": "1.41421"
            },
            {
              "type": "Number",
              "name": "major-third",
              "default": "1.25",
              "resolvedValue": "1.25"
            },
            {
              "type": "Number",
              "name": "minor-third",
              "default": "1.2",
              "resolvedValue": "1.2"
            },
            {
              "type": "Number",
              "name": "major-second[1.125]"
            },
            {
              "type": "Number",
              "name": "minor-second[1.066666667]"
            }
          ],
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-modular-scale.scss",
            "name": "_settings-modular-scale.scss"
          },
          "usedBy": [
            {
              "description": "<p>Gets a module scale ratio with the given name. Looks\ninside the $scales map to find a ratio.</p>\n",
              "context": {
                "type": "function",
                "name": "get-ratio",
                "code": "\n  @if map-has-key($scales, $scale) {\n    @return map-get($scales, $scale);\n  } @else {\n    @error 'Scale with name #{$scale} could not be found in the $scales map';\n  }\n",
                "line": {
                  "start": 45,
                  "end": 51
                }
              }
            },
            {
              "description": "<p>Gets a module scale ratio with the given name. Looks\ninside the $scales map to find a ratio.</p>\n",
              "context": {
                "type": "function",
                "name": "get-ratio",
                "code": "\n  @if map-has-key($scales, $scale) {\n    @return map-get($scales, $scale);\n  } @else {\n    @error 'Scale with name #{$scale} could not be found in the $scales map';\n  }\n",
                "line": {
                  "start": 45,
                  "end": 51
                }
              }
            },
            {
              "description": "<p>Gets a module scale ratio with the given name. Looks\ninside the $scales map to find a ratio.</p>\n",
              "context": {
                "type": "function",
                "name": "get-ratio",
                "code": "\n  @if map-has-key($scales, $scale) {\n    @return map-get($scales, $scale);\n  } @else {\n    @error 'Scale with name #{$scale} could not be found in the $scales map';\n  }\n",
                "line": {
                  "start": 45,
                  "end": 51
                }
              }
            }
          ],
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "(\n  golden: 1.618034,\n  double-octave: 4 / 1,\n  major-twelfth: 3 / 1,\n  major-eleventh: 8 / 3,\n  major-tenth: 5 / 2,\n  octave: 2 / 1,\n  major-seventh: 15 / 8,\n  minor-seventh: 16 / 9,\n  major-sixth: 5 / 3,\n  minor-sixth: 8 / 5,\n  fifth: 3 / 2,\n  augmented-fourth: sqrt(2) / 1,\n  fourth: 4 / 3,\n  major-third: 5 / 4,\n  minor-third: 6 / 5,\n  major-second: 9 / 8,\n  minor-second: 16 / 15\n)"
        },
        {
          "description": "<p>Baseline, in pixels</p>\n",
          "commentRange": {
            "start": 1,
            "end": 2
          },
          "context": {
            "type": "variable",
            "name": "nice-baseline",
            "value": "4",
            "scope": "default",
            "line": {
              "start": 3,
              "end": 3
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "4"
        },
        {
          "description": "<p>Base font size, in pixels</p>\n",
          "commentRange": {
            "start": 5,
            "end": 6
          },
          "context": {
            "type": "variable",
            "name": "nice-base-font-size",
            "value": "$nice-baseline * 4",
            "scope": "default",
            "line": {
              "start": 7,
              "end": 7
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "$nice-baseline * 4"
        },
        {
          "description": "<p>Base line height, in pixels</p>\n",
          "commentRange": {
            "start": 9,
            "end": 10
          },
          "context": {
            "type": "variable",
            "name": "nice-base-line-height",
            "value": "$nice-baseline * 6",
            "scope": "default",
            "line": {
              "start": 11,
              "end": 11
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "$nice-baseline * 6"
        },
        {
          "description": "<p>The width of the default spacing between grid items</p>\n",
          "commentRange": {
            "start": 13,
            "end": 14
          },
          "context": {
            "type": "variable",
            "name": "nice-grid-gutter",
            "value": "1em * ($spacing-medium / 16)",
            "scope": "default",
            "line": {
              "start": 15,
              "end": 15
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "usedBy": [
            {
              "description": "<p>Grid mixin for applying to custom classes when creating a custom component\nand creating &#39;semantic&#39; (sensible) class names.</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid",
                "code": "\n  letter-spacing: -.31em; // Remove whitespace caused by `inline-block` elements\n  list-style: none; // Allow the grid system to be used on lists.\n  margin: 0; // Remove any margins that might affect the grid system.\n  margin-left: -$nice-grid-gutter; // Apply a negative `margin-left` to negate the columns’ gutters.\n  padding: 0; // Remove any paddings that might affect the grid system.\n\n  @if $reverse {\n    @include grid-reverse;\n  }\n\n  @if $gutterless {\n    @include grid-gutterless;\n  }\n\n  @if $compact {\n    @include grid-compact;\n  }\n\n  @if $loose {\n    @include grid-loose;\n  }\n\n  @if $right {\n    @include grid-right;\n  }\n\n  @if $center {\n    @include grid-center;\n  }\n\n  @if $debug {\n    @include grid-debug;\n  }\n",
                "line": {
                  "start": 42,
                  "end": 76
                }
              }
            },
            {
              "description": "<p>Grid item mixin. Used in tandem with the <code>grid</code> mixin for creating semantic grid\nclasses within custom componenents.</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid-item",
                "code": "\n  @include border-box;\n  direction: ltr;\n  display: inline-block;\n  letter-spacing: normal;\n  padding-left: $nice-grid-gutter;\n  position: relative;\n  text-align: left;\n  vertical-align: top;\n  width: percentage($columns / 12);\n  word-spacing: normal;\n\n  @if $push {\n    left: percentage($push / 12);\n  }\n\n  @if $pull {\n    right: percentage($pull / 12);\n  }\n\n  @if $gutterless {\n    @include grid-item-gutterless;\n  }\n\n  @if $compact {\n    @include grid-item-compact;\n  }\n\n  @if $loose {\n    @include grid-item-loose;\n  }\n\n  @if $middle {\n    @include grid-item-middle;\n  }\n\n  @if $bottom {\n    @include grid-item-bottom;\n  }\n\n  @include _grid-item-breakpoint($xs, xs);\n  @include _grid-item-breakpoint($sm, sm);\n  @include _grid-item-breakpoint($md, md);\n  @include _grid-item-breakpoint($lg, lg);\n  @include _grid-item-breakpoint($xl, xl);\n",
                "line": {
                  "start": 180,
                  "end": 238
                }
              }
            }
          ],
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "1em * ($spacing-medium / 16)"
        },
        {
          "description": "<p>The width of the spacing between grid items in a compact grid</p>\n",
          "commentRange": {
            "start": 17,
            "end": 18
          },
          "context": {
            "type": "variable",
            "name": "nice-grid-gutter-compact",
            "value": "1em * ($spacing-small / 16)",
            "scope": "default",
            "line": {
              "start": 19,
              "end": 19
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "usedBy": [
            {
              "description": "<p>Compact grids have a smaller gutter</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid-compact",
                "code": "\n  margin-left: -$nice-grid-gutter-compact;\n",
                "line": {
                  "start": 96,
                  "end": 98
                }
              }
            },
            {
              "description": "<p>Compact grid item with a smaller gutter</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid-item-compact",
                "code": "\n  padding-left: $nice-grid-gutter-compact;\n",
                "line": {
                  "start": 248,
                  "end": 250
                }
              }
            }
          ],
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "1em * ($spacing-small / 16)"
        },
        {
          "description": "<p>The width of the spacing between grid items in a loose grid</p>\n",
          "commentRange": {
            "start": 21,
            "end": 22
          },
          "context": {
            "type": "variable",
            "name": "nice-grid-gutter-loose",
            "value": "1em * ($spacing-large / 16)",
            "scope": "default",
            "line": {
              "start": 23,
              "end": 23
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "usedBy": [
            {
              "description": "<p>Loose grids have a smaller gutter</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid-loose",
                "code": "\n  margin-left: -$nice-grid-gutter-loose;\n",
                "line": {
                  "start": 103,
                  "end": 105
                }
              }
            },
            {
              "description": "<p>Loose grid item with a larger gutter</p>\n",
              "context": {
                "type": "mixin",
                "name": "grid-item-loose",
                "code": "\n  padding-left: $nice-grid-gutter-loose;\n",
                "line": {
                  "start": 254,
                  "end": 256
                }
              }
            }
          ],
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "1em * ($spacing-large / 16)"
        },
        {
          "description": "<p>Sans-serif font stack</p>\n",
          "commentRange": {
            "start": 25,
            "end": 26
          },
          "context": {
            "type": "variable",
            "name": "nice-font-family-sans",
            "value": "'\"Lato\", \"Helvetica Neue\", Helvetica, Arial, sans-serif'",
            "scope": "default",
            "line": {
              "start": 27,
              "end": 27
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "'\"Lato\", \"Helvetica Neue\", Helvetica, Arial, sans-serif'"
        },
        {
          "description": "<p>Serif font stack</p>\n",
          "commentRange": {
            "start": 29,
            "end": 30
          },
          "context": {
            "type": "variable",
            "name": "nice-font-family-serif",
            "value": "'Georgia, \"Times New Roman\", Times, serif'",
            "scope": "default",
            "line": {
              "start": 31,
              "end": 31
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "'Georgia, \"Times New Roman\", Times, serif'"
        },
        {
          "description": "<p>Mono font stack</p>\n",
          "commentRange": {
            "start": 33,
            "end": 34
          },
          "context": {
            "type": "variable",
            "name": "nice-font-family-mono",
            "value": "'Monaco, Menlo, Consolas, \"Courier New\", monospace'",
            "scope": "default",
            "line": {
              "start": 35,
              "end": 35
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "'Monaco, Menlo, Consolas, \"Courier New\", monospace'"
        },
        {
          "description": "<p>The font families in use across NICE.</p>\n",
          "commentRange": {
            "start": 37,
            "end": 42
          },
          "context": {
            "type": "variable",
            "name": "nice-font-families",
            "value": "(\n  sans: $nice-font-family-sans,\n  serif: $nice-font-family-serif,\n  mono: $nice-font-family-mono\n)",
            "scope": "default",
            "line": {
              "start": 43,
              "end": 47
            }
          },
          "property": [
            {
              "type": "Font stack",
              "name": "sans",
              "default": "Lato, Helvetica Neue, Helvetica, Arial, sans-serif",
              "description": "<p>The sans-serif font stack</p>\n",
              "resolvedValue": "Lato, Helvetica Neue, Helvetica, Arial, sans-serif"
            },
            {
              "type": "Font stack",
              "name": "serif",
              "default": "Georgia, \"Times New Roman\", Times, serif",
              "description": "<p>The serif font stack</p>\n",
              "resolvedValue": "Georgia, \"Times New Roman\", Times, serif"
            },
            {
              "type": "Font stack",
              "name": "mono",
              "default": "Monaco, Menlo, Consolas, \"Courier New\", monospace",
              "description": "<p>The monospace font stack</p>\n",
              "resolvedValue": "Monaco, Menlo, Consolas, \"Courier New\", monospace"
            }
          ],
          "see": [
            {
              "description": "<p>Gets a font family from the <code>$nice-font-families</code> map, given a name</p>\n",
              "context": {
                "type": "function",
                "name": "font-family",
                "code": "\n  $result: map-get($nice-font-families, $stack);\n  @return unquote($result);\n",
                "line": {
                  "start": 8,
                  "end": 11
                }
              }
            }
          ],
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "usedBy": [
            {
              "description": "<p>Gets a font family from the <code>$nice-font-families</code> map, given a name</p>\n",
              "context": {
                "type": "function",
                "name": "font-family",
                "code": "\n  $result: map-get($nice-font-families, $stack);\n  @return unquote($result);\n",
                "line": {
                  "start": 8,
                  "end": 11
                }
              }
            }
          ],
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "(\n  sans: $nice-font-family-sans,\n  serif: $nice-font-family-serif,\n  mono: $nice-font-family-mono\n)"
        },
        {
          "description": "<p>The modular scale ratio to use for typography</p>\n",
          "commentRange": {
            "start": 49,
            "end": 50
          },
          "context": {
            "type": "variable",
            "name": "nice-type-ratio",
            "value": "get-ratio(fourth)",
            "scope": "default",
            "line": {
              "start": 51,
              "end": 51
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "get-ratio(fourth)"
        },
        {
          "description": "<p>Extra small break point</p>\n",
          "commentRange": {
            "start": 53,
            "end": 54
          },
          "context": {
            "type": "variable",
            "name": "nice-breakpoint-xs",
            "value": "400px",
            "scope": "default",
            "line": {
              "start": 55,
              "end": 55
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "400px"
        },
        {
          "description": "<p>&#39;Small&#39; break point. Roughly portrait tablets.</p>\n",
          "commentRange": {
            "start": 57,
            "end": 58
          },
          "context": {
            "type": "variable",
            "name": "nice-breakpoint-sm",
            "value": "600px",
            "scope": "default",
            "line": {
              "start": 59,
              "end": 59
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "600px"
        },
        {
          "description": "<p>&#39;Medium&#39; break point. Roughly landscape tablets.</p>\n",
          "commentRange": {
            "start": 61,
            "end": 62
          },
          "context": {
            "type": "variable",
            "name": "nice-breakpoint-md",
            "value": "900px",
            "scope": "default",
            "line": {
              "start": 63,
              "end": 63
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "900px"
        },
        {
          "description": "<p>&#39;Large&#39; break point. Roughly &#39;dektops&#39;.</p>\n",
          "commentRange": {
            "start": 65,
            "end": 66
          },
          "context": {
            "type": "variable",
            "name": "nice-breakpoint-lg",
            "value": "1200px",
            "scope": "default",
            "line": {
              "start": 67,
              "end": 67
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "1200px"
        },
        {
          "description": "<p>&#39;Extra large&#39; break point for wide screens</p>\n",
          "commentRange": {
            "start": 69,
            "end": 70
          },
          "context": {
            "type": "variable",
            "name": "nice-breakpoint-xl",
            "value": "1600px",
            "scope": "default",
            "line": {
              "start": 71,
              "end": 71
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "1600px"
        },
        {
          "description": "<p>The minimum root font size, in pixels</p>\n",
          "commentRange": {
            "start": 73,
            "end": 74
          },
          "context": {
            "type": "variable",
            "name": "nice-root-font-size-min",
            "value": "15",
            "scope": "private",
            "line": {
              "start": 75,
              "end": 75
            }
          },
          "since": [
            {
              "version": "0.2.13"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "15"
        },
        {
          "description": "<p>The maximum root font size, used from breakpoint <code>$nice-root-font-size-max-breakpoint</code></p>\n",
          "commentRange": {
            "start": 77,
            "end": 78
          },
          "context": {
            "type": "variable",
            "name": "nice-root-font-size-max",
            "value": "19",
            "scope": "private",
            "line": {
              "start": 79,
              "end": 79
            }
          },
          "since": [
            {
              "version": "0.2.13"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "19"
        },
        {
          "description": "<p>The breakpoint at which the root font size starts changing from minimum\ntowards maximum.</p>\n",
          "commentRange": {
            "start": 81,
            "end": 83
          },
          "context": {
            "type": "variable",
            "name": "nice-root-font-size-min-breakpoint",
            "value": "$nice-breakpoint-md",
            "scope": "private",
            "line": {
              "start": 84,
              "end": 84
            }
          },
          "since": [
            {
              "version": "0.2.13"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "900px"
        },
        {
          "description": "<p>The breakpoint at which the root font size stops changing and is at its maximum\ntowards maximum.</p>\n",
          "commentRange": {
            "start": 86,
            "end": 88
          },
          "context": {
            "type": "variable",
            "name": "nice-root-font-size-max-breakpoint",
            "value": "$nice-breakpoint-lg",
            "scope": "private",
            "line": {
              "start": 89,
              "end": 89
            }
          },
          "since": [
            {
              "version": "0.2.13"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "1200px"
        },
        {
          "description": "<p>Whether to output a default set of generic print styles for things\nlike avoiding page breaks after headings etc. If you disabled this,\nbe sure to add your own print styles.</p>\n",
          "commentRange": {
            "start": 91,
            "end": 94
          },
          "context": {
            "type": "variable",
            "name": "nice-output-default-print-styles",
            "value": "true",
            "scope": "default",
            "line": {
              "start": 95,
              "end": 95
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "true"
        },
        {
          "description": "<p>Whether to output the classes for the UTF-8 glyphs.</p>\n",
          "commentRange": {
            "start": 97,
            "end": 98
          },
          "context": {
            "type": "variable",
            "name": "nice-output-glyph-classes",
            "value": "false",
            "scope": "default",
            "line": {
              "start": 99,
              "end": 99
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "false"
        },
        {
          "description": "<p>Whether the site is responsive. Setting to false will disable\ngeneration of the responsie grid selectors.\nTrue by default.</p>\n",
          "commentRange": {
            "start": 101,
            "end": 104
          },
          "context": {
            "type": "variable",
            "name": "nice-responsive",
            "value": "true",
            "scope": "default",
            "line": {
              "start": 105,
              "end": 105
            }
          },
          "since": [
            {
              "version": "0.2.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-variables.scss",
            "name": "_settings-variables.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          },
          "resolvedValue": "true"
        }
      ],
      "function": [
        {
          "description": "<p>Gets a module scale ratio with the given name. Looks\ninside the $scales map to find a ratio.</p>\n",
          "commentRange": {
            "start": 40,
            "end": 44
          },
          "context": {
            "type": "function",
            "name": "get-ratio",
            "code": "\n  @if map-has-key($scales, $scale) {\n    @return map-get($scales, $scale);\n  } @else {\n    @error 'Scale with name #{$scale} could not be found in the $scales map';\n  }\n",
            "line": {
              "start": 45,
              "end": 51
            }
          },
          "parameter": [
            {
              "name": "scale",
              "description": "<p>The name of the scale</p>\n"
            }
          ],
          "return": {
            "type": "Number",
            "description": "<p>The numeric scale ratio for the given name</p>\n"
          },
          "since": [
            {
              "version": "0.1.0"
            }
          ],
          "access": "public",
          "group": [
            "undefined"
          ],
          "require": [
            {
              "type": "variable",
              "name": "scales"
            },
            {
              "type": "variable",
              "name": "scales"
            },
            {
              "type": "variable",
              "name": "scales"
            }
          ],
          "throw": [
            "<p>Scale with name #{$scale} could not be found in the $scales map</p>\n"
          ],
          "file": {
            "path": "stylesheets\\settings\\_settings-modular-scale.scss",
            "name": "_settings-modular-scale.scss"
          },
          "groupName": {
            "undefined": "Ungrouped"
          }
        }
      ]
    }
  }
}