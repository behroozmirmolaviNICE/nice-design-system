
{
	"logger": {},
	"fontBaseName": "typography-icons",
	"destCss": "dist/fonts",
	"destScss": "src/stylesheets/typography",
	"destSass": "dist/fonts",
	"destLess": "dist/fonts",
	"destStyl": "dist/fonts",
	"dest": "dist/fonts",
	"relativeFontPath": "/fonts/",
	"addHashes": true,
	"addLigatures": false,
	"template": "src/icons/.nice-icons.tmpl.scss",
	"syntax": "bem",
	"templateOptions": {},
	"stylesheets": [
		"scss"
	],
	"htmlDemo": false,
	"styles": [
		"font",
		"icon"
	],
	"types": [
		"eot",
		"woff2",
		"woff",
		"ttf",
		"svg"
	],
	"order": [
		"eot",
		"woff2",
		"woff",
		"ttf",
		"svg"
	],
	"embed": [],
	"engine": "node",
	"autoHint": false,
	"codepoints": [
		"f101",
		"f102",
		"f103",
		"f104",
		"f105",
		"f106",
		"f107",
		"f108",
		"f109",
		"f10a",
		"f10b",
		"f10c",
		"f10d",
		"f10e",
		"f10f",
		"f110",
		"f111",
		"f112",
		"f113",
		"f114",
		"f115",
		"f116",
		"f117",
		"f118",
		"f119",
		"f11a",
		"f11b",
		"f11c",
		"f11d",
		"f11e",
		"f11f",
		"f120",
		"f121",
		"f122",
		"f123",
		"f124",
		"f125",
		"f126",
		"f127",
		"f128",
		"f129",
		"f12a",
		"f12b",
		"f12c",
		"f12d",
		"f12e",
		"f12f",
		"f130",
		"f131",
		"f132",
		"f133",
		"f134",
		"f135",
		"f136",
		"f137",
		"f138",
		"f139",
		"f13a",
		"f13b",
		"f13c",
		"f13d",
		"f13e",
		"f13f",
		"f140",
		"f141",
		"f142",
		"f143",
		"f144",
		"f145",
		"f146",
		"f147",
		"f148",
		"f149",
		"f14a",
		"f14b",
		"f14c",
		"f14d",
		"f14e",
		"f14f",
		"f150",
		"f151",
		"f152",
		"f153",
		"f154"
	],
	"startCodepoint": 61697,
	"ie7": false,
	"normalize": true,
	"optimize": false,
	"round": 10000000000000,
	"fontHeight": 512,
	"descent": 64,
	"version": false,
	"cache": "C:\\Users\\iroutledge\\Documents\\Dev\\NICE-Experience\\node_modules\\grunt-webfont\\.cache",
	"customOutputs": [
		{
			"template": "src/icons/.nice-icons.tmpl.js",
			"dest": "dist/docs/fonts/nice-icons.json"
		}
	],
	"execMaxBuffer": 204800,
	"fontName": "typography-icons",
	"destCssPaths": {
		"css": "dist/fonts",
		"scss": "src/stylesheets/typography",
		"sass": "dist/fonts",
		"less": "dist/fonts",
		"styl": "dist/fonts"
	},
	"destHtml": "dist/fonts",
	"fontfaceStyles": true,
	"baseStyles": true,
	"extraStyles": false,
	"files": [
		"src/icons/adjust.svg",
		"src/icons/angle-down.svg",
		"src/icons/angle-left.svg",
		"src/icons/angle-right.svg",
		"src/icons/angle-up.svg",
		"src/icons/apps.svg",
		"src/icons/bookmark.svg",
		"src/icons/calendar.svg",
		"src/icons/capsule.svg",
		"src/icons/caret-down.svg",
		"src/icons/caret-left.svg",
		"src/icons/caret-right.svg",
		"src/icons/caret-up.svg",
		"src/icons/chevron-down.svg",
		"src/icons/chevron-left.svg",
		"src/icons/chevron-right.svg",
		"src/icons/chevron-up.svg",
		"src/icons/circle-blank.svg",
		"src/icons/circle.svg",
		"src/icons/cloud-download.svg",
		"src/icons/cloud-upload.svg",
		"src/icons/double-angle-down.svg",
		"src/icons/double-angle-left.svg",
		"src/icons/double-angle-right.svg",
		"src/icons/double-angle-up.svg",
		"src/icons/download.svg",
		"src/icons/email-closed.svg",
		"src/icons/email-open.svg",
		"src/icons/evidence.svg",
		"src/icons/facebook-square.svg",
		"src/icons/facebook.svg",
		"src/icons/file-blank.svg",
		"src/icons/file-text.svg",
		"src/icons/file.svg",
		"src/icons/filter.svg",
		"src/icons/fullscreen.svg",
		"src/icons/google-plus.svg",
		"src/icons/group.svg",
		"src/icons/guidance.svg",
		"src/icons/guideline.svg",
		"src/icons/hamburger.svg",
		"src/icons/infoforpublic.svg",
		"src/icons/information.svg",
		"src/icons/lines.svg",
		"src/icons/linkedin-square.svg",
		"src/icons/linkedin.svg",
		"src/icons/logo-name.svg",
		"src/icons/logo.svg",
		"src/icons/minus.svg",
		"src/icons/news.svg",
		"src/icons/next.svg",
		"src/icons/ok.svg",
		"src/icons/pathways-node.svg",
		"src/icons/pathways.svg",
		"src/icons/play.svg",
		"src/icons/plus-circle.svg",
		"src/icons/plus.svg",
		"src/icons/podcast.svg",
		"src/icons/prescribing.svg",
		"src/icons/previous.svg",
		"src/icons/print.svg",
		"src/icons/quote-left.svg",
		"src/icons/quote-right.svg",
		"src/icons/readnews.svg",
		"src/icons/remove.svg",
		"src/icons/search.svg",
		"src/icons/share.svg",
		"src/icons/sort-down.svg",
		"src/icons/sort-up.svg",
		"src/icons/sort.svg",
		"src/icons/spinner.svg",
		"src/icons/standards.svg",
		"src/icons/stop.svg",
		"src/icons/support.svg",
		"src/icons/syndication.svg",
		"src/icons/trash.svg",
		"src/icons/twitter-square.svg",
		"src/icons/twitter.svg",
		"src/icons/uptake.svg",
		"src/icons/user.svg",
		"src/icons/warning.svg",
		"src/icons/youtube-play.svg",
		"src/icons/youtube-square.svg",
		"src/icons/youtube.svg"
	],
	"glyphs": [
		"adjust",
		"angle-down",
		"angle-left",
		"angle-right",
		"angle-up",
		"apps",
		"bookmark",
		"calendar",
		"capsule",
		"caret-down",
		"caret-left",
		"caret-right",
		"caret-up",
		"chevron-down",
		"chevron-left",
		"chevron-right",
		"chevron-up",
		"circle-blank",
		"circle",
		"cloud-download",
		"cloud-upload",
		"double-angle-down",
		"double-angle-left",
		"double-angle-right",
		"double-angle-up",
		"download",
		"email-closed",
		"email-open",
		"evidence",
		"facebook-square",
		"facebook",
		"file-blank",
		"file-text",
		"file",
		"filter",
		"fullscreen",
		"google-plus",
		"group",
		"guidance",
		"guideline",
		"hamburger",
		"infoforpublic",
		"information",
		"lines",
		"linkedin-square",
		"linkedin",
		"logo-name",
		"logo",
		"minus",
		"news",
		"next",
		"ok",
		"pathways-node",
		"pathways",
		"play",
		"plus-circle",
		"plus",
		"podcast",
		"prescribing",
		"previous",
		"print",
		"quote-left",
		"quote-right",
		"readnews",
		"remove",
		"search",
		"share",
		"sort-down",
		"sort-up",
		"sort",
		"spinner",
		"standards",
		"stop",
		"support",
		"syndication",
		"trash",
		"twitter-square",
		"twitter",
		"uptake",
		"user",
		"warning",
		"youtube-play",
		"youtube-square",
		"youtube"
	],
	"hash": "744111b897c3e550da3c038821b58e76",
	"fontFilename": "nice-icons",
	"fontFamilyName": "NICE Icons",
	"fontSrc1": "url(\"/fonts/nice-icons.eot?744111b897c3e550da3c038821b58e76\")",
	"fontSrc2": "url(\"/fonts/nice-icons.eot?#iefix\") format(\"embedded-opentype\"),\n\t\turl(\"/fonts/nice-icons.woff2?744111b897c3e550da3c038821b58e76\") format(\"woff2\"),\n\t\turl(\"/fonts/nice-icons.woff?744111b897c3e550da3c038821b58e76\") format(\"woff\"),\n\t\turl(\"/fonts/nice-icons.ttf?744111b897c3e550da3c038821b58e76\") format(\"truetype\"),\n\t\turl(\"/fonts/nice-icons.svg?744111b897c3e550da3c038821b58e76#typography-icons\") format(\"svg\")",
	"fontRawSrcs": [
		[
			"url(\"/fonts/nice-icons.eot?744111b897c3e550da3c038821b58e76\")"
		],
		[
			"url(\"/fonts/nice-icons.eot?#iefix\") format(\"embedded-opentype\")",
			"url(\"/fonts/nice-icons.woff2?744111b897c3e550da3c038821b58e76\") format(\"woff2\")",
			"url(\"/fonts/nice-icons.woff?744111b897c3e550da3c038821b58e76\") format(\"woff\")",
			"url(\"/fonts/nice-icons.ttf?744111b897c3e550da3c038821b58e76\") format(\"truetype\")",
			"url(\"/fonts/nice-icons.svg?744111b897c3e550da3c038821b58e76#typography-icons\") format(\"svg\")"
		]
	],
	"cssTemplate": {
		"filename": "C:\\Users\\iroutledge\\Documents\\Dev\\NICE-Experience\\src\\icons\\.nice-icons.tmpl.scss",
		"template": "////\n/// @group Icons\n////\n\n<%\n// This is a template for generating SASS for our icon font.\n// It generates:\n//  - A SASS map of icon name -> codepoint\n//  - A function for getting a codepoint from a name\n//  - A mixin\n//  - A BEM style class for each icon\n%>\n\n/* Generated by grunt-webfont */\n\n<%\n// See https://css-tricks.com/snippets/css/using-font-face/#article-header-id-0\n// for cross-browser font face rule\n%>\n\n$${ fontBaseName }-no-cache: random(999999999);\n\n/// Base path for loading font files\n/// Override this in your application if your path differs.\n/// E.g. if you want to replace it off a CDN you could change this to 'http://cdn.com/fonts/'\n$nice-font-base-path: '${ relativeFontPath }' !default;\n\n@font-face {\n  font-family: \"${ fontFamilyName }\";\n  font-style: normal;\n  font-weight: normal;\n  src: ${ fontSrc1.replace(new RegExp(hash + \"\\\"\", \"g\"), \"\\\" + $\" + fontBaseName + \"-no-cache\").replace(/\"\\/fonts\\//g, \"$nice-font-base-path + \\\"\") };\n  src: ${ fontSrc2.replace(new RegExp(hash + \"\\\"\", \"g\"), \"\\\" + $\" + fontBaseName + \"-no-cache\").replace(/\"\\/fonts\\//g, \"$nice-font-base-path + \\\"\").replace(new RegExp(hash + \"#\", \"g\"), \"\\\" + $\" + fontBaseName + \"-no-cache + \\\"#\") };\n}\n\n/// Map of icon name to codepoint.\n/// This map avoids the use of 'magic strings' for codepoints throught SASS code. The map is usually not used directly - use the nice-icon function/mixin instead.\n/// Please note - the values for codepoints are not fixed and may change each time the font is re-generated.\n<% _.forEach(glyphs, function(glyph, index) { %>/// @prop {string} ${ glyph } [${ codepoints[index] }] - <span class=\"icon icon--${ glyph }\" aria-hidden=\"true\"></span>\n<% }); %>\n$nice-icons: (\n  <% _.forEach(glyphs, function(glyph, index) { %>${ glyph }: \"${ codepoints[index] }\"<% if (index < glyphs.length - 1) { %>,\n  <% } %><% }); %>\n) !default;\n\n/// Base styles required for an icon including font family etc\n/// @example\n///   .test {\n///     @icnlude icon-base;\n///\n///     &:before {\n///       content: nice-icon(search);\n///     }\n///   }\n@mixin icon-base {\n  display: inline-block;\n  font-family: '${ fontFamilyName }';\n  font-style: normal;\n  font-weight: normal;\n  line-height: 1;\n  speak: none;\n  text-decoration: inherit;\n  text-rendering: auto;\n  text-transform: none;\n  vertical-align: baseline;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/// Applies the required styles for the given icon\n/// including the codepoint.\n/// @param {string} $icon - The name of the icon\n/// @throws Error when the given icon doesn't exist\n/// @example\n///   .search-icon {\n///     @include nice-icon(search);\n///   }\n@mixin nice-icon($icon) {\n  @if map-has-key($nice-icons, $icon) {\n    @include icon-base;\n    content: nice-icon($icon);\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n}\n\n/// Function for getting the codepoint for a given icon, for use\n/// within the `content` property of psuedo elements.\n/// @example\n///   .test {\n///     @icnlude icon-base;\n///\n///     &:before {\n///       content: nice-icon(search);\n///     }\n///   }\n@function nice-icon($icon) {\n  @if map-has-key($nice-icons, $icon) {\n    $icon-code: map-get($nice-icons, $icon);\n    @return unquote('\\'\\\\#{ $icon-code }\\'');\n  } @else {\n    @error 'Icons with name #{ $icon } could not be found in the $nice-icons map';\n  }\n}\n\n/// Class for rendering an icon.\n/// Use with a named modifier for an icon.\n/// @example\n///   <span class=\"icon icon--search\" aria-hidden=\"true\"></span>\n.icon {\n  @include icon-base;\n\n  &:before {\n    display: block;\n  }\n\n  @each $icon, $code in $nice-icons {\n    &--#{ $icon }:before {\n      content: nice-icon($icon);\n    }\n  }\n}\n"
	},
	"iconsStyles": true,
	"stylesheet": "scss"
}
