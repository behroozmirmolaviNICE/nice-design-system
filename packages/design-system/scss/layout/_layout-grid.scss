////
/// @group grid
////

/// Grid item default selector.
/// Use within a `.grid`.
/// Use the value of the data attribute to specify the grid item widths
/// mobile first. E.g "n w:m" where *n* and *m* are the number of columns and *w*
/// is the name of the breakpoint.
///
/// @example html HTML usage
///   <div class="grid">
///     <div data-g="12 xs:6 md:4 lg:one-quarter xl:2">Grid item</div>
///     <div data-g="12 xs:6 md:4 lg:one-quarter xl:2">Grid item</div>
///     <div data-g="12 xs:6 md:4 lg:one-quarter xl:2">Grid item</div>
///     <div data-g="12 xs:6 md:4 lg:one-quarter xl:2">Grid item</div>
///   </div>
[data-g] {
  @include grid-item;
}

/// Grid class for the grid wrapper. Expects direct children to be `[data-g]`
/// grid items. Use modifiers to affect grid behaviour as shown below:
///
/// Modifiers:
///   - `rev` - Reverses the grid direction from natural source order
///   - `gutterless` - Removes spacing and gutters from the grid
///   - `compact` - Uses tighter spacing and gutters
///   - `loose` - Uses looser spacing and gutters
///   - `right` - Right aligned grid items
///   - `center` - Horizontally center aligned grid items
///   - `middle` - Vertically middle aligned grid items
///   - `bottom` - Bottom aligned grid items
///
/// @example html
///   <div class="grid">
///     <div data-g="12 xs:6 md:4 lg:3 xl:2">Grid item</div>
///   </div>
.grid {
  @include grid;

  @include generate-grid-classes;

  &--rev {
    @include grid-reverse;
  }

  &--gutterless {
    @include grid-gutterless;

    > [data-g] {
      @include grid-item-gutterless;
    }
  }

  &--compact {
    @include grid-compact;

    > [data-g] {
      @include grid-item-compact;
    }
  }

  &--loose {
    @include grid-loose;

    > [data-g] {
      @include grid-item-loose;
    }
  }

  &--right {
    @include grid-right;
  }

  &--center {
    @include grid-center;
  }

  &--middle {
    > [data-g] {
      @include grid-item-middle;
    }
  }

  &--bottom {
    > [data-g] {
      @include grid-item-bottom;
    }
  }

  &--debug {
    @include grid-debug;

    [data-g] {
      @include grid-item-debug;
    }
  }

  // Add debug grid to body to show an outline on all grids
  .debug-grid & {
    @include grid-debug;

    [data-g] {
      @include grid-item-debug;
    }
  }

  @if $nice-responsive {
    @each $brkpnt-key, $brkpnt-value in $mq-breakpoints {
      @include mq($from: $brkpnt-key) {
        @include generate-grid-classes($brkpnt-key);
      }
    }
  }
}
